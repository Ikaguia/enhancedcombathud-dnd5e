{"version":3,"file":"./index.js","mappings":";mBACA,IAAIA,EAAsB,CCA1BA,EAAwB,CAACC,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXF,EAAoBI,EAAEF,EAAYC,KAASH,EAAoBI,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDH,EAAwB,CAACS,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,wnFCClFI,oBAAA,SAAAA,sBAAA,OAAAb,CAAA,MAAAA,EAAA,GAAAc,EAAAV,OAAAM,UAAAK,EAAAD,EAAAH,eAAAN,EAAAD,OAAAC,gBAAA,SAAAG,EAAAN,EAAAc,GAAAR,EAAAN,GAAAc,EAAAC,KAAA,EAAAC,EAAA,mBAAAC,OAAAA,OAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,OAAAlB,EAAAN,EAAAe,GAAA,OAAAb,OAAAC,eAAAG,EAAAN,EAAA,CAAAe,MAAAA,EAAAX,YAAA,EAAAqB,cAAA,EAAAC,UAAA,IAAApB,EAAAN,EAAA,KAAAwB,OAAA,aAAAG,GAAAH,OAAA,SAAAA,OAAAlB,EAAAN,EAAAe,GAAA,OAAAT,EAAAN,GAAAe,CAAA,WAAAa,KAAAC,EAAAC,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,GAAAA,EAAAtB,qBAAA0B,UAAAJ,EAAAI,UAAAC,EAAAjC,OAAAkC,OAAAH,EAAAzB,WAAA6B,EAAA,IAAAC,QAAAN,GAAA,WAAA7B,EAAAgC,EAAA,WAAApB,MAAAwB,iBAAAV,EAAAE,EAAAM,KAAAF,CAAA,UAAAK,SAAAC,EAAAnC,EAAAoC,GAAA,WAAAC,KAAA,SAAAD,IAAAD,EAAA/B,KAAAJ,EAAAoC,GAAA,OAAAf,GAAA,OAAAgB,KAAA,QAAAD,IAAAf,EAAA,EAAA7B,EAAA8B,KAAAA,KAAA,IAAAgB,EAAA,YAAAV,YAAA,UAAAW,oBAAA,UAAAC,6BAAA,KAAAC,EAAA,GAAAvB,OAAAuB,EAAA7B,GAAA,8BAAA8B,EAAA9C,OAAA+C,eAAAC,EAAAF,GAAAA,EAAAA,EAAAG,OAAA,MAAAD,GAAAA,IAAAtC,GAAAC,EAAAH,KAAAwC,EAAAhC,KAAA6B,EAAAG,GAAA,IAAAE,EAAAN,2BAAAtC,UAAA0B,UAAA1B,UAAAN,OAAAkC,OAAAW,GAAA,SAAAM,sBAAA7C,GAAA,0BAAA8C,SAAA,SAAAC,GAAA/B,OAAAhB,EAAA+C,GAAA,SAAAb,GAAA,YAAAc,QAAAD,EAAAb,EAAA,gBAAAe,cAAAtB,EAAAuB,GAAA,SAAAC,OAAAJ,EAAAb,EAAAkB,EAAAC,GAAA,IAAAC,EAAAtB,SAAAL,EAAAoB,GAAApB,EAAAO,GAAA,aAAAoB,EAAAnB,KAAA,KAAAoB,EAAAD,EAAApB,IAAA3B,EAAAgD,EAAAhD,MAAA,OAAAA,GAAA,UAAAiD,QAAAjD,IAAAF,EAAAH,KAAAK,EAAA,WAAA2C,EAAAE,QAAA7C,EAAAkD,SAAAC,MAAA,SAAAnD,GAAA4C,OAAA,OAAA5C,EAAA6C,EAAAC,EAAA,aAAAlC,GAAAgC,OAAA,QAAAhC,EAAAiC,EAAAC,EAAA,IAAAH,EAAAE,QAAA7C,GAAAmD,MAAA,SAAAC,GAAAJ,EAAAhD,MAAAoD,EAAAP,EAAAG,EAAA,aAAAK,GAAA,OAAAT,OAAA,QAAAS,EAAAR,EAAAC,EAAA,IAAAA,EAAAC,EAAApB,IAAA,KAAA2B,EAAAlE,EAAA,gBAAAY,MAAA,SAAAA,MAAAwC,EAAAb,GAAA,SAAA4B,6BAAA,WAAAZ,GAAA,SAAAE,EAAAC,GAAAF,OAAAJ,EAAAb,EAAAkB,EAAAC,EAAA,WAAAQ,EAAAA,EAAAA,EAAAH,KAAAI,2BAAAA,4BAAAA,4BAAA,aAAA/B,iBAAAV,EAAAE,EAAAM,GAAA,IAAAkC,EAAA,iCAAAhB,EAAAb,GAAA,iBAAA6B,EAAA,UAAAC,MAAA,iDAAAD,EAAA,cAAAhB,EAAA,MAAAb,EAAA,OAAA+B,YAAA,KAAApC,EAAAkB,OAAAA,EAAAlB,EAAAK,IAAAA,IAAA,KAAAgC,EAAArC,EAAAqC,SAAA,GAAAA,EAAA,KAAAC,EAAAC,oBAAAF,EAAArC,GAAA,GAAAsC,EAAA,IAAAA,IAAA/B,EAAA,gBAAA+B,CAAA,cAAAtC,EAAAkB,OAAAlB,EAAAwC,KAAAxC,EAAAyC,MAAAzC,EAAAK,SAAA,aAAAL,EAAAkB,OAAA,uBAAAgB,EAAA,MAAAA,EAAA,YAAAlC,EAAAK,IAAAL,EAAA0C,kBAAA1C,EAAAK,IAAA,gBAAAL,EAAAkB,QAAAlB,EAAA2C,OAAA,SAAA3C,EAAAK,KAAA6B,EAAA,gBAAAT,EAAAtB,SAAAX,EAAAE,EAAAM,GAAA,cAAAyB,EAAAnB,KAAA,IAAA4B,EAAAlC,EAAA4C,KAAA,6BAAAnB,EAAApB,MAAAE,EAAA,gBAAA7B,MAAA+C,EAAApB,IAAAuC,KAAA5C,EAAA4C,KAAA,WAAAnB,EAAAnB,OAAA4B,EAAA,YAAAlC,EAAAkB,OAAA,QAAAlB,EAAAK,IAAAoB,EAAApB,IAAA,YAAAkC,oBAAAF,EAAArC,GAAA,IAAA6C,EAAA7C,EAAAkB,OAAAA,EAAAmB,EAAAvD,SAAA+D,GAAA,QAAAC,IAAA5B,EAAA,OAAAlB,EAAAqC,SAAA,eAAAQ,GAAAR,EAAAvD,SAAA,SAAAkB,EAAAkB,OAAA,SAAAlB,EAAAK,SAAAyC,EAAAP,oBAAAF,EAAArC,GAAA,UAAAA,EAAAkB,SAAA,WAAA2B,IAAA7C,EAAAkB,OAAA,QAAAlB,EAAAK,IAAA,IAAA0C,UAAA,oCAAAF,EAAA,aAAAtC,EAAA,IAAAkB,EAAAtB,SAAAe,EAAAmB,EAAAvD,SAAAkB,EAAAK,KAAA,aAAAoB,EAAAnB,KAAA,OAAAN,EAAAkB,OAAA,QAAAlB,EAAAK,IAAAoB,EAAApB,IAAAL,EAAAqC,SAAA,KAAA9B,EAAA,IAAAyC,EAAAvB,EAAApB,IAAA,OAAA2C,EAAAA,EAAAJ,MAAA5C,EAAAqC,EAAAY,YAAAD,EAAAtE,MAAAsB,EAAAkD,KAAAb,EAAAc,QAAA,WAAAnD,EAAAkB,SAAAlB,EAAAkB,OAAA,OAAAlB,EAAAK,SAAAyC,GAAA9C,EAAAqC,SAAA,KAAA9B,GAAAyC,GAAAhD,EAAAkB,OAAA,QAAAlB,EAAAK,IAAA,IAAA0C,UAAA,oCAAA/C,EAAAqC,SAAA,KAAA9B,EAAA,UAAA6C,aAAAC,GAAA,IAAAC,EAAA,CAAAC,OAAAF,EAAA,SAAAA,IAAAC,EAAAE,SAAAH,EAAA,SAAAA,IAAAC,EAAAG,WAAAJ,EAAA,GAAAC,EAAAI,SAAAL,EAAA,SAAAM,WAAAC,KAAAN,EAAA,UAAAO,cAAAP,GAAA,IAAA7B,EAAA6B,EAAAQ,YAAA,GAAArC,EAAAnB,KAAA,gBAAAmB,EAAApB,IAAAiD,EAAAQ,WAAArC,CAAA,UAAAxB,QAAAN,GAAA,KAAAgE,WAAA,EAAAJ,OAAA,SAAA5D,EAAAsB,QAAAmC,aAAA,WAAAW,OAAA,YAAAjD,OAAAkD,GAAA,GAAAA,EAAA,KAAAC,EAAAD,EAAAnF,GAAA,GAAAoF,EAAA,OAAAA,EAAA5F,KAAA2F,GAAA,sBAAAA,EAAAd,KAAA,OAAAc,EAAA,IAAAE,MAAAF,EAAAG,QAAA,KAAAC,GAAA,EAAAlB,EAAA,SAAAA,OAAA,OAAAkB,EAAAJ,EAAAG,QAAA,GAAA3F,EAAAH,KAAA2F,EAAAI,GAAA,OAAAlB,KAAAxE,MAAAsF,EAAAI,GAAAlB,KAAAN,MAAA,EAAAM,KAAA,OAAAA,KAAAxE,WAAAoE,EAAAI,KAAAN,MAAA,EAAAM,IAAA,SAAAA,EAAAA,KAAAA,CAAA,SAAAA,KAAAd,WAAA,UAAAA,aAAA,OAAA1D,WAAAoE,EAAAF,MAAA,UAAApC,kBAAArC,UAAAsC,2BAAA3C,EAAAiD,EAAA,eAAArC,MAAA+B,2BAAArB,cAAA,IAAAtB,EAAA2C,2BAAA,eAAA/B,MAAA8B,kBAAApB,cAAA,IAAAoB,kBAAA6D,YAAAlF,OAAAsB,2BAAAxB,EAAA,qBAAAxB,EAAA6G,oBAAA,SAAAC,GAAA,IAAAC,EAAA,mBAAAD,GAAAA,EAAAE,YAAA,QAAAD,IAAAA,IAAAhE,mBAAA,uBAAAgE,EAAAH,aAAAG,EAAAE,MAAA,EAAAjH,EAAAkH,KAAA,SAAAJ,GAAA,OAAA1G,OAAA+G,eAAA/G,OAAA+G,eAAAL,EAAA9D,6BAAA8D,EAAAM,UAAApE,2BAAAtB,OAAAoF,EAAAtF,EAAA,sBAAAsF,EAAApG,UAAAN,OAAAkC,OAAAgB,GAAAwD,CAAA,EAAA9G,EAAAqH,MAAA,SAAAzE,GAAA,OAAAuB,QAAAvB,EAAA,EAAAW,sBAAAI,cAAAjD,WAAAgB,OAAAiC,cAAAjD,UAAAY,GAAA,0BAAAtB,EAAA2D,cAAAA,cAAA3D,EAAAsH,MAAA,SAAAvF,EAAAC,EAAAC,EAAAC,EAAA0B,QAAA,IAAAA,IAAAA,EAAA2D,SAAA,IAAAC,EAAA,IAAA7D,cAAA7B,KAAAC,EAAAC,EAAAC,EAAAC,GAAA0B,GAAA,OAAA5D,EAAA6G,oBAAA7E,GAAAwF,EAAAA,EAAA/B,OAAArB,MAAA,SAAAH,GAAA,OAAAA,EAAAkB,KAAAlB,EAAAhD,MAAAuG,EAAA/B,MAAA,KAAAlC,sBAAAD,GAAA5B,OAAA4B,EAAA9B,EAAA,aAAAE,OAAA4B,EAAAlC,GAAA,0BAAAM,OAAA4B,EAAA,qDAAAtD,EAAAyH,KAAA,SAAAC,GAAA,IAAAC,EAAAvH,OAAAsH,GAAAD,EAAA,WAAAvH,KAAAyH,EAAAF,EAAAtB,KAAAjG,GAAA,OAAAuH,EAAAG,UAAA,SAAAnC,OAAA,KAAAgC,EAAAf,QAAA,KAAAxG,EAAAuH,EAAAI,MAAA,GAAA3H,KAAAyH,EAAA,OAAAlC,KAAAxE,MAAAf,EAAAuF,KAAAN,MAAA,EAAAM,IAAA,QAAAA,KAAAN,MAAA,EAAAM,IAAA,GAAAzF,EAAAqD,OAAAA,OAAAb,QAAA9B,UAAA,CAAAsG,YAAAxE,QAAA8D,MAAA,SAAAA,MAAAwB,GAAA,QAAAC,KAAA,OAAAtC,KAAA,OAAAV,KAAA,KAAAC,WAAAK,EAAA,KAAAF,MAAA,OAAAP,SAAA,UAAAnB,OAAA,YAAAb,SAAAyC,EAAA,KAAAa,WAAA1C,QAAA4C,gBAAA0B,EAAA,QAAAb,KAAA,WAAAA,EAAAe,OAAA,IAAAjH,EAAAH,KAAA,KAAAqG,KAAAR,OAAAQ,EAAAgB,MAAA,WAAAhB,QAAA5B,EAAA,EAAA6C,KAAA,SAAAA,OAAA,KAAA/C,MAAA,MAAAgD,EAAA,KAAAjC,WAAA,GAAAG,WAAA,aAAA8B,EAAAtF,KAAA,MAAAsF,EAAAvF,IAAA,YAAAwF,IAAA,EAAAnD,kBAAA,SAAAA,kBAAAoD,GAAA,QAAAlD,KAAA,MAAAkD,EAAA,IAAA9F,EAAA,cAAA+F,OAAAC,EAAAC,GAAA,OAAAxE,EAAAnB,KAAA,QAAAmB,EAAApB,IAAAyF,EAAA9F,EAAAkD,KAAA8C,EAAAC,IAAAjG,EAAAkB,OAAA,OAAAlB,EAAAK,SAAAyC,KAAAmD,CAAA,SAAA7B,EAAA,KAAAT,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA,KAAAK,WAAAS,GAAA3C,EAAA6B,EAAAQ,WAAA,YAAAR,EAAAC,OAAA,OAAAwC,OAAA,UAAAzC,EAAAC,QAAA,KAAAiC,KAAA,KAAAU,EAAA1H,EAAAH,KAAAiF,EAAA,YAAA6C,EAAA3H,EAAAH,KAAAiF,EAAA,iBAAA4C,GAAAC,EAAA,SAAAX,KAAAlC,EAAAE,SAAA,OAAAuC,OAAAzC,EAAAE,UAAA,WAAAgC,KAAAlC,EAAAG,WAAA,OAAAsC,OAAAzC,EAAAG,WAAA,SAAAyC,GAAA,QAAAV,KAAAlC,EAAAE,SAAA,OAAAuC,OAAAzC,EAAAE,UAAA,YAAA2C,EAAA,UAAAhE,MAAA,kDAAAqD,KAAAlC,EAAAG,WAAA,OAAAsC,OAAAzC,EAAAG,WAAA,KAAAd,OAAA,SAAAA,OAAArC,EAAAD,GAAA,QAAA+D,EAAA,KAAAT,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA,KAAAK,WAAAS,GAAA,GAAAd,EAAAC,QAAA,KAAAiC,MAAAhH,EAAAH,KAAAiF,EAAA,oBAAAkC,KAAAlC,EAAAG,WAAA,KAAA2C,EAAA9C,EAAA,OAAA8C,IAAA,UAAA9F,GAAA,aAAAA,IAAA8F,EAAA7C,QAAAlD,GAAAA,GAAA+F,EAAA3C,aAAA2C,EAAA,UAAA3E,EAAA2E,EAAAA,EAAAtC,WAAA,UAAArC,EAAAnB,KAAAA,EAAAmB,EAAApB,IAAAA,EAAA+F,GAAA,KAAAlF,OAAA,YAAAgC,KAAAkD,EAAA3C,WAAAlD,GAAA,KAAA8F,SAAA5E,EAAA,EAAA4E,SAAA,SAAAA,SAAA5E,EAAAiC,GAAA,aAAAjC,EAAAnB,KAAA,MAAAmB,EAAApB,IAAA,gBAAAoB,EAAAnB,MAAA,aAAAmB,EAAAnB,KAAA,KAAA4C,KAAAzB,EAAApB,IAAA,WAAAoB,EAAAnB,MAAA,KAAAuF,KAAA,KAAAxF,IAAAoB,EAAApB,IAAA,KAAAa,OAAA,cAAAgC,KAAA,kBAAAzB,EAAAnB,MAAAoD,IAAA,KAAAR,KAAAQ,GAAAnD,CAAA,EAAA+F,OAAA,SAAAA,OAAA7C,GAAA,QAAAW,EAAA,KAAAT,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA,KAAAK,WAAAS,GAAA,GAAAd,EAAAG,aAAAA,EAAA,YAAA4C,SAAA/C,EAAAQ,WAAAR,EAAAI,UAAAG,cAAAP,GAAA/C,CAAA,kBAAAgG,OAAAhD,GAAA,QAAAa,EAAA,KAAAT,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA,KAAAK,WAAAS,GAAA,GAAAd,EAAAC,SAAAA,EAAA,KAAA9B,EAAA6B,EAAAQ,WAAA,aAAArC,EAAAnB,KAAA,KAAAkG,EAAA/E,EAAApB,IAAAwD,cAAAP,EAAA,QAAAkD,CAAA,YAAArE,MAAA,0BAAAsE,cAAA,SAAAA,cAAAzC,EAAAf,EAAAE,GAAA,YAAAd,SAAA,CAAAvD,SAAAgC,OAAAkD,GAAAf,WAAAA,EAAAE,QAAAA,GAAA,cAAAjC,SAAA,KAAAb,SAAAyC,GAAAvC,CAAA,GAAA9C,CAAA,UAAAiJ,mBAAAC,EAAApF,EAAAC,EAAAoF,EAAAC,EAAAlJ,EAAA0C,GAAA,QAAA2C,EAAA2D,EAAAhJ,GAAA0C,GAAA3B,EAAAsE,EAAAtE,KAAA,OAAAqD,GAAA,YAAAP,EAAAO,EAAA,CAAAiB,EAAAJ,KAAArB,EAAA7C,GAAAsG,QAAAzD,QAAA7C,GAAAmD,KAAA+E,EAAAC,EAAA,UAAAC,kBAAA1G,GAAA,sBAAAV,EAAA,KAAAqH,EAAAC,UAAA,WAAAhC,SAAA,SAAAzD,EAAAC,GAAA,IAAAmF,EAAAvG,EAAA6G,MAAAvH,EAAAqH,GAAA,SAAAH,MAAAlI,GAAAgI,mBAAAC,EAAApF,EAAAC,EAAAoF,MAAAC,OAAA,OAAAnI,EAAA,UAAAmI,OAAAvH,GAAAoH,mBAAAC,EAAApF,EAAAC,EAAAoF,MAAAC,OAAA,QAAAvH,EAAA,CAAAsH,WAAA9D,EAAA,cAAAoE,gBAAAC,EAAAC,GAAA,KAAAD,aAAAC,GAAA,UAAArE,UAAA,8CAAAsE,kBAAAC,EAAAC,GAAA,QAAAnD,EAAA,EAAAA,EAAAmD,EAAApD,OAAAC,IAAA,KAAAoD,EAAAD,EAAAnD,GAAAoD,EAAAzJ,WAAAyJ,EAAAzJ,aAAA,EAAAyJ,EAAApI,cAAA,YAAAoI,IAAAA,EAAAnI,UAAA,GAAAxB,OAAAC,eAAAwJ,GAAAjH,EAAAmH,EAAA7J,IAAAA,WAAA,SAAA8J,aAAAC,EAAAC,GAAA,cAAAhG,QAAA+F,IAAA,OAAAA,EAAA,OAAAA,EAAA,IAAAE,EAAAF,EAAA9I,OAAAiJ,aAAA,QAAA/E,IAAA8E,EAAA,KAAAE,EAAAF,EAAAvJ,KAAAqJ,EAAAC,GAAA,yBAAAhG,QAAAmG,GAAA,OAAAA,EAAA,UAAA/E,UAAA,kEAAA4E,EAAAI,OAAAC,QAAAN,EAAA,CAAAD,CAAApH,EAAA,qBAAAsB,QAAAhE,GAAAA,EAAAoK,OAAApK,IAAA6J,EAAA,KAAAnH,EAAA1C,CAAA,UAAAsK,aAAAb,EAAAc,EAAAC,GAAA,OAAAD,GAAAb,kBAAAD,EAAAjJ,UAAA+J,GAAAC,GAAAd,kBAAAD,EAAAe,GAAAtK,OAAAC,eAAAsJ,EAAA,aAAA/H,UAAA,IAAA+H,CAAA,UAAAgB,OAAA,OAAAA,KAAA,oBAAAC,SAAAA,QAAArK,IAAAqK,QAAArK,IAAAsK,OAAA,SAAAF,KAAAd,EAAAiB,EAAAC,GAAA,IAAAC,EAAA,SAAAC,eAAAtD,EAAAmD,GAAA,MAAA1K,OAAAM,UAAAC,eAAAC,KAAA+G,EAAAmD,IAAA,QAAAnD,EAAAuD,gBAAAvD,MAAA,OAAAA,CAAA,CAAAsD,CAAApB,EAAAiB,GAAA,GAAAE,EAAA,KAAAhK,EAAAZ,OAAA+K,yBAAAH,EAAAF,GAAA,OAAA9J,EAAAT,IAAAS,EAAAT,IAAAK,KAAA2I,UAAA7C,OAAA,EAAAmD,EAAAkB,GAAA/J,EAAAC,KAAA,GAAA0J,KAAAnB,MAAA,KAAAD,UAAA,UAAA6B,UAAAC,EAAAC,GAAA,sBAAAA,GAAA,OAAAA,EAAA,UAAAhG,UAAA,sDAAA+F,EAAA3K,UAAAN,OAAAkC,OAAAgJ,GAAAA,EAAA5K,UAAA,CAAAsG,YAAA,CAAA/F,MAAAoK,EAAAzJ,UAAA,EAAAD,cAAA,KAAAvB,OAAAC,eAAAgL,EAAA,aAAAzJ,UAAA,IAAA0J,GAAAC,gBAAAF,EAAAC,EAAA,UAAAC,gBAAApL,EAAAqL,GAAA,OAAAD,gBAAAnL,OAAA+G,eAAA/G,OAAA+G,eAAA0D,OAAA,SAAAU,gBAAApL,EAAAqL,GAAA,OAAArL,EAAAiH,UAAAoE,EAAArL,CAAA,EAAAoL,gBAAApL,EAAAqL,EAAA,UAAAC,aAAAC,GAAA,IAAAC,EAAA,SAAAC,4BAAA,uBAAAhB,UAAAA,QAAAiB,UAAA,YAAAjB,QAAAiB,UAAAC,KAAA,+BAAAC,MAAA,oBAAAC,QAAAtL,UAAAuL,QAAArL,KAAAgK,QAAAiB,UAAAG,QAAA,6BAAAE,GAAA,UAAAN,GAAA,gBAAAO,uBAAA,IAAAlI,EAAAmI,EAAAlB,gBAAAQ,GAAA,GAAAC,EAAA,KAAAU,EAAAnB,gBAAA,MAAAlE,YAAA/C,EAAA2G,QAAAiB,UAAAO,EAAA7C,UAAA8C,EAAA,MAAApI,EAAAmI,EAAA5C,MAAA,KAAAD,WAAA,gBAAA+C,2BAAArK,EAAArB,GAAA,GAAAA,IAAA,WAAAsD,QAAAtD,IAAA,mBAAAA,GAAA,OAAAA,EAAA,YAAAA,EAAA,UAAA0E,UAAA,4EAAAiH,uBAAAtK,GAAA,YAAAA,EAAA,UAAAuK,eAAA,oEAAAvK,CAAA,CAAAsK,CAAAtK,EAAA,CAAAqK,CAAA,KAAArI,EAAA,WAAAiH,gBAAA/K,GAAA,OAAA+K,gBAAA9K,OAAA+G,eAAA/G,OAAA+C,eAAA0H,OAAA,SAAAK,gBAAA/K,GAAA,OAAAA,EAAAiH,WAAAhH,OAAA+C,eAAAhD,EAAA,EAAA+K,gBAAA/K,EAAA,mBACA,IAAMsM,EAAW,CAAC,EAEX,SAASC,aACZC,MAAMC,GAAG,aAAa,SAACC,GAAY,IAAAC,EAC/B,GAAuB,UAAnBC,KAAKC,OAAOC,GAAhB,EAypCR,SAASC,gBACLT,EAASM,KAAKI,KAAKC,SAAS,iDAAmD,CAC3EnG,KAAM8F,KAAKI,KAAKC,SAAS,gDACzBvK,KAAM,OACNwK,IAAK,+CACLL,OAAQ,CACJnK,KAAM,CACF5B,MAAO,GACPqM,QAAS,IAEbC,YAAa,CACTtM,MAAO8L,KAAKI,KAAKC,SAAS,gDAC1BI,KAAM,GACNC,aAAc,IAElBC,OAAQ,GACRC,SAAU,EACVC,OAAQ,EACRC,MAAO,EACPC,SAAS,EACTC,WAAY,EACZC,UAAU,EACVC,OAAQ,GACRC,YAAY,EACZC,WAAY,CACRtL,KAAM,SACNuL,KAAM,EACNC,UAAW,IAEfC,SAAU,CACNrN,MAAO,EACPsN,MAAO,QAEX1E,OAAQ,CACJ5I,MAAO,KACPuN,MAAO,KACPD,MAAO,GACP1L,KAAM,QAEV4L,MAAO,CACHxN,MAAO,KACPyN,KAAM,KACNH,MAAO,IAEXI,QAAS,CACL9L,KAAM,GACNgH,OAAQ,GACR+E,OAAQ,MAEZC,QAAS,GACTC,WAAY,OACZC,YAAa,EACbC,WAAY,GACZC,SAAU,KACVC,OAAQ,CACJC,MAAO,GACPC,UAAW,IAEfC,QAAS,GACTC,KAAM,CACFT,QAAS,GACTU,GAAI,KACJC,QAAS,UAGjBC,KAAM,EACNC,MAAO,CACHC,KAAM,CACFC,SAAU,yBAGd,WAAY,CACRC,eAAgB,MAI5BpD,EAASM,KAAKI,KAAKC,SAAS,6CAA+C,CACvEnG,KAAM8F,KAAKI,KAAKC,SAAS,4CACzBvK,KAAM,OACNwK,IAAK,qDACLL,OAAQ,CACJnK,KAAM,CACF5B,MAAO,GACPqM,QAAS,IAEbC,YAAa,CACTtM,MAAO8L,KAAKI,KAAKC,SAAS,4CAC1BI,KAAM,GACNC,aAAc,IAElBC,OAAQ,GACRC,SAAU,EACVC,OAAQ,EACRC,MAAO,EACPC,SAAS,EACTC,WAAY,EACZC,UAAU,EACVC,OAAQ,GACRC,YAAY,EACZC,WAAY,CACRtL,KAAM,SACNuL,KAAM,EACNC,UAAW,IAEfC,SAAU,CACNrN,MAAO,EACPsN,MAAO,SAEX1E,OAAQ,CACJ5I,MAAO,KACPuN,MAAO,KACPD,MAAO,GACP1L,KAAM,QAEV4L,MAAO,CACHxN,MAAO,KACPyN,KAAM,KACNH,MAAO,IAGXI,QAAS,CACL9L,KAAM,GACNgH,OAAQ,GACR+E,OAAQ,MAEZC,QAAS,GACTC,WAAY,OACZC,YAAa,EACbC,WAAY,GACZC,SAAU,KACVC,OAAQ,CACJC,MAAO,GACPC,UAAW,IAEfC,QAAS,GACTC,KAAM,CACFT,QAAS,GACTU,GAAI,KACJC,QAAS,SAEbM,eAAgB,WAEpBL,KAAM,EACNC,MAAO,CACH,WAAY,CACRG,eAAgB,MAI5BpD,EAASM,KAAKI,KAAKC,SAAS,6CAA+C,CACvEnG,KAAM8F,KAAKI,KAAKC,SAAS,4CACzBvK,KAAM,OACNwK,IAAK,iDACLL,OAAQ,CACJnK,KAAM,CACF5B,MAAO,GACPqM,QAAS,IAEbC,YAAa,CACTtM,MAAO8L,KAAKI,KAAKC,SAAS,4CAC1BI,KAAM,GACNC,aAAc,IAElBC,OAAQ,GACRC,SAAU,EACVC,OAAQ,EACRC,MAAO,EACPC,SAAS,EACTC,WAAY,EACZC,UAAU,EACVC,OAAQ,GACRC,YAAY,EACZC,WAAY,CACRtL,KAAM,SACNuL,KAAM,EACNC,UAAW,IAEfC,SAAU,CACNrN,MAAO,KACPsN,MAAO,IAEX1E,OAAQ,CACJ5I,MAAO,KACPuN,MAAO,KACPD,MAAO,GACP1L,KAAM,QAEV4L,MAAO,CACHxN,MAAO,KACPyN,KAAM,KACNH,MAAO,IAGXI,QAAS,CACL9L,KAAM,GACNgH,OAAQ,GACR+E,OAAQ,MAEZC,QAAS,GACTC,WAAY,OACZC,YAAa,EACbC,WAAY,GACZC,SAAU,KACVC,OAAQ,CACJC,MAAO,GACPC,UAAW,IAEfC,QAAS,GACTC,KAAM,CACFT,QAAS,GACTU,GAAI,KACJC,QAAS,SAEbM,eAAgB,WAEpBL,KAAM,EACNC,MAAO,CACH,WAAY,CACRG,eAAgB,MAI5BpD,EAASM,KAAKI,KAAKC,SAAS,4CAA8C,CACtEnG,KAAM8F,KAAKI,KAAKC,SAAS,2CACzBvK,KAAM,OACNwK,IAAK,oDACLL,OAAQ,CACJnK,KAAM,CACF5B,MAAO,GACPqM,QAAS,IAEbC,YAAa,CACTtM,MAAO8L,KAAKI,KAAKC,SAAS,2CAC1BI,KAAM,GACNC,aAAc,IAElBC,OAAQ,GACRC,SAAU,EACVC,OAAQ,EACRC,MAAO,EACPC,SAAS,EACTC,WAAY,EACZC,UAAU,EACVC,OAAQ,GACRC,YAAY,EACZC,WAAY,CACRtL,KAAM,SACNuL,KAAM,EACNC,UAAW,IAEfC,SAAU,CACNrN,MAAO,KACPsN,MAAO,IAEX1E,OAAQ,CACJ5I,MAAO,KACPuN,MAAO,KACPD,MAAO,GACP1L,KAAM,QAEV4L,MAAO,CACHxN,MAAO,KACPyN,KAAM,KACNH,MAAO,IAGXI,QAAS,CACL9L,KAAM,GACNgH,OAAQ,GACR+E,OAAQ,MAEZmB,SAAU,CACN9O,MAAO,KACP+O,SAAS,GAEbnB,QAAS,GACTC,WAAY,OACZC,YAAa,EACbC,WAAY,GACZC,SAAU,KACVC,OAAQ,CACJC,MAAO,GACPC,UAAW,IAEfC,QAAS,GACTC,KAAM,CACFT,QAAS,GACTU,GAAI,KACJC,QAAS,SAEbM,eAAgB,WAEpBL,KAAM,EACNC,MAAO,CACH,WAAY,CACRG,eAAgB,MAI5BpD,EAASM,KAAKI,KAAKC,SAAS,4CAA8C,CACtEnG,KAAM8F,KAAKI,KAAKC,SAAS,2CACzBvK,KAAM,OACNwK,IAAK,oDACLL,OAAQ,CACJnK,KAAM,CACF5B,MAAO,GACPqM,QAAS,IAEbC,YAAa,CACTtM,MAAO8L,KAAKI,KAAKC,SAAS,2CAC1BI,KAAM,GACNC,aAAc,IAElBC,OAAQ,GACRC,SAAU,EACVC,OAAQ,EACRC,MAAO,EACPC,SAAS,EACTC,WAAY,EACZC,UAAU,EACVC,OAAQ,GACRC,YAAY,EACZC,WAAY,CACRtL,KAAM,SACNuL,KAAM,EACNC,UAAW,IAEfC,SAAU,CACNrN,MAAO,KACPsN,MAAO,IAEX1E,OAAQ,CACJ5I,MAAO,KACPuN,MAAO,KACPD,MAAO,GACP1L,KAAM,QAEV4L,MAAO,CACHxN,MAAO,KACPyN,KAAM,KACNH,MAAO,IAGXI,QAAS,CACL9L,KAAM,GACNgH,OAAQ,GACR+E,OAAQ,MAEZC,QAAS,GACTC,WAAY,OACZC,YAAa,EACbC,WAAY,GACZC,SAAU,KACVC,OAAQ,CACJC,MAAO,GACPC,UAAW,IAEfC,QAAS,GACTC,KAAM,CACFT,QAAS,GACTU,GAAI,KACJC,QAAS,SAEbM,eAAgB,WAEpBL,KAAM,EACNC,MAAO,CACH,WAAY,CACRG,eAAgB,MAI5BpD,EAASM,KAAKI,KAAKC,SAAS,6CAA+C,CACvEnG,KAAM8F,KAAKI,KAAKC,SAAS,4CACzBvK,KAAM,OACNwK,IAAK,mDACLL,OAAQ,CACJnK,KAAM,CACF5B,MAAO,GACPqM,QAAS,IAEbC,YAAa,CACTtM,MAAO8L,KAAKI,KAAKC,SAAS,4CAC1BI,KAAM,GACNC,aAAc,IAElBC,OAAQ,GACRC,SAAU,EACVC,OAAQ,EACRC,MAAO,EACPC,SAAS,EACTC,WAAY,EACZC,UAAU,EACVC,OAAQ,GACRC,YAAY,EACZC,WAAY,CACRtL,KAAM,SACNuL,KAAM,EACNC,UAAW,IAEfC,SAAU,CACNrN,MAAO,KACPsN,MAAO,IAEX1E,OAAQ,CACJ5I,MAAO,EACPuN,MAAO,KACPD,MAAO,GACP1L,KAAM,YAEV4L,MAAO,CACHxN,MAAO,KACPyN,KAAM,KACNH,MAAO,SAGXI,QAAS,CACL9L,KAAM,GACNgH,OAAQ,GACR+E,OAAQ,MAEZC,QAAS,GACTC,WAAY,OACZC,YAAa,EACbC,WAAY,GACZC,SAAU,KACVC,OAAQ,CACJC,MAAO,GACPC,UAAW,IAEfC,QAAS,GACTC,KAAM,CACFT,QAAS,GACTU,GAAI,KACJC,QAAS,SAEbM,eAAgB,WAEpBL,KAAM,EACNC,MAAO,CACH,WAAY,CACRG,eAAgB,KAIhC,CArlDQ3C,GACA,IAAM+C,EAAQpD,EAAQoD,MAEhBC,EAAY,SAAAC,GAAA/E,UAAA8E,aAAAC,GAAA,IAAAC,EAAA3E,aAAAyE,cAAA,SAAAA,eAAA,OAAAzG,gBAAA,KAAAyG,cAAAE,EAAA5G,MAAA,KAAAD,UAAA,CAIb,OAJaiB,aAAA0F,aAAA,EAAAhQ,IAAA,UAAAK,IACd,SAAAA,MAEI,OADcoK,KAAAO,gBAAAgF,aAAAxP,WAAA,gBACE2P,OAAO,CAAC,UAC5B,KAACH,YAAA,CAJa,CAASD,EAAMK,KAAKC,SAOhCC,EAAqC,QAA/B1D,EAAGC,KAAK0D,QAAQlQ,IAAI,mBAAW,IAAAuM,OAAA,EAA5BA,EAA8B4D,OACvCC,EAAc,SAAdA,YAAe7B,GAAe,IAAA8B,EAAAC,EAChC,OAAKL,GAAWM,GAAGb,MAAMc,OAEK,QAAnBF,GADgD,QAAjDD,EAAGE,GAAGb,MAAMc,OAAOC,QAAQ,WAAY,kBAAU,IAAAJ,EAAAA,EAAI,CAAC,GAC7C9B,UAAW,IAAA+B,GAAAA,EACH,EAAI,EAHS,IAK5C,EAEMI,EAAoB,SAApBA,kBAAqBC,GAAS,IAAAC,EAAAC,EAChC,GAAKF,SAAY,QAARC,EAAJD,EAAMlE,cAAM,IAAAmE,GAAZA,EAAcE,WAGnB,OAA4C,QAA5CD,EAAOE,MAAMC,KAAKL,EAAKlE,OAAOqE,YAAY,UAAE,IAAAD,GAAY,QAAZA,EAArCA,EAAuCjD,kBAAU,IAAAiD,OAAA,EAAjDA,EAAmDvO,IAC9D,EAEM2O,EAAgB,SAAhBA,cAAiBN,GAAS,IAAAO,EAAAC,EAC5B,GAAKR,SAAY,QAARO,EAAJP,EAAMlE,cAAM,IAAAyE,GAAZA,EAAcJ,WAGnB,OAA4C,QAA5CK,EAAOJ,MAAMC,KAAKL,EAAKlE,OAAOqE,YAAY,UAAE,IAAAK,OAAA,EAArCA,EAAuC5C,UAClD,EAEM6C,EAAc,CAChBC,OAAQ,CAAC,UACTC,MAAO,CAAC,SACRC,SAAU,CAAC,WAAY,iBAAkB,kBACzCC,KAAM,CAAC,YAGLC,EAAY,CACdC,MAAO,CAAC,SACRC,KAAM,CAAC,QACPC,WAAY,CAAC,aAAc,YAAa,SAGtCC,EAAkB,GAEpBrF,KAAKsF,SAAS9R,IAAI+R,EAAW,qBAAqBN,EAAUG,WAAWhM,KAAK,UAC5E4G,KAAKsF,SAAS9R,IAAI+R,EAAW,qBAAqBF,EAAgBjM,KAAK,SAE3E0G,EAAQ0F,MAAQ,CACZZ,YAAAA,EACAK,UAAAA,EACAI,gBAAAA,EACA3F,SAAAA,GAGJE,MAAM6F,QAAQ,uCAAwC,CAAEb,YAAAA,EAAaK,UAAAA,EAAWvF,SAAAA,IAgK/E,IAEKgG,EAAkB,SAAAC,GAAAtH,UAAAqH,mBAAAC,GAAA,IA8CnBC,EAJAC,EA1CmBC,EAAApH,aAAAgH,oBACpB,SAAAA,qBAAqBhJ,gBAAA,KAAAgJ,oBAAA,QAAAK,EAAAvJ,UAAA7C,OAAN4C,EAAI,IAAAgI,MAAAwB,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJzJ,EAAIyJ,GAAAxJ,UAAAwJ,GAAA,OAAAF,EAAAjS,KAAA4I,MAAAqJ,EAAA,OAAAxC,OACN/G,GACb,CAkGC,OAlGAkB,aAAAiI,mBAAA,EAAAvS,IAAA,cAAAK,IAED,SAAAA,MACI,IAAAyS,EAAyBC,KAAKC,MAAtBrQ,EAAImQ,EAAJnQ,KAAMmK,EAAMgG,EAANhG,OACRkG,EAAQD,KAAKC,MAEbC,EAAgB,cAATtQ,EACb,GAFuB,QAATA,EAEH,KAAAuQ,EAAAC,EACDC,EAAevG,KAAKI,KAAKC,SAA2E,QAAnEgG,EAA4D,QAA5DC,EAACE,OAAOhB,MAAMiB,cAAcN,EAAMlG,OAAOyG,QAAQ5Q,KAAK5B,cAAM,IAAAoS,OAAA,EAA3DA,EAA6DK,aAAK,IAAAN,EAAAA,EAAIF,EAAMlG,OAAOyG,QAAQ5Q,KAAK8Q,QAClIC,EAAK5G,EAAOyG,QAAQG,IAAM,GAAK5G,EAAOyG,QAAQG,IAAM,EAAI5G,EAAOyG,QAAQG,GAAK,KAAHvD,OAAQ,EAAIrD,EAAOyG,QAAQG,IAC1G,MAAO,MAAPvD,OAAauD,EAAE,KAAAvD,OAAIiD,EACvB,CAAO,GAAIH,EAAM,CACb,IAAMU,EAAUzT,OAAOiD,OAAO6P,EAAMW,SAC/BC,KAAI,SAACC,GAAC,OAAKA,EAAE9M,IAAI,IACjB+M,KAAK,OACV,MAAO,SAAP3D,OAAgBrD,EAAOyG,QAAQQ,MAAK,KAAA5D,OAAIwD,EAAO,MAAAxD,OAAKrD,EAAOyG,QAAQS,KAAI,IAC3E,CACI,MAAO,EAEf,GAAC,CAAAhU,IAAA,SAAAK,IAED,SAAAA,MACI,OAAO0S,KAAKkB,SAA+B,cAApBlB,KAAKC,MAAMrQ,IACtC,GAAC,CAAA3C,IAAA,UAAAK,IAED,SAAAA,MACI,OAAO0S,KAAKC,MAAMlG,OAAOoH,WAAWC,GAAGpT,OAAS,CACpD,GAAC,CAAAf,IAAA,YAAAK,IAED,SAAAA,MAAgB,IAAA+T,EAAAC,EACZ,OAAmD,QAAnDD,EAAmC,QAAnCC,EAAOtB,KAAKC,MAAMlG,OAAOoH,kBAAU,IAAAG,GAAO,QAAPA,EAA5BA,EAA8BC,aAAK,IAAAD,OAAA,EAAnCA,EAAqCE,eAAO,IAAAH,EAAAA,EAAI,CAC3D,GAAC,CAAApU,IAAA,WAAAK,IAED,SAAAA,MAAe,IAAAmU,EAAAC,EACX,OAAmD,QAAnDD,EAAmC,QAAnCC,EAAO1B,KAAKC,MAAMlG,OAAOoH,kBAAU,IAAAO,GAAO,QAAPA,EAA5BA,EAA8BH,aAAK,IAAAG,OAAA,EAAnCA,EAAqCC,eAAO,IAAAF,EAAAA,EAAI,CAC3D,GAAC,CAAAxU,IAAA,wBAAAK,IAED,SAAAA,MACI,MAAO,kEACX,GAAC,CAAAL,IAAA,eAAAe,OAAA2R,EAAAvJ,kBAAAxI,sBAAAqG,MAED,SAAA2N,QAAmBC,GAAK,OAAAjU,sBAAAiB,MAAA,SAAAiT,SAAAC,GAAA,cAAAA,EAAAjN,KAAAiN,EAAAvP,MAAA,OACpBwN,KAAKC,MAAM+B,cAAc,CAAC,GAAG,wBAAAD,EAAA9M,OAAA,GAAA2M,QAAA,UAChC,SAAAK,aAAAC,GAAA,OAAAvC,EAAApJ,MAAA,KAAAD,UAAA,KAAArJ,IAAA,gBAAAe,OAAA0R,EAAAtJ,kBAAAxI,sBAAAqG,MAED,SAAAkO,WAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAA/U,sBAAAiB,MAAA,SAAA+T,UAAAC,GAAA,cAAAA,EAAA/N,KAAA+N,EAAArQ,MAAA,OAemG,OAdzF8P,EAASxI,KAAKI,KACfC,SAAS,mBACT2I,MAAM,KACNjC,KAAI,SAACkC,GAAI,OAAKA,EAAKhO,OAAO,GAAGiO,aAAa,IAC1CjC,KAAK,IACJwB,EAASzI,KAAKI,KACfC,SAAS,oBACT2I,MAAM,KACNjC,KAAI,SAACkC,GAAI,OAAKA,EAAKhO,OAAO,GAAGiO,aAAa,IAC1CjC,KAAK,IACJyB,EAAU1I,KAAKI,KAAKC,SAAS,gBAAgB8I,QAAQ,YAAa,IAAIA,QAAQ,OAAQ,IAAIC,OAE1FT,EAAUzC,KAAKC,MAAMlG,OAAOoH,WAAWC,GAAG+B,KAAO,UAAY,iBAC7DT,EAAU1C,KAAKC,MAAMlG,OAAOoH,WAAWC,GAAGgC,QAC1CT,EAAaD,EAAWA,EAAU,EAAI,kBAAoB,UAAa,mBAAkBG,EAAA5Q,OAAA,SAExF,CACH,CACI,CACIoR,KAAM,GAAFjG,OAAK4C,KAAKC,MAAMlG,OAAOoH,WAAWC,GAAGpT,OAA6C,QAAxCoU,EAAIpC,KAAKC,MAAMlG,OAAOoH,WAAWC,GAAG+B,YAAI,IAAAf,EAAAA,EAAI,IAC1FkB,MAAOb,GAEX,CACIY,KAAM,KAEV,CACIA,KAAM,GAAFjG,OAAK4C,KAAKC,MAAMlG,OAAOoH,WAAWC,GAAGmC,KAA8C,QAA3ClB,EAAIrC,KAAKC,MAAMlG,OAAOoH,WAAWC,GAAGgC,eAAO,IAAAf,EAAAA,EAAI,IAC3FiB,MAAOX,GAEX,CACIU,KAAMf,IAGd,CACI,CACIe,KAAMd,GAEV,CACIc,KAAMrD,KAAKC,MAAMlG,OAAOoH,WAAWqC,GAAGxV,MACtCsV,MAAO,gDAGf,CACI,CACID,KAAMb,GAEV,CACIa,KAAMrD,KAAKC,MAAMlG,OAAOoH,WAAWsC,QACnCH,MAAO,kDAGlB,wBAAAT,EAAA5N,OAAA,GAAAkN,SAAA,UACJ,SAAAuB,gBAAA,OAAAhE,EAAAnJ,MAAA,KAAAD,UAAA,MAAAkJ,kBAAA,CArGmB,CAASxC,EAAM2G,SAASC,eAwG1CC,EAAiB,SAAAC,GAAA3L,UAAA0L,kBAAAC,GAAA,IAalBC,EAbkBC,EAAAxL,aAAAqL,mBACnB,SAAAA,kBAAYI,EAAShG,EAAMrO,GAAM,IAAAsU,EAGZ,OAHY1N,gBAAA,KAAAqN,oBAC7BK,EAAAF,EAAArW,KAAA,KAAMsW,IACDhG,KAAOA,EACZiG,EAAKtU,KAAOA,EAAKsU,CACrB,CAaC,OAbA3M,aAAAsM,kBAAA,EAAA5W,IAAA,aAAAK,IAED,SAAAA,MACI,OAAO,CACX,GAAC,CAAAL,IAAA,qBAAAK,IAED,SAAAA,MACI,OAAO6W,eAAeC,mBAAmBC,KAC7C,GAAC,CAAApX,IAAA,iBAAAe,OAAA+V,EAAA3N,kBAAAxI,sBAAAqG,MAED,SAAAqQ,WAAA,IAAAC,EAAA,OAAA3W,sBAAAiB,MAAA,SAAA2V,UAAAC,GAAA,cAAAA,EAAA3P,KAAA2P,EAAAjS,MAAA,cAAAiS,EAAAjS,KAAA,EAC8BkS,kBAAkB1E,KAAK/B,KAAM+B,KAAKpQ,MAAK,OAAhD,OAAX2U,EAAWE,EAAA3S,KAAA2S,EAAAxS,OAAA,SACVsS,GAAW,wBAAAE,EAAAxP,OAAA,GAAAqP,SAAA,UACrB,SAAAK,iBAAA,OAAAZ,EAAAxN,MAAA,KAAAD,UAAA,MAAAuN,iBAAA,CAlBkB,CAAS7G,EAAM4H,OAAOC,cAqBvCC,EAAgB,SAAAC,GAAA5M,UAAA2M,iBAAAC,GAAA,IAAAC,EAAAxM,aAAAsM,kBAClB,SAAAA,mBAAqBtO,gBAAA,KAAAsO,kBAAA,QAAAG,EAAA3O,UAAA7C,OAAN4C,EAAI,IAAAgI,MAAA4G,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJ7O,EAAI6O,GAAA5O,UAAA4O,GAAA,OAAAF,EAAArX,KAAA4I,MAAAyO,EAAA,OAAA5H,OACN/G,GACb,CAoHC,OApHAkB,aAAAuN,iBAAA,EAAA7X,IAAA,aAAAK,IAED,SAAAA,MAAiB,IAAA6X,EAAA,KACPC,EAAYpF,KAAKC,MAAMlG,OAAOqL,UAC9BC,EAASrF,KAAKC,MAAMlG,OAAOsL,OAC3BC,EAAQtF,KAAKC,MAAMlB,UAAUwG,KAE7BC,EAAU,SAAVA,QAAWxX,GACb,OAAIA,GAAS,EAAU,IAAPoP,OAAWpP,GACpBA,CACX,EAyDA,MAAO,CACH,CACIyX,SAAU,cACVC,SAAU,CACN,CACIjF,MAAO,YACPkF,MAAO,QAEX,CACIlF,MAAO,QACPkF,MAAO,UAEX,CACIlF,MAAO,OACPkF,MAAO,WAGfA,MAAO,CAAC,OAAQ,SAAU,UAC1B1B,QAzEiB9W,OAAOqH,KAAK4Q,GAAWvE,KAAI,SAACjF,GACjD,IAAMgK,EAAcR,EAAUxJ,GAC9B,OAAO,IAAIiI,EACP,CACI,CACIpD,MAAOH,OAAOhB,MAAM8F,UAAUxJ,GAAS6E,MACvCoF,QAAS,SAAAA,QAAChE,GAAK,OAAKsD,EAAKlF,MAAM6F,YAAYlK,EAAS,CAAEiG,MAAAA,GAAQ,GAElE,CACIpB,MAAO+E,EAAQI,EAAYG,KAAOH,EAAYI,YAAc,IAC5DH,QAAS,SAAAA,QAAChE,GAAK,OAAKsD,EAAKlF,MAAMgG,gBAAgBrK,EAAS,CAAEiG,MAAAA,GAAQ,GAEtE,CACIpB,MAAO+E,EAAQI,EAAYvJ,MAC3BwJ,QAAS,SAAAA,QAAChE,GAAK,OAAKsD,EAAKlF,MAAMiG,gBAAgBtK,EAAS,CAAEiG,MAAAA,GAAQ,IAG1EjG,EACA,OAER,KAuDI,CACI6J,SAAU,UACVC,SAAU,CACN,CACIjF,MAAO,UAEX,CACIA,MAAO,KAGfwD,QA/Dc9W,OAAOqH,KAAK6Q,GAAQxE,KAAI,SAACsF,GAC3C,IAAMC,EAAYf,EAAOc,GACzB,OAAO,IAAItC,EACP,CACI,CACIpD,MAAO4F,mBAAmBD,EAAUE,YAAchG,OAAOhB,MAAM+F,OAAOc,GAAO1F,MAC7EoF,QAAS,SAAAA,QAAChE,GAAK,OAAKsD,EAAKlF,MAAMsG,UAAUJ,EAAO,CAAEtE,MAAAA,GAAQ,GAE9D,CACIpB,MAAO,GAAFrD,OAAKoI,EAAQY,EAAUI,OAAM,2DAAApJ,OAA0DgJ,EAAUK,QAAO,YAC7GC,MAAO,8CAGfP,EACA,QAER,KAiDI,CACIV,SAAU,UACVC,SAAU,CACN,CACIjF,MAAO,SAEX,CACIA,MAAO,KAGfwD,QAzDYqB,EAAMzE,KAAI,SAAC0E,GAC3B,OAAO,IAAI1B,EACP,CACI,CACIpD,MAAO4F,mBAAmBd,EAAKxL,OAAOuM,YAAcf,EAAKvR,KACzD6R,QAAS,SAAAA,QAAChE,GAAK,OAAK0D,EAAKoB,cAAc,CAAE9E,MAAAA,GAAQ,GAErD,CACIpB,MAAO+E,EAAQJ,EAAUG,EAAKqB,YAAYb,IAAMR,EAAKxL,OAAO8M,sBAAwB1B,EAAKlF,MAAMlG,OAAOoH,WAAW2F,QAGzHvB,EAER,KA+CJ,GAAC,CAAAtY,IAAA,QAAAK,IAED,SAAAA,MACI,MAAO,GAAP8P,OAAUtD,KAAKI,KAAKC,SAAS,0CAAyC,OAAAiD,OAAMtD,KAAKI,KAAKC,SAAS,2CAA0C,OAAAiD,OAAMtD,KAAKI,KAAKC,SAAS,0CACtK,KAAC2K,gBAAA,CAvHiB,CAAS9H,EAAM4H,OAAOmC,aA0HtCC,EAAsB,SAAAC,GAAA9O,UAAA6O,uBAAAC,GAAA,IAoBvBC,EApBuBC,EAAA3O,aAAAwO,wBACxB,SAAAA,yBAAqBxQ,gBAAA,KAAAwQ,wBAAA,QAAAI,EAAA9Q,UAAA7C,OAAN4C,EAAI,IAAAgI,MAAA+I,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJhR,EAAIgR,GAAA/Q,UAAA+Q,GAAA,OAAAF,EAAAxZ,KAAA4I,MAAA4Q,EAAA,OAAA/J,OACN/G,GACb,CAwCC,OAxCAkB,aAAAyP,uBAAA,EAAA/Z,IAAA,QAAAK,IAED,SAAAA,MACI,MAAO,cACX,GAAC,CAAAL,IAAA,aAAAK,IAED,SAAAA,MAAiB,IAAAga,EACb,OAAiB,QAAVA,EAAAtH,KAAKC,aAAK,IAAAqH,GAAVA,EAAYC,SAAW,EAAI,IACtC,GAAC,CAAAta,IAAA,iBAAAK,IAED,SAAAA,MAAqB,IAAAka,EACjB,OAA4B,QAA5BA,EAAO9J,EAAY,iBAAS,IAAA8J,EAAAA,EAAKxH,KAAKyH,aAAe,EAAI,CAC7D,GAAC,CAAAxa,IAAA,cAAAe,MAED,SAAA0Z,YAAYC,GACR3H,KAAKyH,cAAe,EACpBzH,KAAK4H,iBACT,GAAC,CAAA3a,IAAA,cAAAe,OAAAkZ,EAAA9Q,kBAAAxI,sBAAAqG,MAED,SAAA4T,WAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAlE,EAAAmE,EAAA,OAAAxa,sBAAAiB,MAAA,SAAAwZ,UAAAC,GAAA,cAAAA,EAAAxT,KAAAwT,EAAA9V,MAAA,OAkBmD,OAjBzCsV,EAAa9H,KAAKC,MAAMsI,MAAMC,QAAO,SAACvK,GAAI,IAAAwK,EAAA,OAAK1J,EAAUC,MAAM0J,SAASzK,EAAKrO,OAAS8O,EAAYC,OAAO+J,SAAS1K,EAAkBC,MAAWrE,EAAQ0F,MAAMH,gBAAgBuJ,SAAyB,QAAjBD,EAACxK,EAAKlE,OAAOnK,YAAI,IAAA6Y,OAAA,EAAhBA,EAAkBza,MAAM,IAC9M+Z,EAAY/H,KAAKC,MAAMsI,MAAMC,QAAO,SAACvK,GAAI,IAAA0K,EAAA,OAAK5J,EAAUE,KAAKyJ,SAASzK,EAAKrO,OAAS8O,EAAYC,OAAO+J,SAAS1K,EAAkBC,MAAWrE,EAAQ0F,MAAMH,gBAAgBuJ,SAAyB,QAAjBC,EAAC1K,EAAKlE,OAAOnK,YAAI,IAAA+Y,OAAA,EAAhBA,EAAkB3a,MAAM,IAC5Mga,EAAkBhI,KAAKC,MAAMsI,MAAMC,QAAO,SAACvK,GAAI,IAAA2K,EAAA,OAAK7J,EAAUG,WAAWwJ,SAASzK,EAAKrO,OAAS8O,EAAYC,OAAO+J,SAAS1K,EAAkBC,MAAWrE,EAAQ0F,MAAMH,gBAAgBuJ,SAAyB,QAAjBE,EAAC3K,EAAKlE,OAAOnK,YAAI,IAAAgZ,OAAA,EAAhBA,EAAkB5a,MAAM,IAExNia,EAAeH,EAAWrU,OAAc,CAAC,IAAIoV,EAAuB,CAAEjZ,KAAM,QAAS2Y,MAAOT,EAAYxE,MAAO,KAAMkF,QAAO,SAACM,GAAM,OAAKA,EAAOC,WAAW,IAAvH,GAEnCb,EAAiB/a,OAAOiD,OAAOoJ,GAE/B2O,EAAqBrO,KAAKsF,SAAS9R,IAAI+R,EAAW,sBAClD4E,EAAU,GACZkE,EACAlE,EAAQ/Q,KAAIqD,MAAZ0N,EAAO,CAAU,IAAI+E,EAAgB,CAAE/K,KAAM,KAAMgL,aAAa,EAAMC,WAAW,IAAS,IAAIlM,EAAMmM,KAAKC,QAAQC,YAAY,IAAIC,EAAyBpB,EAAe,IAAK,IAAIoB,EAAyBpB,EAAe,MAAI9K,OAAAmM,mBAAKtB,GAAW,CAAE,IAAIY,EAAuB,CAAEjZ,KAAM,OAAQ2Y,MAAOR,EAAWzE,MAAO,IAAM,IAAItG,EAAMmM,KAAKC,QAAQC,YAAY,IAAIC,EAAyBpB,EAAe,IAAK,IAAIoB,EAAyBpB,EAAe,KAAM,IAAIlL,EAAMmM,KAAKC,QAAQC,YAAY,IAAIC,EAAyBpB,EAAe,IAAK,IAAIoB,EAAyBpB,EAAe,KAAM,IAAIW,EAAuB,CAAEjZ,KAAM,aAAc2Y,MAAOP,EAAiB1E,MAAO,OAEtpBW,EAAQ/Q,KAAIqD,MAAZ0N,EAAO,CAAU,IAAI+E,EAAgB,CAAE/K,KAAM,KAAMgL,aAAa,EAAMC,WAAW,KAAO9L,OAAAmM,mBAAKtB,GAAW,CAAE,IAAIY,EAAuB,CAAEjZ,KAAM,OAAQ2Y,MAAOR,EAAWzE,MAAO,IAAM,IAAIuF,EAAuB,CAAEjZ,KAAM,aAAc2Y,MAAOP,EAAiB1E,MAAO,OAGlQ8E,EAAWpI,KAAKC,MAAMsI,MAAMC,QAAO,SAACvK,GAAI,IAAAuL,EAAA,OAAK5P,EAAQ0F,MAAMH,gBAAgBuJ,SAAyB,QAAjBc,EAACvL,EAAKlE,OAAOnK,YAAI,IAAA4Z,OAAA,EAAhBA,EAAkBxb,QAAU0Q,EAAYC,OAAO+J,SAAS1K,EAAkBC,GAAM,IAC1KgG,EAAQ/Q,KAAIqD,MAAZ0N,EAAOsF,mBAASE,oBAAoBrB,KAAWE,EAAArW,OAAA,SAExCgS,EAAQuE,QAAO,SAACM,GAAM,OAAKA,EAAOC,aAA+B3W,MAAhB0W,EAAOP,OAAsBO,EAAOP,MAAM9U,MAAM,KAAC,yBAAA6U,EAAArT,OAAA,GAAA4S,SAAA,UAC5G,SAAA6B,cAAA,OAAAxC,EAAA3Q,MAAA,KAAAD,UAAA,MAAA0Q,sBAAA,CA3CuB,CAAShK,EAAMmM,KAAKQ,aA8C1CC,EAAqB,SAAAC,GAAA1R,UAAAyR,sBAAAC,GAAA,IAoBtBC,EApBsBC,EAAAvR,aAAAoR,uBACvB,SAAAA,wBAAqBpT,gBAAA,KAAAoT,uBAAA,QAAAI,EAAA1T,UAAA7C,OAAN4C,EAAI,IAAAgI,MAAA2L,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJ5T,EAAI4T,GAAA3T,UAAA2T,GAAA,OAAAF,EAAApc,KAAA4I,MAAAwT,EAAA,OAAA3M,OACN/G,GACb,CAgCC,OAhCAkB,aAAAqS,sBAAA,EAAA3c,IAAA,QAAAK,IAED,SAAAA,MACI,MAAO,mBACX,GAAC,CAAAL,IAAA,aAAAK,IAED,SAAAA,MAAiB,IAAA4c,EACb,OAAiB,QAAVA,EAAAlK,KAAKC,aAAK,IAAAiK,GAAVA,EAAY3C,SAAW,EAAI,IACtC,GAAC,CAAAta,IAAA,iBAAAK,IAED,SAAAA,MAAqB,IAAA6c,EACjB,OAA2B,QAA3BA,EAAOzM,EAAY,gBAAQ,IAAAyM,EAAAA,EAAKnK,KAAKyH,aAAe,EAAI,CAC5D,GAAC,CAAAxa,IAAA,cAAAe,MAED,SAAA0Z,YAAYC,GACR3H,KAAKyH,cAAe,EACpBzH,KAAK4H,iBACT,GAAC,CAAA3a,IAAA,cAAAe,OAAA8b,EAAA1T,kBAAAxI,sBAAAqG,MAED,SAAAmW,WAAA,IAAAnG,EAAAoG,EAAAC,EAAAC,EAAAnC,EAAAoC,EAAA,YAAA5c,sBAAAiB,MAAA,SAAA4b,UAAAC,GAAA,cAAAA,EAAA5V,KAAA4V,EAAAlY,MAAA,OACUyR,EAAU,CAAC,IAAI+E,EAAgB,CAAE/K,KAAM,KAAMgL,aAAa,EAAMC,WAAW,KAASmB,EAAAzc,sBAAAqG,MAAA,SAAAoW,QAAA,IAAAM,EAAA/a,EAAAgb,EAAArC,EAAAO,EAAA,OAAAlb,sBAAAiB,MAAA,SAAAgc,OAAAC,GAAA,cAAAA,EAAAhW,KAAAgW,EAAAtY,MAAA,OAE+G,GAF/GmY,EAAAI,eAAAR,EAAAD,GAAA,GAC9E1a,EAAI+a,EAAA,GAAEC,EAAKD,EAAA,IACbpC,EAAQiC,EAAKvK,MAAMsI,MAAMC,QAAO,SAACvK,GAAI,IAAA+M,EAAA,OAAKJ,EAAMlC,SAASzK,EAAKrO,OAAS8O,EAAYE,MAAM8J,SAAS1K,EAAkBC,MAAWrE,EAAQ0F,MAAMH,gBAAgBuJ,SAAyB,QAAjBsC,EAAC/M,EAAKlE,OAAOnK,YAAI,IAAAob,OAAA,EAAhBA,EAAkBhd,MAAM,KACzLyF,OAAQ,CAAFqX,EAAAtY,KAAA,eAAAsY,EAAA7Y,OAAA,6BACX6W,EAAS,IAAID,EAAuB,CAAEjZ,KAAAA,EAAM2Y,MAAAA,EAAOjF,MAAO,KACrDyF,aAAa9E,EAAQ/Q,KAAK4V,GAAQ,wBAAAgC,EAAA7V,OAAA,GAAAoV,MAAA,IAAAC,EAAA,EAAAC,EAJrBpd,OAAO8d,QAAQlM,GAAU,YAAAuL,EAAAC,EAAA9W,QAAA,CAAAiX,EAAAlY,KAAA,gBAAAkY,EAAA3U,cAAAsU,IAAA,+BAAAK,EAAAQ,GAAA,CAAAR,EAAAlY,KAAA,eAAAkY,EAAAzY,OAAA,qBAAAqY,IAAAI,EAAAlY,KAAA,gBAQN,OADzC4V,EAAWpI,KAAKC,MAAMsI,MAAMC,QAAO,SAACvK,GAAI,IAAAkN,EAAA,OAAKvR,EAAQ0F,MAAMH,gBAAgBuJ,SAAyB,QAAjByC,EAAClN,EAAKlE,OAAOnK,YAAI,IAAAub,OAAA,EAAhBA,EAAkBnd,QAAU0Q,EAAYE,MAAM8J,SAAS1K,EAAkBC,GAAM,IACzKgG,EAAQ/Q,KAAIqD,MAAZ0N,EAAOsF,mBAASE,oBAAoBrB,KAAWsC,EAAAzY,OAAA,SAExCgS,GAAO,yBAAAyG,EAAAzV,OAAA,GAAAmV,SAAA,UACjB,SAAAV,cAAA,OAAAI,EAAAvT,MAAA,KAAAD,UAAA,MAAAsT,qBAAA,CAnCsB,CAAS5M,EAAMmM,KAAKQ,aAsCzCyB,EAAwB,SAAAC,GAAAlT,UAAAiT,yBAAAC,GAAA,IAoBzBC,EApByBC,EAAA/S,aAAA4S,0BAC1B,SAAAA,2BAAqB5U,gBAAA,KAAA4U,0BAAA,QAAAI,EAAAlV,UAAA7C,OAAN4C,EAAI,IAAAgI,MAAAmN,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJpV,EAAIoV,GAAAnV,UAAAmV,GAAA,OAAAF,EAAA5d,KAAA4I,MAAAgV,EAAA,OAAAnO,OACN/G,GACb,CAiCC,OAjCAkB,aAAA6T,yBAAA,EAAAne,IAAA,QAAAK,IAED,SAAAA,MACI,MAAO,gBACX,GAAC,CAAAL,IAAA,aAAAK,IAED,SAAAA,MAAiB,IAAAoe,EACb,OAAiB,QAAVA,EAAA1L,KAAKC,aAAK,IAAAyL,GAAVA,EAAYnE,SAAW,EAAI,IACtC,GAAC,CAAAta,IAAA,iBAAAK,IAED,SAAAA,MAAqB,IAAAqe,EACjB,OAA8B,QAA9BA,EAAOjO,EAAY,mBAAW,IAAAiO,EAAAA,EAAK3L,KAAKyH,aAAe,EAAI,CAC/D,GAAC,CAAAxa,IAAA,cAAAe,MAED,SAAA0Z,YAAYC,GACR3H,KAAKyH,cAAe,EACpBzH,KAAK4H,iBACT,GAAC,CAAA3a,IAAA,cAAAe,OAAAsd,EAAAlV,kBAAAxI,sBAAAqG,MAED,SAAA2X,WAAA,IAAA3H,EAAA4H,EAAAC,EAAAC,EAAA3D,EAAA4D,EAAA,YAAApe,sBAAAiB,MAAA,SAAAod,UAAAC,GAAA,cAAAA,EAAApX,KAAAoX,EAAA1Z,MAAA,OACUyR,EAAU,CAAC,IAAI+E,EAAgB,CAAE/K,KAAM,KAAMgL,aAAa,EAAMC,WAAW,KACjF2C,EAAAje,sBAAAqG,MAAA,SAAA4X,SAAA,IAAAM,EAAAvc,EAAAgb,EAAArC,EAAAO,EAAA,OAAAlb,sBAAAiB,MAAA,SAAAud,QAAAC,GAAA,cAAAA,EAAAvX,KAAAuX,EAAA7Z,MAAA,OAE4M,GAF5M2Z,EAAApB,eAAAgB,EAAAD,GAAA,GACYlc,EAAIuc,EAAA,GAAEvB,EAAKuB,EAAA,IACb5D,EAAQyD,EAAK/L,MAAMsI,MAAMC,QAAO,SAACvK,GAAI,IAAAqO,EAAA,OAAK1B,EAAMlC,SAASzK,EAAKrO,OAAS8O,EAAYG,SAAS6J,SAAS1K,EAAkBC,MAAWrE,EAAQ0F,MAAMH,gBAAgBuJ,SAAyB,QAAjB4D,EAACrO,EAAKlE,OAAOnK,YAAI,IAAA0c,OAAA,EAAhBA,EAAkBte,MAAM,KAC5LyF,OAAQ,CAAF4Y,EAAA7Z,KAAA,eAAA6Z,EAAApa,OAAA,6BACX6W,EAAS,IAAID,EAAuB,CAAEjZ,KAAAA,EAAM2Y,MAAAA,EAAOjF,MAAO,KACrDyF,aAAa9E,EAAQ/Q,KAAK4V,GAAQ,wBAAAuD,EAAApX,OAAA,GAAA4W,OAAA,IAAAC,EAAA,EAAAC,EAJrB5e,OAAO8d,QAAQlM,GAAU,YAAA+M,EAAAC,EAAAtY,QAAA,CAAAyY,EAAA1Z,KAAA,gBAAA0Z,EAAAnW,cAAA8V,IAAA,+BAAAK,EAAAhB,GAAA,CAAAgB,EAAA1Z,KAAA,eAAA0Z,EAAAja,OAAA,qBAAA6Z,IAAAI,EAAA1Z,KAAA,gBAQN,OADzC4V,EAAWpI,KAAKC,MAAMsI,MAAMC,QAAO,SAACvK,GAAI,IAAAsO,EAAA,OAAK3S,EAAQ0F,MAAMH,gBAAgBuJ,SAAyB,QAAjB6D,EAACtO,EAAKlE,OAAOnK,YAAI,IAAA2c,OAAA,EAAhBA,EAAkBve,QAAU0Q,EAAYG,SAAS6J,SAAS1K,EAAkBC,GAAM,IAC5KgG,EAAQ/Q,KAAIqD,MAAZ0N,EAAOsF,mBAASE,oBAAoBrB,KAAW8D,EAAAja,OAAA,SAExCgS,GAAO,yBAAAiI,EAAAjX,OAAA,GAAA2W,SAAA,UACjB,SAAAlC,cAAA,OAAA4B,EAAA/U,MAAA,KAAAD,UAAA,MAAA8U,wBAAA,CApCyB,CAASpO,EAAMmM,KAAKQ,aAuC5C6C,EAAoB,SAAAC,GAAAtU,UAAAqU,qBAAAC,GAAA,IAoBrBC,EApBqBC,EAAAnU,aAAAgU,sBACtB,SAAAA,uBAAqBhW,gBAAA,KAAAgW,sBAAA,QAAAI,EAAAtW,UAAA7C,OAAN4C,EAAI,IAAAgI,MAAAuO,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJxW,EAAIwW,GAAAvW,UAAAuW,GAAA,OAAAF,EAAAhf,KAAA4I,MAAAoW,EAAA,OAAAvP,OACN/G,GACb,CAiCC,OAjCAkB,aAAAiV,qBAAA,EAAAvf,IAAA,QAAAK,IAED,SAAAA,MACI,MAAO,eACX,GAAC,CAAAL,IAAA,aAAAK,IAED,SAAAA,MAAiB,IAAAwf,EACb,OAAiB,QAAVA,EAAA9M,KAAKC,aAAK,IAAA6M,GAAVA,EAAYvF,SAAW,EAAI,IACtC,GAAC,CAAAta,IAAA,iBAAAK,IAED,SAAAA,MACI,OAAO0S,KAAKyH,aAAe,EAAI,CACnC,GAAC,CAAAxa,IAAA,cAAAe,MAED,SAAA0Z,YAAYC,GACR3H,KAAKyH,cAAe,EACpBzH,KAAK4H,iBACT,GAAC,CAAA3a,IAAA,cAAAe,OAAA0e,EAAAtW,kBAAAxI,sBAAAqG,MAED,SAAA8Y,WAAA,IAAA9I,EAAA+I,EAAAC,EAAAC,EAAA9E,EAAA+E,EAAA,YAAAvf,sBAAAiB,MAAA,SAAAue,UAAAC,GAAA,cAAAA,EAAAvY,KAAAuY,EAAA7a,MAAA,OACUyR,EAAU,GAAE+I,EAAApf,sBAAAqG,MAAA,SAAA+Y,SAAA,IAAAM,EAAA1d,EAAAgb,EAAArC,EAAAO,EAAA,OAAAlb,sBAAAiB,MAAA,SAAA0e,QAAAC,GAAA,cAAAA,EAAA1Y,KAAA0Y,EAAAhb,MAAA,OAGsL,GAHtL8a,EAAAvC,eAAAmC,EAAAD,GAAA,GAENrd,EAAI0d,EAAA,GAAE1C,EAAK0C,EAAA,IACb/E,EAAQ4E,EAAKlN,MAAMsI,MAAMC,QAAO,SAACvK,GAAI,IAAAwP,EAAA,OAAK7C,EAAMlC,SAASzK,EAAKrO,OAAS8O,EAAYI,KAAK4J,SAAS1K,EAAkBC,MAAWrE,EAAQ0F,MAAMH,gBAAgBuJ,SAAyB,QAAjB+E,EAACxP,EAAKlE,OAAOnK,YAAI,IAAA6d,OAAA,EAAhBA,EAAkBzf,MAAM,KACxLyF,OAAQ,CAAF+Z,EAAAhb,KAAA,eAAAgb,EAAAvb,OAAA,6BACX6W,EAAS,IAAID,EAAuB,CAAEjZ,KAAAA,EAAM2Y,MAAAA,EAAOjF,MAAO,KACrDyF,aAAa9E,EAAQ/Q,KAAK4V,GAAQ,wBAAA0E,EAAAvY,OAAA,GAAA+X,OAAA,IAAAC,EAAA,EAAAC,EAJrB/f,OAAO8d,QAAQlM,GAAU,YAAAkO,EAAAC,EAAAzZ,QAAA,CAAA4Z,EAAA7a,KAAA,gBAAA6a,EAAAtX,cAAAiX,IAAA,+BAAAK,EAAAnC,GAAA,CAAAmC,EAAA7a,KAAA,eAAA6a,EAAApb,OAAA,qBAAAgb,IAAAI,EAAA7a,KAAA,gBAQN,OADzC4V,EAAWpI,KAAKC,MAAMsI,MAAMC,QAAO,SAACvK,GAAI,IAAAyP,EAAA,OAAK9T,EAAQ0F,MAAMH,gBAAgBuJ,SAAyB,QAAjBgF,EAACzP,EAAKlE,OAAOnK,YAAI,IAAA8d,OAAA,EAAhBA,EAAkB1f,QAAU0Q,EAAYI,KAAK4J,SAAS1K,EAAkBC,GAAM,IACxKgG,EAAQ/Q,KAAIqD,MAAZ0N,EAAOsF,mBAASE,oBAAoBrB,KAAWiF,EAAApb,OAAA,SAExCgS,GAAO,yBAAAoJ,EAAApY,OAAA,GAAA8X,SAAA,UACjB,SAAArD,cAAA,OAAAgD,EAAAnW,MAAA,KAAAD,UAAA,MAAAkW,oBAAA,CApCqB,CAASxP,EAAMmM,KAAKQ,aAuCxCgE,EAAmB,SAAAC,GAAAzV,UAAAwV,oBAAAC,GAAA,IAepBC,EAfoBC,EAAAtV,aAAAmV,qBACrB,SAAAA,sBAAqBnX,gBAAA,KAAAmX,qBAAA,QAAAI,EAAAzX,UAAA7C,OAAN4C,EAAI,IAAAgI,MAAA0P,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJ3X,EAAI2X,GAAA1X,UAAA0X,GAAA,OAAAF,EAAAngB,KAAA4I,MAAAuX,EAAA,OAAA1Q,OACN/G,GACb,CAqBC,OArBAkB,aAAAoW,oBAAA,EAAA1gB,IAAA,QAAAK,IAED,SAAAA,MACI,MAAO,4BACX,GAAC,CAAAL,IAAA,aAAAK,IAED,SAAAA,MAAiB,IAAA2gB,EAAAC,EAAAC,EACb,OAAiB,QAAVF,EAAAjO,KAAKC,aAAK,IAAAgO,GAAVA,EAAY1G,UAAmD,QAA3C2G,EAA8B,QAA9BC,EAAGnO,KAAKC,MAAMlG,OAAOqU,iBAAS,IAAAD,GAAQ,QAARA,EAA3BA,EAA6BE,cAAM,IAAAF,OAAA,EAAnCA,EAAqC5K,WAAG,IAAA2K,EAAAA,EAAW,IACrF,GAAC,CAAAjhB,IAAA,iBAAAK,IAED,SAAAA,MAAqB,IAAAghB,EAAAC,EACjB,OAAiD,QAAjDD,EAAkC,QAAlCC,EAAOvO,KAAKC,MAAMlG,OAAOqU,iBAAS,IAAAG,GAAQ,QAARA,EAA3BA,EAA6BF,cAAM,IAAAE,OAAA,EAAnCA,EAAqCvgB,aAAK,IAAAsgB,EAAAA,EAAI,IACzD,GAAC,CAAArhB,IAAA,cAAAe,OAAA6f,EAAAzX,kBAAAxI,sBAAAqG,MAED,SAAAua,WAAA,IAAAvK,EAAA,OAAArW,sBAAAiB,MAAA,SAAA4f,UAAAC,GAAA,cAAAA,EAAA5Z,KAAA4Z,EAAAlc,MAAA,OAKO,OAJGyR,EAAU,GACEjE,KAAKC,MAAMsI,MAAMC,QAAO,SAACvK,GAAI,MAAiC,cAA5BD,EAAkBC,EAAqB,IACjF1N,SAAQ,SAAC0N,GACfgG,EAAQ/Q,KAAK,IAAI8V,EAAgB,CAAE/K,KAAAA,EAAM0Q,eAAe,IAC5D,IAAGD,EAAAzc,OAAA,SACIgS,GAAO,wBAAAyK,EAAAzZ,OAAA,GAAAuZ,SAAA,UACjB,SAAA9E,cAAA,OAAAmE,EAAAtX,MAAA,KAAAD,UAAA,MAAAqX,mBAAA,CAxBoB,CAAS3Q,EAAMmM,KAAKQ,aA2BvCiF,EAAoB,SAAAC,GAAA1W,UAAAyW,qBAAAC,GAAA,IAerBC,EAfqBC,EAAAvW,aAAAoW,sBACtB,SAAAA,uBAAqBpY,gBAAA,KAAAoY,sBAAA,QAAAI,EAAA1Y,UAAA7C,OAAN4C,EAAI,IAAAgI,MAAA2Q,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJ5Y,EAAI4Y,GAAA3Y,UAAA2Y,GAAA,OAAAF,EAAAphB,KAAA4I,MAAAwY,EAAA,OAAA3R,OACN/G,GACb,CAqBC,OArBAkB,aAAAqX,qBAAA,EAAA3hB,IAAA,QAAAK,IAED,SAAAA,MACI,MAAO,uBACX,GAAC,CAAAL,IAAA,aAAAK,IAED,SAAAA,MAAiB,IAAA4hB,EACb,OAAiB,QAAVA,EAAAlP,KAAKC,aAAK,IAAAiP,GAAVA,EAAY3H,SAAW,EAAI,IACtC,GAAC,CAAAta,IAAA,iBAAAK,IAED,SAAAA,MAAqB,IAAA6hB,EACjB,OAAiD,GAAV,QAAhCA,EAAAnP,KAAKC,MAAMlG,OAAOqU,UAAUgB,YAAI,IAAAD,OAAA,EAAhCA,EAAkCnhB,MAC7C,GAAC,CAAAf,IAAA,cAAAe,OAAA8gB,EAAA1Y,kBAAAxI,sBAAAqG,MAED,SAAAob,WAAA,IAAApL,EAAA,OAAArW,sBAAAiB,MAAA,SAAAygB,UAAAC,GAAA,cAAAA,EAAAza,KAAAya,EAAA/c,MAAA,OAKO,OAJGyR,EAAU,GACHjE,KAAKC,MAAMsI,MAAMC,QAAO,SAACvK,GAAI,MAAiC,SAA5BD,EAAkBC,EAAgB,IAC5E1N,SAAQ,SAAC0N,GACVgG,EAAQ/Q,KAAK,IAAI8V,EAAgB,CAAE/K,KAAAA,EAAM0Q,eAAe,IAC5D,IAAGY,EAAAtd,OAAA,SACIgS,GAAO,wBAAAsL,EAAAta,OAAA,GAAAoa,SAAA,UACjB,SAAA3F,cAAA,OAAAoF,EAAAvY,MAAA,KAAAD,UAAA,MAAAsY,oBAAA,CAxBqB,CAAS5R,EAAMmM,KAAKQ,aA2BxC6F,EAAsB,SAAAC,GAAAtX,UAAAqX,uBAAAC,GAAA,IAevBC,EAfuBC,EAAAnX,aAAAgX,wBACxB,SAAAA,yBAAqBhZ,gBAAA,KAAAgZ,wBAAA,QAAAI,EAAAtZ,UAAA7C,OAAN4C,EAAI,IAAAgI,MAAAuR,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJxZ,EAAIwZ,GAAAvZ,UAAAuZ,GAAA,OAAAF,EAAAhiB,KAAA4I,MAAAoZ,EAAA,OAAAvS,OACN/G,GACb,CAqBC,OArBAkB,aAAAiY,uBAAA,EAAAviB,IAAA,QAAAK,IAED,SAAAA,MACI,MAAO,yBACX,GAAC,CAAAL,IAAA,aAAAK,IAED,SAAAA,MACI,OAAO,IACX,GAAC,CAAAL,IAAA,iBAAAK,IAED,SAAAA,MACI,OAAO,IACX,GAAC,CAAAL,IAAA,cAAAe,OAAA0hB,EAAAtZ,kBAAAxI,sBAAAqG,MAED,SAAA6b,YAAA,IAAA7L,EAAA,OAAArW,sBAAAiB,MAAA,SAAAkhB,WAAAC,GAAA,cAAAA,EAAAlb,KAAAkb,EAAAxd,MAAA,OAKO,OAJGyR,EAAU,GACDjE,KAAKC,MAAMsI,MAAMC,QAAO,SAACvK,GAAI,MAAiC,WAA5BD,EAAkBC,EAAkB,IAC9E1N,SAAQ,SAAC0N,GACZgG,EAAQ/Q,KAAK,IAAI8V,EAAgB,CAAE/K,KAAAA,EAAM0Q,eAAe,IAC5D,IAAGqB,EAAA/d,OAAA,SACIgS,GAAO,wBAAA+L,EAAA/a,OAAA,GAAA6a,UAAA,UACjB,SAAApG,cAAA,OAAAgG,EAAAnZ,MAAA,KAAAD,UAAA,MAAAkZ,sBAAA,CAxBuB,CAASxS,EAAMmM,KAAKQ,aA2B1CX,EAAe,SAAAiH,GAAA9X,UAAA6Q,gBAAAiH,GAAA,IAiEhBC,EAJAC,EARAC,EANAC,EA/CgBC,EAAA9X,aAAAwQ,iBACjB,SAAAA,kBAAqBxS,gBAAA,KAAAwS,iBAAA,QAAAuH,EAAAja,UAAA7C,OAAN4C,EAAI,IAAAgI,MAAAkS,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJna,EAAIma,GAAAla,UAAAka,GAAA,OAAAF,EAAA3iB,KAAA4I,MAAA+Z,EAAA,OAAAlT,OACN/G,GACb,CAuFC,OAvFAkB,aAAAyR,gBAAA,EAAA/b,IAAA,WAAAK,IAED,SAAAA,MAAe,IAAAmjB,EACX,GAAc,QAAVA,EAACzQ,KAAK/B,YAAI,IAAAwS,GAAQ,QAARA,EAATA,EAAW1W,cAAM,IAAA0W,GAAjBA,EAAmBrS,WAGxB,OAAOC,MAAMC,KAAK0B,KAAK/B,KAAKlE,OAAOqE,YAAY,EACnD,GAAC,CAAAnR,IAAA,aAAAK,IAED,SAAAA,MACI,OAAO,CACX,GAAC,CAAAL,IAAA,SAAAK,IAED,SAAAA,MAAa,IAAAojB,EAAAC,EAAAC,EAAAC,EAAAC,EACH7S,EAAO+B,KAAK+Q,SACZC,EAAiC,SAApB/S,EAAKzC,MAAMF,MAAyB,QAAToV,EAAGO,cAAM,IAAAP,GAAO,QAAPA,EAANA,EAAQQ,aAAK,IAAAR,GAAM,QAANA,EAAbA,EAAeS,YAAI,IAAAT,OAAA,EAAnBA,EAAqBU,SAAW,KACjF,MAAO,CACHC,OAA0B,QAApBV,EAAE1S,SAAW,QAAP2S,EAAJ3S,EAAMzC,aAAK,IAAAoV,OAAA,EAAXA,EAAa5iB,aAAK,IAAA2iB,EAAAA,EAAIK,EAC9BvV,KAAuB,QAAvBoV,EAAM5S,SAAW,QAAP6S,EAAJ7S,EAAMzC,aAAK,IAAAsV,OAAA,EAAXA,EAAA,YAAiB,IAAAD,EAAAA,EAAI,KAEnC,GAAC,CAAA5jB,IAAA,UAAAK,IAED,SAAAA,MAAc,IAAAgkB,EAAAC,EAAAC,EAM8DC,EALlExT,EAAO+B,KAAK+Q,SAEZlV,EAAaoC,EAAKpC,WAClB6V,EAA8B,QAAvBJ,EAAc,QAAdC,EAAGtT,EAAKrH,cAAM,IAAA2a,OAAA,EAAXA,EAAaG,eAAO,IAAAJ,EAAAA,EAAI,CAAC,EACnCK,EAAaD,EAAQ9hB,KAC3B,OAAgB,QAAZ4hB,EAACvT,EAAKrH,cAAM,IAAA4a,GAAU,QAAVA,EAAXA,EAAaI,gBAAQ,IAAAJ,GAArBA,EAAuBlW,QAJP,CAAC,WAAY,OAAQ,SAIQoN,SAASiJ,GAEjC,SAAf9V,GAAwC,SAAfA,EACzB6V,EAAQG,OAAS,EAErB,KAJiB,QAApBJ,EAAOC,EAAQG,aAAK,IAAAJ,EAAAA,EAAI,CAKhC,GAAC,CAAAxkB,IAAA,UAAAK,IAED,SAAAA,MAAc,IAAAwkB,EAAAC,EACV,IAAK/R,KAAKgS,aAAc,OAAAta,KAAAO,gBAAA+Q,gBAAAvb,WAAA,gBACxB,IAAMwkB,EAAajS,KAAKkS,kBAAkB9G,EACpC+G,EAAwC,UAAjB,QAAbL,EAAA9R,KAAK+Q,gBAAQ,IAAAe,OAAA,EAAbA,EAAejW,YAC/B,QAAIoW,IAAeE,MACfnS,KAAKoS,YAC0B,YAAlB,QAAbL,EAAA/R,KAAK+Q,gBAAQ,IAAAgB,GAAM,QAANA,EAAbA,EAAeniB,YAAI,IAAAmiB,OAAA,EAAnBA,EAAqB/jB,SADJ0J,KAAAO,gBAAA+Q,gBAAAvb,WAAA,gBAGzB,GAAC,CAAAR,IAAA,iBAAAe,OAAAqiB,EAAAja,kBAAAxI,sBAAAqG,MAED,SAAAoe,YAAA,IAAA9N,EAAA,OAAA3W,sBAAAiB,MAAA,SAAAyjB,WAAAC,GAAA,cAAAA,EAAAzd,KAAAyd,EAAA/f,MAAA,cAAA+f,EAAA/f,KAAA,EAC8BkS,kBAAkB1E,KAAK/B,MAAK,OAC0B,OAD1EsG,EAAWgO,EAAAzgB,MACL0gB,gBAAkB,kDAAkDD,EAAAtgB,OAAA,SACzEsS,GAAW,wBAAAgO,EAAAtd,OAAA,GAAAod,UAAA,UACrB,SAAA1N,iBAAA,OAAA0L,EAAA9Z,MAAA,KAAAD,UAAA,KAAArJ,IAAA,eAAAe,OAAAoiB,EAAAha,kBAAAxI,sBAAAqG,MAED,SAAAwe,UAAmB5Q,GAAK,OAAAjU,sBAAAiB,MAAA,SAAA6jB,WAAAC,GAAA,cAAAA,EAAA7d,KAAA6d,EAAAngB,MAAA,OAC8B,OAAlDqL,GAAGb,MAAM4V,oBAAoB/Q,EAAMgR,eAAeF,EAAAngB,KAAA,EAC/BwN,KAAK/B,KAAK6U,IAAI,CAACjR,MAAAA,EAAOkR,QAAQ,GAAQ,CAAClR,MAAAA,IAAO,OAAvD8Q,EAAA7gB,MAENkX,gBAAgBgK,qBAAqBhT,KAAK+Q,UAC7C,wBAAA4B,EAAA1d,OAAA,GAAAwd,UAAA,UACJ,SAAAQ,aAAAC,GAAA,OAAA9C,EAAA7Z,MAAA,KAAAD,UAAA,KAAArJ,IAAA,gBAAAe,OAAAmiB,EAAA/Z,kBAAAxI,sBAAAqG,MAED,SAAAkf,UAAoBtR,GAAK,IAAAuR,EAAA,OAAAxlB,sBAAAiB,MAAA,SAAAwkB,WAAAC,GAAA,cAAAA,EAAAxe,KAAAwe,EAAA9gB,MAAA,OACR,QAAb4gB,EAAApT,KAAK+Q,gBAAQ,IAAAqC,GAAO,QAAPA,EAAbA,EAAeG,aAAK,IAAAH,GAApBA,EAAsBI,QAAO,GAAM,wBAAAF,EAAAre,OAAA,GAAAke,UAAA,UACtC,SAAAM,cAAAC,GAAA,OAAAvD,EAAA5Z,MAAA,KAAAD,UAAA,KAAArJ,IAAA,SAAAe,OAAAkiB,EAAA9Z,kBAAAxI,sBAAAqG,MA2BD,SAAA0f,YAAA,IAAAC,EAAAC,EAAAxd,EAAAyd,EAAAC,EAAAC,EAAA,KAAAC,EAAA3d,UAAA,OAAA1I,sBAAAiB,MAAA,SAAAqlB,WAAAC,GAAA,cAAAA,EAAArf,KAAAqf,EAAA3hB,MAAA,WAAAqhB,EAAAI,EAAAxgB,OAAgB4C,EAAI,IAAAgI,MAAAwV,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJzd,EAAIyd,GAAAG,EAAAH,GAAA,OAAAK,EAAA3hB,KAAA,GAAAohB,EAAAlc,KAAAO,gBAAA+Q,gBAAAvb,WAAA,gBAAAE,KAAA4I,MAAAqd,EAAA,OAAAxW,OACM/G,IAAI,OACtB2J,KAAK+Q,WACCgD,EAAU/T,KAAKC,MAAMsI,MAAMC,QAAO,SAACvK,GAAI,IAAAmW,EAAA,OAAiB,QAAZA,EAAAnW,EAAKvC,eAAO,IAAA0Y,OAAA,EAAZA,EAAcxd,UAAWod,EAAKjD,SAAS/W,EAAE,IAC3F6D,GAAGb,MAAMqX,kBAAkBN,IAC9B,wBAAAI,EAAAlf,OAAA,GAAA0e,UAAA,UACJ,SAAAH,SAAA,OAAAtD,EAAA3Z,MAAA,KAAAD,UAAA,KAAArJ,IAAA,WAAAK,IAED,SAAAA,MAAe,IAAAgnB,EACX,IAAKtU,KAAK+Q,SAAU,OAAO,KAC3B,IAY+DwD,EAAAC,EAXzDC,EAAmC,QAAxBH,EAAGtU,KAAK+Q,SAASrV,eAAO,IAAA4Y,OAAA,EAArBA,EAAuB1kB,KAC3C,GAAoB,SAAhB6kB,EAAwB,KAAAC,EAClBC,EAAW3U,KAAKC,MAAMsI,MAAMjb,IAAI0S,KAAK+Q,SAASrV,QAAQ9E,QAC5D,OAAK+d,EACEC,KAAKC,OAAwB,QAAlBH,EAACC,EAASja,gBAAQ,IAAAga,EAAAA,EAAI,GAAK1U,KAAK+Q,SAASrV,QAAQC,QAD7C,IAE1B,CAAO,GAAoB,cAAhB8Y,EACP,OAAOG,KAAKC,MAAMC,YAAY9U,KAAKC,MAAOD,KAAK+Q,SAASrV,QAAQ9E,QAAUoJ,KAAK+Q,SAASrV,QAAQC,QAC7F,GAAoB,YAAhB8Y,EAA2B,KAAAM,EAAAC,EAC5BC,EAAcjV,KAAKC,MAAMsI,MAAMjb,IAAI0S,KAAK+Q,SAASrV,QAAQ9E,QAC/D,OAAKqe,EACEL,KAAKC,OAA8B,QAAxBE,EAAiB,QAAjBC,EAACC,EAAYC,YAAI,IAAAF,OAAA,EAAhBA,EAAkBhnB,aAAK,IAAA+mB,EAAAA,EAAI,GAAK/U,KAAK+Q,SAASrV,QAAQC,QADhD,IAE7B,CAAO,MAZuB,CAAC,cAYE+M,SAAS1I,KAAK+Q,SAASnhB,MACpB,QAAhC2kB,EAAyB,QAAzBC,EAAOxU,KAAK+Q,SAASmE,YAAI,IAAAV,OAAA,EAAlBA,EAAoBxmB,aAAK,IAAAumB,EAAAA,EAAIvU,KAAK+Q,SAASrW,SACd,OAA7BsF,KAAK+Q,SAASmE,KAAKlnB,OAA6C,OAA3BgS,KAAK+Q,SAASmE,KAAKC,KAAgBnV,KAAK+Q,SAASmE,KAAK3R,IAC3FvD,KAAK+Q,SAASmE,KAAKlnB,MAEvB,IACX,IAAC,EAAAf,IAAA,uBAAAe,MArDD,SAAAglB,qBAA4B/U,GAGxB,IAH8B,IAAAmX,EACxBC,EAAiBrX,EAAkBC,GACrCpC,EAAa,KACjByZ,EAAA,EAAAC,EAA4BpoB,OAAO8d,QAAQvM,GAAY4W,EAAAC,EAAA9hB,OAAA6hB,IAAE,CAApD,IAAAE,EAAAzK,eAAAwK,EAAAD,GAAA,GAAO1lB,EAAI4lB,EAAA,GAAOA,EAAA,GACT9M,SAAS2M,KAAiBxZ,EAAajM,EACrD,CACKiM,KACU,QAAXuZ,EAAAtb,KAAK6N,cAAM,IAAAyN,GAAW,QAAXA,EAAXA,EAAaK,iBAAS,IAAAL,OAAA,EAAtBA,EAAwBnV,SAAUhC,EAAKiU,SAAQrW,EAAa,YAC7C,WAAfA,GACAgC,GAAGb,MAAM0Y,WAAWC,KAAK,GAAGlO,cAAe,EAC3C5J,GAAGb,MAAM0Y,WAAWC,KAAK,GAAG/N,mBACN,UAAf/L,GACPgC,GAAGb,MAAM0Y,WAAWC,KAAK,GAAGlO,cAAe,EAC3C5J,GAAGb,MAAM0Y,WAAWC,KAAK,GAAG/N,mBACN,aAAf/L,GACPgC,GAAGb,MAAM0Y,WAAWC,KAAK,GAAGlO,cAAe,EAC3C5J,GAAGb,MAAM0Y,WAAWC,KAAK,GAAG/N,mBACN,SAAf/L,GACPgC,GAAGb,MAAM0Y,WAAWC,KAAK,GAAGlO,cAAe,EAC3C5J,GAAGb,MAAM0Y,WAAWC,KAAK,GAAG/N,mBACN,cAAf/L,IACPgC,GAAGb,MAAM0Y,WAAWC,KAAK,GAAGlO,cAAe,GAEnD,KAACuB,eAAA,CA1FgB,CAAShM,EAAMmM,KAAKC,QAAQwM,YA2H3C/M,EAAsB,SAAAgN,GAAA1d,UAAA0Q,uBAAAgN,GAAA,IA6HvBC,EA7HuBC,EAAAvd,aAAAqQ,wBACxB,SAAAA,uBAAAmN,GAAoC,IAAAC,EAAtBrmB,EAAIomB,EAAJpmB,KAAM2Y,EAAKyN,EAALzN,MAAOjF,EAAK0S,EAAL1S,MAMgB,OANX9M,gBAAA,KAAAqS,yBAC5BoN,EAAAF,EAAApoB,KAAA,OACKiC,KAAOA,EACZqmB,EAAK1N,MAAQA,EACb0N,EAAK3S,MAAQA,EACb2S,EAAKC,gBAAkB,GACvBD,EAAKE,QAAUF,EAAKG,mBAAmBH,CAC3C,CA6HC,OA7HA1e,aAAAsR,uBAAA,EAAA5b,IAAA,cAAAK,IAED,SAAAA,MACI,OAAO0S,KAAKmW,UAAYnW,KAAKmW,QAAQ1iB,UAAYuM,KAAKkW,gBAAgBziB,SAAWuM,KAAKuI,MAAM9U,MAChG,GAAC,CAAAxG,IAAA,cAAAK,IAED,SAAAA,MACI,OAAO0S,KAAKsD,KAChB,GAAC,CAAArW,IAAA,KAAAK,IAED,SAAAA,MACI,MAAO,GAAP8P,OAAU4C,KAAKpQ,KAAI,KAAAwN,OAAI4C,KAAKsD,MAChC,GAAC,CAAArW,IAAA,QAAAK,IAED,SAAAA,MACI,OAAQ0S,KAAKpQ,MACT,IAAK,QACD,MAAO,6CACX,IAAK,OACD,MAAO,4CACX,IAAK,aACD,MAAO,2CAEnB,GAAC,CAAA3C,IAAA,OAAAK,IAED,SAAAA,MACI,OAAQ0S,KAAKpQ,MACT,IAAK,QACD,MAAO,kDACX,IAAK,OACD,MAAO,oDACX,IAAK,aACD,MAAO,gDAEnB,GAAC,CAAA3C,IAAA,mBAAAK,IAED,SAAAA,MACI,GAAwB,cAApB0S,KAAKC,MAAMrQ,KAAsB,OAAO,EAC5C,IAAMymB,EAAerW,KAAKC,MAAMlC,QAAQsB,EAAW,gBACnD,GAAqB,QAAjBgX,EAAwB,OAAO,EACnC,GAAqB,iBAAjBA,EAAiC,OAAO,EAC5C,IAAMzV,EAAUzT,OAAOqH,KAAKwL,KAAKC,MAAMW,SAEvC,MAD4B,CAAC,SAAU,QAAS,UAAW,SAAU,aAAa0V,MAAK,SAACC,GAAS,OAAK3V,EAAQ8H,SAAS6N,EAAU,GAErI,GAAC,CAAAtpB,IAAA,mBAAAe,MAED,SAAAooB,mBAAmB,IAAAI,EAAAC,EAAA,KACf,GAAkB,UAAdzW,KAAKpQ,KAAT,CAEA,IAAM8mB,EAAcpW,OAAOhB,MAAMoX,YAC3BC,EAAgB,GACtB,GAA4C,QAA5CH,EAAI1c,KAAK0D,QAAQlQ,IAAI,+BAAuB,IAAAkpB,GAAxCA,EAA0C/Y,OAAQ,KAAAmZ,EAIrBC,EAHvBC,EAAShd,KAAK0D,QAAQlQ,IAAI,wBAAwBypB,IAClDlb,EAA4C,QAAlC+a,EAAG5W,KAAKuI,MAAM,GAAGxO,OAAOmB,kBAAU,IAAA0b,OAAA,EAA/BA,EAAiChnB,KAC8DonB,EAAAC,2BAA/FjX,KAAKC,MAAMsI,MAAMC,QAAO,SAACvK,GAAI,IAAAiZ,EAAA,OAAuC,QAAvCA,EAAKjZ,EAAKxB,MAAM,+BAAuB,IAAAya,GAAiB,QAAjBA,EAAlCA,EAAqC,sBAAc,IAAAA,OAAA,EAAnDA,EAAqDzjB,MAAM,KACnF,QAAA0jB,EAAA,SAAAA,SAAE,IAApBlZ,EAAI4Y,EAAA7oB,MAELopB,EADYnZ,EAAKxB,MAAM,wBAAwB,eACtBoE,KAAI,SAAC7B,GAAK,OAAKyX,EAAKxW,MAAMsI,MAAMjb,IAAI0R,EAAMhF,GAAG,IAAEwO,QAAO,SAACvK,GAAI,OAAKA,GAAQD,EAAkBC,KAAUpC,CAAU,IAC7I,OAAKub,EAAa3jB,QAClBkjB,EAAczjB,KAAIqD,MAAlBogB,EAAapN,mBAAS6N,IACjBN,EAAOO,aAAapZ,QACzBwY,EAAKP,gBAAgBhjB,KAAK,CACtBuN,MAAOxC,EAAKjK,KACZiQ,QAASmT,EAAavW,KAAI,SAAC5C,GAAI,OAAK,IAAI+K,EAAgB,CAAE/K,KAAAA,GAAO,IACjEiX,KAAM,SAAAA,OAAM,IAAAoC,EAAAC,EACR,MAAO,CAAEhU,IAAqB,QAAlB+T,EAAErZ,EAAKlE,OAAOmb,YAAI,IAAAoC,OAAA,EAAhBA,EAAkB/T,IAAKvV,MAAuB,QAAlBupB,EAAEtZ,EAAKlE,OAAOmb,YAAI,IAAAqC,OAAA,EAAhBA,EAAkBvpB,MAClE,IAN0B,YAFN,UAU5B,EAbA,IAAAgpB,EAAAQ,MAAAX,EAAAG,EAAAS,KAAAvlB,MAAAilB,GAaC,OAAAvoB,GAAAooB,EAAA/d,EAAArK,EAAA,SAAAooB,EAAAU,GAAA,CACD1X,KAAKuI,MAAQvI,KAAKuI,MAAMC,QAAO,SAACvK,GAAI,OAAM0Y,EAAcjO,SAASzK,EAAK,GAC1E,CACA,GAAI+B,KAAK2X,iBAAkB,CACvB,IAAMC,EAAqB,CAAC,SAAU,SAAU,OAAQ,UACxD5X,KAAKuI,MAAQvI,KAAKuI,MAAMC,QAAO,SAACvK,GAC5B,QAAI2Z,EAAmBlP,SAASzK,EAAKlE,OAAO8d,YAAYC,QAC/B,GAArB7Z,EAAKlE,OAAOiH,OACT/C,EAAKlE,OAAO8d,YAAYE,SACnC,GACJ,CA2BA,IAzBA,IAAMC,EAAS,GAAH5a,OAAAmM,mBACLvJ,KAAKkW,iBAAe,CACvB,CACIzV,MAAO,wBACPwD,QAASjE,KAAKuI,MAAMC,QAAO,SAACvK,GAAI,MAAsC,WAAjCA,EAAKlE,OAAO8d,YAAYC,IAAiB,IAAEjX,KAAI,SAAC5C,GAAI,OAAK,IAAI+K,EAAgB,CAAE/K,KAAAA,GAAO,IAC3HiX,KAAM,CAAE3R,IAAK0U,IAAUjqB,MAAOiqB,MAElC,CACIxX,MAAO,wBACPwD,QAASjE,KAAKuI,MAAMC,QAAO,SAACvK,GAAI,MAAsC,WAAjCA,EAAKlE,OAAO8d,YAAYC,IAAiB,IAAEjX,KAAI,SAAC5C,GAAI,OAAK,IAAI+K,EAAgB,CAAE/K,KAAAA,GAAO,IAC3HiX,KAAM,CAAE3R,IAAK0U,IAAUjqB,MAAOiqB,MAElC,CACIxX,MAAOtT,OAAOiD,OAAOsmB,GAAa,GAClCzS,QAASjE,KAAKuI,MAAMC,QAAO,SAACvK,GAAI,OAA0B,GAArBA,EAAKlE,OAAOiH,KAAU,IAAEH,KAAI,SAAC5C,GAAI,OAAK,IAAI+K,EAAgB,CAAE/K,KAAAA,GAAO,IACxGiX,KAAM,CAAE3R,IAAK0U,IAAUjqB,MAAOiqB,MAElC,CACIxX,MAAO,kBACPwD,QAASjE,KAAKuI,MAAMC,QAAO,SAACvK,GAAI,MAAsC,SAAjCA,EAAKlE,OAAO8d,YAAYC,IAAe,IAAEjX,KAAI,SAAC5C,GAAI,OAAK,IAAI+K,EAAgB,CAAE/K,KAAAA,GAAO,IACzHiX,KAAM,SAAAA,OACF,OAAOuB,EAAKxW,MAAMlG,OAAOie,OAAOE,IACpC,KAENC,EAAA,SAAAA,SACG,IAAAC,EAAArN,eAAAsN,EAAAC,GAAA,GAAOtX,EAAKoX,EAAA,GAAE3X,EAAK2X,EAAA,GACdG,EAAc9B,EAAKlO,MAAMC,QAAO,SAACvK,GAAI,OAAKA,EAAKlE,OAAOiH,OAASA,IAA2C,aAAjC/C,EAAKlE,OAAO8d,YAAYC,MAAwD,WAAjC7Z,EAAKlE,OAAO8d,YAAYC,KAAkB,IACxK,IAAKS,EAAY9kB,QAAmB,GAATuN,EAAY,MAAF,WACrCgX,EAAO9kB,KAAK,CACRuN,MAAAA,EACAwD,QAASsU,EAAY1X,KAAI,SAAC5C,GAAI,OAAK,IAAI+K,EAAgB,CAAE/K,KAAAA,GAAO,IAChEiX,KAAM,SAAAA,OACF,OAAOuB,EAAKxW,MAAMlG,OAAOie,OAAO,QAAD5a,OAAS4D,GAC5C,GAER,EAVAsX,EAAA,EAAAD,EAA6BlrB,OAAO8d,QAAQyL,GAAY4B,EAAAD,EAAA5kB,OAAA6kB,IAAAH,IAWxD,OAAOH,EAAOxP,QAAO,SAACxJ,GAAK,OAAKA,EAAMiF,QAAQxQ,MAAM,GArEnB,CAsErC,GAAC,CAAAxG,IAAA,YAAAe,OAAA8nB,EAAA1f,kBAAAxI,sBAAAqG,MAED,SAAAukB,YAAA,OAAA5qB,sBAAAiB,MAAA,SAAA4pB,WAAAC,GAAA,cAAAA,EAAA5jB,KAAA4jB,EAAAlmB,MAAA,UACsB,UAAdwN,KAAKpQ,KAAgB,CAAA8oB,EAAAlmB,KAAA,eAAAkmB,EAAAzmB,OAAA,SACd,IAAI+K,EAAMmM,KAAKwP,cAAcC,UAAUC,eAAe,CAAE7e,GAAIgG,KAAKhG,GAAI8e,yBAA0B9Y,KAAKmW,QAAQtV,KAAI,SAAAkY,GAAA,IAAGtY,EAAKsY,EAALtY,MAAOwD,EAAO8U,EAAP9U,QAASiR,EAAI6D,EAAJ7D,KAAI,OAAO,IAAIlY,EAAMmM,KAAKwP,cAAcC,UAAUI,uBAAuB,CAAEvY,MAAAA,EAAOwD,QAAAA,EAASiR,KAAAA,GAAO,OAAI,cAAAwD,EAAAzmB,OAAA,SAEzO,IAAI+K,EAAMmM,KAAKwP,cAAcM,YAAY,CAAEjf,GAAIgG,KAAKhG,GAAIiK,QAASjE,KAAKuI,MAAM1H,KAAI,SAAC5C,GAAI,OAAK,IAAI+K,EAAgB,CAAE/K,KAAAA,GAAO,OAAI,wBAAAya,EAAAzjB,OAAA,GAAAujB,UAAA,UAEzI,SAAAU,YAAA,OAAApD,EAAAvf,MAAA,KAAAD,UAAA,MAAAuS,sBAAA,CArIuB,CAAS7L,EAAMmM,KAAKC,QAAQ+P,mBAwIlD7P,EAAwB,SAAA8P,GAAAjhB,UAAAmR,yBAAA8P,GAAA,IAiDzBC,EAdAC,EANAC,EA7ByBC,EAAAhhB,aAAA8Q,0BAC1B,SAAAA,yBAAYmQ,GAAa,IAAAC,EAAAljB,gBAAA,KAAA8S,0BAErB,IAAMqQ,GADND,EAAAF,EAAA7rB,KAAA,OACuBsS,MAAMsI,MAAMqR,QAAQH,EAAYzlB,MAMhD,OALP0lB,EAAKC,UAAYA,EACjBD,EAAKzb,KACD0b,QAAAA,EACA,IAAIrZ,OAAOuZ,KAAKC,cAAcL,EAAa,CACvCvH,OAAQwH,EAAKzZ,QACdyZ,CACX,CA4EC,OA5EAniB,aAAA+R,yBAAA,EAAArc,IAAA,QAAAK,IAED,SAAAA,MACI,OAAO0S,KAAK/B,KAAKjK,IACrB,GAAC,CAAA/G,IAAA,OAAAK,IAED,SAAAA,MACI,OAAO0S,KAAK/B,KAAK7D,GACrB,GAAC,CAAAnN,IAAA,aAAAK,IAED,SAAAA,MACI,OAAO,CACX,GAAC,CAAAL,IAAA,WAAAK,IAED,SAAAA,MAAe,IAAAysB,EACX,GAAc,QAAVA,EAAC/Z,KAAK/B,YAAI,IAAA8b,GAAQ,QAARA,EAATA,EAAWhgB,cAAM,IAAAggB,GAAjBA,EAAmB3b,WAGxB,OAAOC,MAAMC,KAAK0B,KAAK/B,KAAKlE,OAAOqE,YAAY,EACnD,GAAC,CAAAnR,IAAA,iBAAAe,OAAAurB,EAAAnjB,kBAAAxI,sBAAAqG,MAED,SAAA+lB,YAAA,IAAAzV,EAAA,OAAA3W,sBAAAiB,MAAA,SAAAorB,WAAAC,GAAA,cAAAA,EAAAplB,KAAAolB,EAAA1nB,MAAA,cAAA0nB,EAAA1nB,KAAA,EAC8BkS,kBAAkB1E,KAAK/B,MAAK,OAC0B,OAD1EsG,EAAW2V,EAAApoB,MACL0gB,gBAAkB,kDAAkD0H,EAAAjoB,OAAA,SACzEsS,GAAW,wBAAA2V,EAAAjlB,OAAA,GAAA+kB,UAAA,UACrB,SAAArV,iBAAA,OAAA4U,EAAAhjB,MAAA,KAAAD,UAAA,KAAArJ,IAAA,eAAAe,OAAAsrB,EAAAljB,kBAAAxI,sBAAAqG,MAED,SAAAkmB,UAAmBtY,GAAK,IAAAuY,EAAAC,EAAA7Y,EAAA,OAAA5T,sBAAAiB,MAAA,SAAAyrB,WAAAC,GAAA,cAAAA,EAAAzlB,KAAAylB,EAAA/nB,MAAA,OAED,GADb6nB,GAAqD,QAA7CD,EAAAtgB,KAAK0D,QAAQlQ,IAAI,oCAA4B,IAAA8sB,OAAA,EAA7CA,EAA+C3c,SAAU3D,KAAK0gB,OAAOC,gBAAgBC,WAAW,CAAEC,WAAY3a,KAAKS,QAC7He,GAAU,GACV6Y,EAAO,CAAFE,EAAA/nB,KAAA,QACU,OAAfgP,GAAU,EAAK+Y,EAAA/nB,KAAA,EACTsH,KAAK0gB,OAAOC,gBAAgBG,aAAa,CAAED,WAAY3a,KAAKS,MAAOoa,SAAS,EAAOC,MAAO,CAAC9a,KAAKC,MAAM8a,QAAQ,OAAAR,EAAA/nB,KAAA,oBAE1GwN,KAAK2Z,UAAS,CAAAY,EAAA/nB,KAAA,gBAAA+nB,EAAA/nB,KAAA,GAASwN,KAAK+Q,SAAS+B,IAAI,CAAEjR,MAAAA,GAAS,CAAEA,MAAAA,IAAQ,QAAA0Y,EAAArP,GAAAqP,EAAAzoB,KAAAyoB,EAAA/nB,KAAA,wBAAA+nB,EAAA/nB,KAAA,GAASwN,KAAKgb,oBAAmB,QAAAT,EAAArP,GAAAqP,EAAAzoB,KAAA,QAAzG0P,EAAO+Y,EAAArP,GAAA,QAEP1J,GACAwH,EAAgBgK,qBAAqBhT,KAAK/B,MAC7C,yBAAAsc,EAAAtlB,OAAA,GAAAklB,UAAA,UACJ,SAAAlH,aAAAgI,GAAA,OAAA3B,EAAA/iB,MAAA,KAAAD,UAAA,KAAArJ,IAAA,oBAAAe,OAAAqrB,EAAAjjB,kBAAAxI,sBAAAqG,MAED,SAAAinB,YAAA,OAAAttB,sBAAAiB,MAAA,SAAAssB,WAAAC,GAAA,cAAAA,EAAAtmB,KAAAsmB,EAAA5oB,MAAA,cAAA4oB,EAAA5oB,KAAA,EACiB6oB,YAAYhsB,OAAO,CAC5BisB,KAAMxhB,KAAKwhB,KACXC,QAAS,CACLtb,MAAOD,KAAKC,MACZub,MAAOxb,KAAKC,MAAMub,MAClBC,MAAOzb,KAAKC,MAAMjM,MAEtB0nB,QAAS,sOAAFte,OAMe4C,KAAK2b,KAAI,2FAAAve,OAEb4C,KAAKS,MAAK,mUAAArD,OAU9B4C,KAAK/B,KAAKlE,OAAOO,YAAYtM,MAAK,gGAQlC,cAAAotB,EAAAnpB,OAAA,SAAAmpB,EAAAtpB,MAAA,wBAAAspB,EAAAnmB,OAAA,GAAAimB,UAAA,UACL,SAAAF,oBAAA,OAAA3B,EAAA9iB,MAAA,KAAAD,UAAA,MAAAgT,wBAAA,CAtFyB,CAAStM,EAAMmM,KAAKC,QAAQwS,cAyFpDC,EAAgB,SAAAC,GAAA3jB,UAAA0jB,iBAAAC,GAAA,IAAAC,EAAAvjB,aAAAqjB,kBAClB,SAAAA,mBAAqB,IAAAG,EAAAC,EAAAzlB,gBAAA,KAAAqlB,kBAAA,QAAAK,EAAA5lB,UAAA7C,OAAN4C,EAAI,IAAAgI,MAAA6d,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJ9lB,EAAI8lB,GAAA7lB,UAAA6lB,GAEuE,OADtFF,EAAAF,EAAApuB,KAAA4I,MAAAwlB,EAAA,OAAA3e,OAAS/G,KACJ+lB,gBAA0D,QAA3CJ,EAAGliB,KAAK0D,QAAQlQ,IAAI,+BAAuB,IAAA0uB,GAAK,QAALA,EAAxCA,EAA0CjF,WAAG,IAAAiF,OAAA,EAA7CA,EAA+CI,gBAAgBH,CAC1F,CAaC,OAbA1kB,aAAAskB,iBAAA,EAAA5uB,IAAA,UAAAK,IAED,SAAAA,MAAc,IAAA+uB,EACV,OAAkB,QAAlBA,EAAOviB,KAAK6N,cAAM,IAAA0U,OAAA,EAAXA,EAAaC,OACxB,GAAC,CAAArvB,IAAA,eAAAK,IAED,SAAAA,MACI,OAAO0S,KAAKoc,gBAAkBpc,KAAKoc,gBAAgBpc,KAAKwb,OAAS,MACrE,GAAC,CAAAvuB,IAAA,cAAAK,IAED,SAAAA,MACI,OAAK0S,KAAKC,MACHD,KAAKC,MAAMlG,OAAOoH,WAAWob,SAASvc,KAAKwc,cAAgBvL,OAAOC,MAAMuL,WAAWrL,SADlE,CAE5B,KAACyK,gBAAA,CAjBiB,CAAS7e,EAAM0f,aAoB/BC,EAAc,SAAAC,GAAAzkB,UAAAwkB,eAAAC,GAAA,IAOfC,EAPeC,EAAAtkB,aAAAmkB,gBAChB,SAAAA,iBAAqBnmB,gBAAA,KAAAmmB,gBAAA,QAAAI,EAAAzmB,UAAA7C,OAAN4C,EAAI,IAAAgI,MAAA0e,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJ3mB,EAAI2mB,GAAA1mB,UAAA0mB,GAAA,OAAAF,EAAAnvB,KAAA4I,MAAAumB,EAAA,OAAA1f,OACN/G,GACb,CAmBC,OAnBAkB,aAAAolB,eAAA,EAAA1vB,IAAA,UAAAK,IAED,SAAAA,MAAc,IAAA2vB,EACV,QAAmB,QAAZA,EAACnjB,KAAK6N,cAAM,IAAAsV,GAAXA,EAAaX,QACzB,GAAC,CAAArvB,IAAA,cAAAe,OAAA6uB,EAAAzmB,kBAAAxI,sBAAAqG,MAED,SAAAipB,YAAA,IAAAC,EAAA,YAAAvvB,sBAAAiB,MAAA,SAAAuuB,WAAAC,GAAA,cAAAA,EAAAvoB,KAAAuoB,EAAA7qB,MAAA,cAAA6qB,EAAAprB,OAAA,SACW,CACH,CACIwO,MAAO,iBACPoF,QAAS,SAAAA,QAAChE,GAAK,OAAKsb,EAAKld,MAAMqd,UAAU,EACzC3B,KAAM,cAEV,CACIlb,MAAO,kBACPoF,QAAS,SAAAA,QAAChE,GAAK,OAAKsb,EAAKld,MAAMsd,WAAW,EAC1C5B,KAAM,mBAEb,wBAAA0B,EAAApoB,OAAA,GAAAioB,UAAA,KACJ,SAAAxT,cAAA,OAAAmT,EAAAtmB,MAAA,KAAAD,UAAA,MAAAqmB,cAAA,CAtBe,CAAS3f,EAAMwgB,WAyB7BC,EAAe,SAAAC,GAAAvlB,UAAAslB,gBAAAC,GAAA,IAiChBC,EAZAC,EArBgBC,EAAAC,EAAAtlB,aAAAilB,iBAAA,SAAAA,kBAAA,OAAAjnB,gBAAA,KAAAinB,iBAAAK,EAAAvnB,MAAA,KAAAD,UAAA,CAqDhB,OArDgBiB,aAAAkmB,gBAAA,EAAAxwB,IAAA,iBAAAe,OAAA6vB,EAAAznB,kBAAAxI,sBAAAqG,MACjB,SAAA8pB,YAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAngB,EAAA,OAAAhR,sBAAAiB,MAAA,SAAAmwB,WAAAC,GAAA,cAAAA,EAAAnqB,KAAAmqB,EAAAzsB,MAAA,cAAAysB,EAAAzsB,KAAA,EAAAkF,KAAAO,gBAAAwlB,gBAAAhwB,WAAA,uBAAAE,KAAA,aAEgE,GADtDkxB,EAAII,EAAAntB,KACJgtB,EAAgC,QAAnBd,EAAGhe,KAAKC,MAAMxD,aAAK,IAAAuhB,GAAO,QAAPA,EAAhBA,EAAkBkB,aAAK,IAAAlB,OAAA,EAAvBA,EAAyBmB,cACvB,QAApBnf,KAAKC,MAAMrQ,MAAmBkvB,EAAa,CAAAG,EAAAzsB,KAAA,eAAAysB,EAAAhtB,OAAA,SAAS4sB,GAAI,OAEkD,OADxGE,EAAU/e,KAAKC,MAAMsI,MAAMC,QAAO,SAACvK,GAAI,MAAmB,WAAdA,EAAKrO,MAAiD,WAA5BoO,EAAkBC,EAAkB,IAC1GW,EAAQoB,KAAKC,MAAMsI,MAAMC,QAAO,SAACvK,GAAI,MAAmB,WAAdA,EAAKrO,MAAiD,UAA5BoO,EAAkBC,EAAiB,IAACghB,EAAAhtB,OAAA,SACvG,CACH,EAAG,CACCmtB,QAAyB,QAAlBnB,EAAY,QAAZC,EAAEa,EAAQ,UAAE,IAAAb,OAAA,EAAVA,EAAYnD,YAAI,IAAAkD,EAAAA,EAAI,KAC7BoB,UAAyB,QAAhBlB,EAAU,QAAVC,EAAExf,EAAM,UAAE,IAAAwf,OAAA,EAARA,EAAUrD,YAAI,IAAAoD,EAAAA,EAAI,MAEjC,EAAG,CACCiB,QAAyB,QAAlBf,EAAY,QAAZC,EAAES,EAAQ,UAAE,IAAAT,OAAA,EAAVA,EAAYvD,YAAI,IAAAsD,EAAAA,EAAI,KAC7BgB,UAAyB,QAAhBd,EAAU,QAAVC,EAAE5f,EAAM,UAAE,IAAA4f,OAAA,EAARA,EAAUzD,YAAI,IAAAwD,EAAAA,EAAI,MAEjC,EAAG,CACCa,QAAyB,QAAlBX,EAAY,QAAZC,EAAEK,EAAQ,UAAE,IAAAL,OAAA,EAAVA,EAAY3D,YAAI,IAAA0D,EAAAA,EAAI,KAC7BY,UAAyB,QAAhBV,EAAU,QAAVC,EAAEhgB,EAAM,UAAE,IAAAggB,OAAA,EAARA,EAAU7D,YAAI,IAAA4D,EAAAA,EAAI,QAEpC,wBAAAM,EAAAhqB,OAAA,GAAA8oB,UAAA,UACJ,SAAAuB,iBAAA,OAAAzB,EAAAtnB,MAAA,KAAAD,UAAA,KAAArJ,IAAA,WAAAe,OAAA4vB,EAAAxnB,kBAAAxI,sBAAAqG,MAED,SAAAsrB,YAAA,IAAAC,EAAAX,EAAAY,EAAAC,EAAAC,EAAAC,EAAA,OAAAhyB,sBAAAiB,MAAA,SAAAgxB,WAAAC,GAAA,cAAAA,EAAAhrB,KAAAgrB,EAAAttB,MAAA,OACgE,KAAtB,QAAnBgtB,EAAGxf,KAAKC,MAAMxD,aAAK,IAAA+iB,GAAO,QAAPA,EAAhBA,EAAkBN,aAAK,IAAAM,OAAA,EAAvBA,EAAyBL,eAErB,CAAAW,EAAAttB,KAAA,eAAAstB,EAAAttB,KAAA,EAASwN,KAAKsf,iBAAgB,OAAAQ,EAAA5U,GAAA4U,EAAAhuB,KAAAguB,EAAAttB,KAAA,gBAAgB,OAAhBstB,EAAAC,GAAGC,QAAQC,MAAKH,EAAAttB,KAAA,GAAmBwN,KAAKsf,iBAAgB,QAAAQ,EAAAI,GAAAJ,EAAAhuB,KAAAguB,EAAAK,GAAEH,QAAQC,MAAMG,UAAUpgB,KAAKC,MAAMlC,QAAQ,oBAAqB,eAAiB,CAAC,GAAE+hB,EAAA5U,GAAA4U,EAAAC,GAA7HM,YAAW1yB,KAAAmyB,EAAAC,GAAAD,EAAAI,GAAAJ,EAAAK,IAAA,QAA9EtB,EAAIiB,EAAA5U,GAAAuU,EAAG,EAAHC,EAEiBvyB,OAAO8d,QAAQ4T,GAAK,aAAAY,EAAAC,EAAAjsB,QAAA,CAAAqsB,EAAAttB,KAAA,SAAzB,IAAyBmtB,EAAA5U,eAAA2U,EAAAD,GAAA,IAAhC,KAAEG,EAAKD,EAAA,IACIP,QAAO,CAAAU,EAAAttB,KAAA,gBAAAstB,EAAAttB,KAAA,GAAS8tB,SAASV,EAAMR,SAAQ,QAAAU,EAAAS,GAAAT,EAAAhuB,KAAAguB,EAAAttB,KAAA,iBAAAstB,EAAAS,GAAG,KAAI,QAAvD,GAAbX,EAAMR,QAAOU,EAAAS,IACKX,EAAMP,UAAS,CAAAS,EAAAttB,KAAA,gBAAAstB,EAAAttB,KAAA,GAAS8tB,SAASV,EAAMP,WAAU,QAAAS,EAAAU,GAAAV,EAAAhuB,KAAAguB,EAAAttB,KAAA,iBAAAstB,EAAAU,GAAG,KAAI,QAA1EZ,EAAMP,UAASS,EAAAU,GAAA,QAAAf,IAAAK,EAAAttB,KAAG,GAAH,qBAAAstB,EAAA7tB,OAAA,SAEZ4sB,GAAI,yBAAAiB,EAAA7qB,OAAA,GAAAsqB,UAAA,UACd,SAAAkB,WAAA,OAAA7C,EAAArnB,MAAA,KAAAD,UAAA,KAAArJ,IAAA,eAAAe,OAAA2vB,EAAAvnB,kBAAAxI,sBAAAqG,MAED,SAAAysB,UAAAC,GAAA,IAAA9B,EAAAphB,EAAAmjB,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAApzB,sBAAAiB,MAAA,SAAAoyB,WAAAC,GAAA,cAAAA,EAAApsB,KAAAosB,EAAA1uB,MAAA,OACmF,GAD9DqsB,EAAI8B,EAAJ9B,KAAMphB,EAAMkjB,EAANljB,OACH3D,KAAKsF,SAAS9R,IAAI,0BAA2B,eAC/C,CAAF4zB,EAAA1uB,KAAA,eAAA0uB,EAAAjvB,OAAA,iBAcb,OAbG2uB,EAAU,GACVC,EAAYhC,EAAKphB,GACjBqjB,EAAc3zB,OAAOiD,OAAOywB,GAAWrY,QAAO,SAACvK,GAAI,OAAKA,CAAI,IAC5D8iB,EAAe5zB,OAAOiD,OAAOyuB,GAAMrW,QAAO,SAAC2Y,GAAG,OAAKA,IAAQN,CAAS,IACpEG,EAAgBD,EACjBK,SAAQ,SAACD,GAAG,OAAKh0B,OAAOiD,OAAO+wB,EAAI,IACnC3Y,QAAO,SAACvK,GAAI,OAAKA,CAAI,IACrBuK,QAAO,SAACvK,GAAI,OAAM6iB,EAAYpY,SAASzK,EAAK,IACjD6iB,EAAYvwB,SAAQ,SAAC0N,GAAS,IAAAojB,EACV,QAAZA,EAACpjB,EAAKlE,cAAM,IAAAsnB,GAAXA,EAAatmB,UAAU6lB,EAAQ1tB,KAAK,CAAEouB,IAAKrjB,EAAKjE,GAAI,mBAAmB,GAChF,IACAgnB,EAAczwB,SAAQ,SAAC0N,GAAS,IAAAsjB,EACb,QAAfA,EAAItjB,EAAKlE,cAAM,IAAAwnB,GAAXA,EAAaxmB,UAAU6lB,EAAQ1tB,KAAK,CAAEouB,IAAKrjB,EAAKjE,GAAI,mBAAmB,GAC/E,IAAGknB,EAAA1uB,KAAA,GACUwN,KAAKC,MAAMuhB,wBAAwB,OAAQZ,GAAQ,eAAAM,EAAAjvB,OAAA,SAAAivB,EAAApvB,MAAA,yBAAAovB,EAAAjsB,OAAA,GAAAyrB,UAAA,UACnE,SAAAe,aAAAC,GAAA,OAAA/D,EAAApnB,MAAA,KAAAD,UAAA,MAAAmnB,eAAA,CArDgB,CAASzgB,EAAM2kB,YAwD9BC,EAAmB9nB,KAAKsF,SAAS9R,IAAI+R,EAAW,cAEhDwiB,EAAa,CAAC7a,EAAwB4C,EAAuBwB,EAA0BoB,EAAsBmB,EAAqBiB,EAAsBY,GAC1JoS,GAAkBC,EAAW3uB,KAAK8J,EAAM8kB,OAAOC,YACnDF,EAAW3uB,KAAK8J,EAAM8kB,OAAOE,eAE7BpoB,EAAQqoB,oBAAoBziB,GAC5B5F,EAAQsoB,kBAAkBpd,GAC1BlL,EAAQuoB,iBAAiBN,GACzBjoB,EAAQwoB,kBAAkBvG,GAC1BjiB,EAAQyoB,gBAAgB1F,GACxB/iB,EAAQ0oB,iBAAiB7E,GACzB7jB,EAAQ2oB,cAActlB,GACtBrD,EAAQ4oB,0BAA0B,CAAC,YAAa,OArpCV,CA2DsD,SAE7E9d,kBAAiB+d,EAAAC,GAAA,OAAAC,mBAAApsB,MAAC,KAADD,UAAA,UAAAqsB,qBA0F/B,OA1F+BA,mBAAAvsB,kBAAAxI,sBAAAqG,MAAhC,SAAA2uB,UAAiC3kB,EAAMrO,GAAI,IAAAizB,EAAAC,EAAAC,EAAAC,EAAAC,EAAA3oB,EAAA4oB,EAAAC,EAAAvsB,EAAA4E,EAAA4nB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA72B,EAAAe,EAAAR,EAAAu2B,EAAAC,EAAAC,EAAAzjB,EAAA0jB,EAAAC,EAAA,OAAAv2B,sBAAAiB,MAAA,SAAAu1B,WAAAC,GAAA,cAAAA,EAAAvvB,KAAAuvB,EAAA7xB,MAAA,OAIZ,GAFvB6wB,EAAc,GACdC,EAAa,GACbC,EAAqB,GAEb,SAAR3zB,EAAe,CAAAy0B,EAAA7xB,KAAA,QACfywB,EAAQ3iB,OAAOhB,MAAM+F,OAAOpH,GAAMwC,MAClCnG,EAAcR,KAAKI,KAAKC,SAAS,kCAADiD,OAAmCa,EAAI,aAAYomB,EAAA7xB,KAAA,mBACpE,QAAR5C,EAAc,CAAAy0B,EAAA7xB,KAAA,SACrBywB,EAAQ3iB,OAAOhB,MAAM8F,UAAUnH,GAAMwC,MACrCnG,EAAcR,KAAKI,KAAKC,SAAS,qCAADiD,OAAsCa,EAAI,aAAYomB,EAAA7xB,KAAA,oBAEjFyL,GAASA,EAAKlE,OAAM,CAAAsqB,EAAA7xB,KAAA,gBAAA6xB,EAAApyB,OAAA,kBAEzBgxB,EAAQhlB,EAAKjK,KACbsG,EAAc2D,EAAKlE,OAAOkB,WAAagD,EAAKlE,OAAOO,YAAYtM,MAA4C,QAAvCw1B,EAAGvlB,EAAKlE,OAAOO,YAAYE,oBAAY,IAAAgpB,EAAAA,EAAIvlB,EAAKlE,OAAOO,YAAYtM,MACvIk1B,EAAWjlB,EAAKrO,KAChBgH,GAAoB,QAAX6sB,EAAAxlB,EAAKqmB,cAAM,IAAAb,OAAA,EAAXA,EAAa7sB,SAAU,IAChC4E,GAAmB,QAAXkoB,EAAAzlB,EAAKqmB,cAAM,IAAAZ,OAAA,EAAXA,EAAaloB,QAAS,IAC9B8nB,EAAa,GACbF,EAAgB,QAAdO,EAAG1lB,EAAKqmB,cAAM,IAAAX,GAAa,QAAbA,EAAXA,EAAaN,mBAAW,IAAAM,OAAA,EAAxBA,EAA0B7gB,MAAM,MACrCugB,EAAcD,GAAMA,EAAG3vB,OAAS2vB,EAAK,GACrCG,EAAqB,GAAGc,EAAAnZ,GAEhBgY,EAAQmB,EAAA7xB,KACP,WADO6xB,EAAAnZ,GACC,GAQR,UARQmZ,EAAAnZ,GAQD,GAUP,eAVOmZ,EAAAnZ,GAUK,GAIZ,SAJYmZ,EAAAnZ,GAIN,oBAnBP,IAFAiY,EAAW7iB,OAAOhB,MAAMilB,YAAYtmB,EAAKlE,OAAOyqB,YAChDlB,EAAWpwB,KAAKoN,OAAOhB,MAAMmlB,gBAAgBlmB,EAAcN,KAC3D2lB,EAAA,EAAAC,EAAyB12B,OAAO8d,QAAQhN,EAAKlE,OAAOupB,YAAWM,EAAAC,EAAApwB,OAAAmwB,IAAEE,EAAA/Y,eAAA8Y,EAAAD,GAAA,GAAvD32B,EAAG62B,EAAA,GAAE91B,EAAK81B,EAAA,IACZt2B,EAAOQ,GAASsS,OAAOhB,MAAMolB,iBAAiBz3B,GAAOqT,OAAOhB,MAAMolB,iBAAiBz3B,QAAOmF,IACpFkxB,EAAWpwB,KAAK1F,GAC7B,OAAA62B,EAAApyB,OAAA,oBAGDkxB,EAAW,GAAH/lB,OAAMa,EAAKqmB,OAAOtjB,MAAK,KAAA5D,OAAIa,EAAKqmB,OAAOK,QAC/CrB,EAAWpwB,KAAKoN,OAAOhB,MAAMslB,aAAa3mB,EAAKlE,OAAO4qB,SACtDrB,EAAWpwB,KAAK+K,EAAKqmB,OAAOjpB,UAC5BioB,EAAWpwB,KAAK+K,EAAKqmB,OAAOjoB,MAAM0nB,EAAA9M,2BACjBhZ,EAAKqmB,OAAO5O,WAAWmP,KAAG,IAA3C,IAAAd,EAAAvM,MAAAwM,EAAAD,EAAAtM,KAAAvlB,MAAS+xB,EAAID,EAAAh2B,MACTs1B,EAAWpwB,KAAK+wB,EAAKa,KACxB,OAAAl2B,GAAAm1B,EAAA9qB,EAAArK,EAAA,SAAAm1B,EAAArM,GAAA,CACqE,OAAlEzZ,EAAKqmB,OAAOS,YAAWxB,EAAqBtlB,EAAKqmB,OAAOS,WAAUV,EAAApyB,OAAA,oBAIH,OADnEkxB,EAAW7iB,OAAOhB,MAAM0lB,gBAAgB/mB,EAAKlE,OAAO8C,gBACpDymB,EAAWpwB,KAAKoN,OAAOhB,MAAMmlB,gBAAgBlmB,EAAcN,KAAQomB,EAAApyB,OAAA,oBAIA,OADnEkxB,EAAWllB,EAAKlE,OAAOkrB,aACvB3B,EAAWpwB,KAAKoN,OAAOhB,MAAMmlB,gBAAgBlmB,EAAcN,KAAQomB,EAAApyB,OAAA,wBAK3EqI,EAAa,CAAF+pB,EAAA7xB,KAAA,gBAAA6xB,EAAA7xB,KAAA,GAAsB0yB,WAAWC,WAAW7qB,EAAa,CAAEjG,OAAO,IAAO,QAAvEiG,EAAW+pB,EAAAvyB,KAAA,QAiCyF,OAhCjH0O,EAAU,IACV5J,GAAU4E,KACVgF,EAAU,CACN,CACIC,MAAO,8CACPzS,MAAO4I,GAEX,CACI6J,MAAO,6CACPzS,MAAOwN,KAIfyC,SAAY,QAAR4kB,EAAJ5kB,EAAMqmB,cAAM,IAAAzB,GAAZA,EAAcuC,OACd5kB,EAAQtN,KAAK,CACTuN,MAAO,6CACPzS,MAAOiQ,EAAKqmB,OAAOc,QAGvBnnB,SAAY,QAAR6kB,EAAJ7kB,EAAMqmB,cAAM,IAAAxB,GAAe,QAAfA,EAAZA,EAAcuC,qBAAa,IAAAvC,GAA3BA,EAA6BrvB,SACzBywB,EAAY,GAChBjmB,EAAKqmB,OAAOe,cAAc90B,SAAQ,SAAC+0B,GAC/BpB,GAAaoB,EAAKlpB,QAAU,IAAMmpB,kBAAkBD,EAAKE,YAAc,GAC3E,IACAhlB,EAAQtN,KAAK,CACTuN,MAAO,8CACPzS,MAAOk2B,KAITC,EAAoB,GACX,QAAfpB,EAAIM,SAAW,IAAAN,GAAXA,EAAatvB,QAAQ4vB,EAAY9yB,SAAQ,SAACk1B,GAAC,OAAKtB,EAAkBjxB,KAAK,CAAEuN,MAAOglB,EAAGrG,SAAS,GAAO,IACzF,QAAd4D,EAAIM,SAAU,IAAAN,GAAVA,EAAYvvB,QAAQ6vB,EAAW/yB,SAAQ,SAACgI,GAAC,IAAAmtB,EAAA,OAAKvB,EAAkBjxB,KAAK,CAAEuN,MAAe,QAAVilB,EAAEntB,aAAC,EAADA,EAAGkI,aAAK,IAAAilB,EAAAA,EAAIntB,EAAG8mB,WAAW,GAAO,IAAEgF,EAAApyB,OAAA,SAC9G,CAAEgxB,MAAAA,EAAO3oB,YAAAA,EAAa6oB,SAAAA,EAAU3iB,QAAAA,EAAS8iB,WAAYa,EAAmBwB,WAAYpC,IAAoB,yBAAAc,EAAApvB,OAAA,GAAA2tB,UAAA,MAClHrsB,MAAA,KAAAD,UAAA,CAED,SAASivB,kBAAkBC,GACvB,OAAQA,EAAWI,eACf,IAAK,OACD,MAAO,+BACX,IAAK,cACD,MAAO,gCACX,IAAK,OACD,MAAO,mCACX,IAAK,OACD,MAAO,8BACX,IAAK,QACD,MAAO,uCACX,IAAK,YACD,MAAO,8BACX,IAAK,WACD,MAAO,+BACX,IAAK,WACD,MAAO,oCACX,IAAK,SACD,MAAO,0CACX,IAAK,UACD,MAAO,+BACX,IAAK,UACD,MAAO,6BACX,IAAK,WACD,MAAO,6BACX,IAAK,UACD,MAAO,8BACX,IAAK,UACD,MAAO,+BACX,QACI,MAAO,GAEnB,CAEA,SAASvf,mBAAmBwf,GACxB,OAAmB,GAAfA,EAAyB,iFACL,GAAfA,EAAyB,gFACV,GAAfA,EAAyB,uFACV,IAAfA,EAA2B,iFACxB,gFAChB,CAEA,SAASpc,oBAAoBlB,GAEzB,IAD6BzO,KAAKsF,SAAS9R,IAAI+R,EAAW,wBAC/B,OAAOkJ,EAAM1H,KAAI,SAAC5C,GAAI,OAAK,IAAI+K,EAAgB,CAAE/K,KAAAA,EAAM0Q,eAAe,GAAO,IAKxG,IAJA,IAAMmX,EAAiB,GACjBC,EAAiBxd,EAAM9U,OACvBuyB,EAAwBD,EAAkBA,EAAiB,EAC7DE,EAA+B,KAC1BvyB,EAAI,EAAGA,EAAIqyB,EAAgBryB,IAAK,CACrC,IAAMwyB,EAAoBxyB,EAAIsyB,EACxB/nB,EAAOsK,EAAM7U,GACnB,GAAIwyB,EACA,GAAID,EAA8B,CAC9B,IAAMnd,EAAS,IAAIE,EAAgB,CAAE/K,KAAAA,EAAM0Q,eAAe,IAC1DmX,EAAe5yB,KAAK,IAAI8J,EAAMmM,KAAKC,QAAQC,YAAY4c,EAA8Bnd,IACrFmd,EAA+B,IACnC,MACIA,EAA+B,IAAIjd,EAAgB,CAAE/K,KAAAA,EAAM0Q,eAAe,SAG9EmX,EAAe5yB,KAAK,IAAI8V,EAAgB,CAAE/K,KAAAA,EAAM0Q,eAAe,IAEvE,CACA,OAAOmX,CACX,CA27BJ,GACJ,CC5pCA,SAAA/a,uBAAAob,EAAAzyB,GAAA,gBAAA0yB,wBAAAD,GAAA,GAAA9nB,MAAAgoB,QAAAF,GAAA,OAAAA,CAAA,CAAAC,CAAAD,IAAA,SAAAG,8BAAAH,EAAAzyB,GAAA,IAAA4W,EAAA,MAAA6b,EAAA,yBAAAj4B,QAAAi4B,EAAAj4B,OAAAE,WAAA+3B,EAAA,uBAAA7b,EAAA,KAAAic,EAAAC,EAAA/D,EAAAgE,EAAAC,EAAA,GAAAC,GAAA,EAAAC,GAAA,SAAAnE,GAAAnY,EAAAA,EAAA3c,KAAAw4B,IAAA3zB,KAAA,IAAAkB,EAAA,IAAAvG,OAAAmd,KAAAA,EAAA,OAAAqc,GAAA,cAAAA,GAAAJ,EAAA9D,EAAA90B,KAAA2c,IAAApY,QAAAw0B,EAAAxzB,KAAAqzB,EAAAv4B,OAAA04B,EAAAjzB,SAAAC,GAAAizB,GAAA,UAAA/3B,GAAAg4B,GAAA,EAAAJ,EAAA53B,CAAA,iBAAA+3B,GAAA,MAAArc,EAAA,SAAAmc,EAAAnc,EAAA,SAAAnd,OAAAs5B,KAAAA,GAAA,kBAAAG,EAAA,MAAAJ,CAAA,SAAAE,CAAA,EAAAJ,CAAAH,EAAAzyB,IAAA,SAAAmzB,oCAAA35B,EAAA45B,GAAA,IAAA55B,EAAA,2BAAAA,EAAA,OAAA65B,0BAAA75B,EAAA45B,GAAA,IAAArP,EAAAtqB,OAAAM,UAAAu5B,SAAAr5B,KAAAT,GAAA8H,MAAA,iBAAAyiB,GAAAvqB,EAAA6G,cAAA0jB,EAAAvqB,EAAA6G,YAAAC,MAAA,WAAAyjB,GAAA,QAAAA,EAAA,OAAApZ,MAAAC,KAAApR,GAAA,iBAAAuqB,GAAA,2CAAAwP,KAAAxP,GAAA,OAAAsP,0BAAA75B,EAAA45B,EAAA,CAAAD,CAAAV,EAAAzyB,IAAA,SAAAwzB,2BAAA,UAAA70B,UAAA,6IAAA60B,EAAA,UAAAH,0BAAAZ,EAAAgB,IAAA,MAAAA,GAAAA,EAAAhB,EAAA1yB,UAAA0zB,EAAAhB,EAAA1yB,QAAA,QAAAC,EAAA,EAAA0zB,EAAA,IAAA/oB,MAAA8oB,GAAAzzB,EAAAyzB,EAAAzzB,IAAA0zB,EAAA1zB,GAAAyyB,EAAAzyB,GAAA,OAAA0zB,CAAA,CACO,SAASC,oBA8EhB,SAASC,sBAAsBloB,GAC3B,QAAAkL,EAAA,EAAAC,EAA0Bpd,OAAO8d,QAAQ7L,GAASkL,EAAAC,EAAA9W,OAAA6W,IAAE,CAAhD,IAAAK,EAAAI,uBAAAR,EAAAD,GAAA,GAAOrd,EAAG0d,EAAA,GAAE3c,EAAK2c,EAAA,GACjB7Q,KAAKsF,SAASmoB,SAASloB,EAAWpS,EAAKe,EAC3C,CACJ,CAfIs5B,CAlEiB,CACbE,iBAAkB,CACdxzB,KAAM8F,KAAKI,KAAKC,SAAS,0DACzBlD,KAAM6C,KAAKI,KAAKC,SAAS,0DACzBstB,MAAO,QACPC,QAAQ,EACR93B,KAAMmJ,QACN4uB,SAAS,EACTC,SAAU,SAAAA,SAACC,GACPhqB,GAAGb,MAAMjJ,YAAYuL,MAAMP,UAAUG,WAAarB,GAAGb,MAAMjJ,YAAYuL,MAAMP,UAAUG,WAAWsJ,QAAO,SAAA9U,GAAC,MAAU,WAANA,CAAc,IACzHm0B,GAAMhqB,GAAGb,MAAMjJ,YAAYuL,MAAMP,UAAUG,WAAWhM,KAAK,UAC9D2K,GAAGb,MAAM8qB,SACb,GAEJC,iBAAkB,CACd/zB,KAAM8F,KAAKI,KAAKC,SAAS,0DACzBlD,KAAM6C,KAAKI,KAAKC,SAAS,0DACzBstB,MAAO,QACPC,QAAQ,EACR93B,KAAMmJ,QACN4uB,SAAS,EACTC,SAAU,SAAAA,SAACC,GACPhqB,GAAGb,MAAMjJ,YAAYuL,MAAMH,gBAAkBtB,GAAGb,MAAMjJ,YAAYuL,MAAMH,gBAAgBqJ,QAAO,SAAA9U,GAAC,MAAU,UAANA,CAAa,IAC9Gm0B,GAAMhqB,GAAGb,MAAMjJ,YAAYuL,MAAMH,gBAAgBjM,KAAK,SACzD2K,GAAGb,MAAM8qB,SACb,GAEJE,qBAAsB,CAClBh0B,KAAM8F,KAAKI,KAAKC,SAAS,8DACzBlD,KAAM6C,KAAKI,KAAKC,SAAS,8DACzBstB,MAAO,QACPC,QAAQ,EACR93B,KAAMmJ,QACN4uB,SAAS,EACTC,SAAU,SAAAA,WAAA,OAAM/pB,GAAGb,MAAM8qB,SAAS,GAEtCG,WAAY,CACRj0B,KAAM8F,KAAKI,KAAKC,SAAS,oDACzBlD,KAAM6C,KAAKI,KAAKC,SAAS,oDACzBstB,MAAO,QACPC,QAAQ,EACR93B,KAAMmJ,QACN4uB,SAAS,EACTO,gBAAgB,EAChBN,SAAU,SAAAA,WAAA,OAAM/pB,GAAGb,MAAM8qB,SAAS,GAEtCK,YAAa,CACTn0B,KAAM8F,KAAKI,KAAKC,SAAS,qDACzBlD,KAAM6C,KAAKI,KAAKC,SAAS,qDACzBstB,MAAO,QACPC,QAAQ,EACR93B,KAAMmJ,QACN4uB,SAAS,EACTC,SAAU,SAAAA,WAAA,OAAM/pB,GAAGb,MAAM8qB,SAAS,GAEtC3f,mBAAoB,CAChBnU,KAAM8F,KAAKI,KAAKC,SAAS,4DACzBlD,KAAM6C,KAAKI,KAAKC,SAAS,4DACzBstB,MAAO,QACPC,QAAQ,EACR93B,KAAMmJ,QACN4uB,SAAS,EACTC,SAAU,SAAAA,WAAA,OAAM/pB,GAAGb,MAAM8qB,SAAS,IAK9C,CCnEO,IAAMzoB,EAAY,0BAEzB3F,MAAMC,GAAG,SAAS,WACd0tB,mBACA5tB,YACJ","sources":["webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///./scripts/config.js","webpack:///./scripts/settings.js","webpack:///./scripts/main.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","import { MODULE_ID } from \"./main.js\";\r\n\r\nconst ECHItems = {};\r\n\r\nexport function initConfig() {\r\n    Hooks.on(\"argonInit\", (CoreHUD) => {\r\n        if (game.system.id !== \"dnd5e\") return;\r\n        registerItems();\r\n        const ARGON = CoreHUD.ARGON;\r\n\r\n        class DND5eTooltip extends ARGON.CORE.Tooltip{\r\n            get classes() {\r\n                const original = super.classes;\r\n                return original.concat([\"dnd5e2\"]);\r\n            }\r\n        }\r\n\r\n        const isMIDI = game.modules.get(\"midi-qol\")?.active;\r\n        const getMidiFlag = (actionType) => {\r\n            if (!isMIDI || !ui.ARGON._actor) return null;\r\n            const flag = ui.ARGON._actor.getFlag(\"midi-qol\", \"actions\") ?? {};\r\n            const value = flag[actionType] ?? false;\r\n            const midiAction = value ? 0 : 1;\r\n            return midiAction;\r\n        };\r\n\r\n        const getActivationType = (item) => {\r\n            if (!item?.system?.activities) {\r\n                return;\r\n            }\r\n            return Array.from(item.system.activities)[0]?.activation?.type;\r\n        };\r\n\r\n        const getActionType = (item) => {\r\n            if (!item?.system?.activities) {\r\n                return;\r\n            }\r\n            return Array.from(item.system.activities)[0]?.actionType;\r\n        };\r\n\r\n        const actionTypes = {\r\n            action: [\"action\"],\r\n            bonus: [\"bonus\"],\r\n            reaction: [\"reaction\", \"reactiondamage\", \"reactionmanual\"],\r\n            free: [\"special\"],\r\n        };\r\n\r\n        const itemTypes = {\r\n            spell: [\"spell\"],\r\n            feat: [\"feat\"],\r\n            consumable: [\"consumable\", \"equipment\", \"loot\"],\r\n        };\r\n\r\n        const mainBarFeatures = [];\r\n\r\n        if (game.settings.get(MODULE_ID, \"showWeaponsItems\")) itemTypes.consumable.push(\"weapon\");\r\n        if (game.settings.get(MODULE_ID, \"showClassActions\")) mainBarFeatures.push(\"class\");\r\n\r\n        CoreHUD.DND5E = {\r\n            actionTypes,\r\n            itemTypes,\r\n            mainBarFeatures,\r\n            ECHItems,\r\n        };\r\n\r\n        Hooks.callAll(\"enhanced-combat-hud.dnd5e.initConfig\", { actionTypes, itemTypes, ECHItems });\r\n\r\n        async function getTooltipDetails(item, type) {\r\n            let title, description, itemType, subtitle, target, range, dt;\r\n            let damageTypes = [];\r\n            let properties = [];\r\n            let materialComponents = \"\";\r\n\r\n            if (type == \"skill\") {\r\n                title = CONFIG.DND5E.skills[item].label;\r\n                description = game.i18n.localize(`enhancedcombathud-dnd5e.skills.${item}.tooltip`);\r\n            } else if (type == \"save\") {\r\n                title = CONFIG.DND5E.abilities[item].label;\r\n                description = game.i18n.localize(`enhancedcombathud-dnd5e.abilities.${item}.tooltip`);\r\n            } else {\r\n                if (!item || !item.system) return;\r\n\r\n                title = item.name;\r\n                description = item.system.identified ? item.system.description.value : item.system.description.unidentified ?? item.system.description.value;\r\n                itemType = item.type;\r\n                target = item.labels?.target || \"-\";\r\n                range = item.labels?.range || \"-\";\r\n                properties = [];\r\n                dt = item.labels?.damageTypes?.split(\", \");\r\n                damageTypes = dt && dt.length ? dt : [];\r\n                materialComponents = \"\";\r\n\r\n                switch (itemType) {\r\n                    case \"weapon\":\r\n                        subtitle = CONFIG.DND5E.weaponTypes[item.system.weaponType];\r\n                        properties.push(CONFIG.DND5E.itemActionTypes[getActionType(item)]);\r\n                        for (let [key, value] of Object.entries(item.system.properties)) {\r\n                            let prop = value && CONFIG.DND5E.weaponProperties[key] ? CONFIG.DND5E.weaponProperties[key] : undefined;\r\n                            if (prop) properties.push(prop);\r\n                        }\r\n                        break;\r\n                    case \"spell\":\r\n                        subtitle = `${item.labels.level} ${item.labels.school}`;\r\n                        properties.push(CONFIG.DND5E.spellSchools[item.system.school]);\r\n                        properties.push(item.labels.duration);\r\n                        properties.push(item.labels.save);\r\n                        for (let comp of item.labels.components.all) {\r\n                            properties.push(comp.abbr);\r\n                        }\r\n                        if (item.labels.materials) materialComponents = item.labels.materials;\r\n                        break;\r\n                    case \"consumable\":\r\n                        subtitle = CONFIG.DND5E.consumableTypes[item.system.consumableType];\r\n                        properties.push(CONFIG.DND5E.itemActionTypes[getActionType(item)]);\r\n                        break;\r\n                    case \"feat\":\r\n                        subtitle = item.system.requirements;\r\n                        properties.push(CONFIG.DND5E.itemActionTypes[getActionType(item)]);\r\n                        break;\r\n                }\r\n            }\r\n\r\n            if (description) description = await TextEditor.enrichHTML(description, { async: true });\r\n            let details = [];\r\n            if (target || range) {\r\n                details = [\r\n                    {\r\n                        label: \"enhancedcombathud-dnd5e.tooltip.target.name\",\r\n                        value: target,\r\n                    },\r\n                    {\r\n                        label: \"enhancedcombathud-dnd5e.tooltip.range.name\",\r\n                        value: range,\r\n                    },\r\n                ];\r\n            }\r\n            if (item?.labels?.toHit) {\r\n                details.push({\r\n                    label: \"enhancedcombathud-dnd5e.tooltip.toHit.name\",\r\n                    value: item.labels.toHit,\r\n                });\r\n            }\r\n            if (item?.labels?.derivedDamage?.length) {\r\n                let dmgString = \"\";\r\n                item.labels.derivedDamage.forEach((dDmg) => {\r\n                    dmgString += dDmg.formula + \" \" + getDamageTypeIcon(dDmg.damageType) + \" \";\r\n                });\r\n                details.push({\r\n                    label: \"enhancedcombathud-dnd5e.tooltip.damage.name\",\r\n                    value: dmgString,\r\n                });\r\n            }\r\n\r\n            const tooltipProperties = [];\r\n            if (damageTypes?.length) damageTypes.forEach((d) => tooltipProperties.push({ label: d, primary: true }));\r\n            if (properties?.length) properties.forEach((p) => tooltipProperties.push({ label: p?.label ?? p, secondary: true }));\r\n            return { title, description, subtitle, details, properties: tooltipProperties, footerText: materialComponents };\r\n        }\r\n\r\n        function getDamageTypeIcon(damageType) {\r\n            switch (damageType.toLowerCase()) {\r\n                case \"acid\":\r\n                    return '<i class=\"fas fa-flask\"></i>';\r\n                case \"bludgeoning\":\r\n                    return '<i class=\"fas fa-hammer\"></i>';\r\n                case \"cold\":\r\n                    return '<i class=\"fas fa-snowflake\"></i>';\r\n                case \"fire\":\r\n                    return '<i class=\"fas fa-fire\"></i>';\r\n                case \"force\":\r\n                    return '<i class=\"fas fa-hand-sparkles\"></i>';\r\n                case \"lightning\":\r\n                    return '<i class=\"fas fa-bolt\"></i>';\r\n                case \"necrotic\":\r\n                    return '<i class=\"fas fa-skull\"></i>';\r\n                case \"piercing\":\r\n                    return '<i class=\"fas fa-crosshairs\"></i>';\r\n                case \"poison\":\r\n                    return '<i class=\"fas fa-skull-crossbones\"></i>';\r\n                case \"psychic\":\r\n                    return '<i class=\"fas fa-brain\"></i>';\r\n                case \"radiant\":\r\n                    return '<i class=\"fas fa-sun\"></i>';\r\n                case \"slashing\":\r\n                    return '<i class=\"fas fa-cut\"></i>';\r\n                case \"thunder\":\r\n                    return '<i class=\"fas fa-bell\"></i>';\r\n                case \"healing\":\r\n                    return '<i class=\"fas fa-heart\"></i>';\r\n                default:\r\n                    return \"\";\r\n            }\r\n        }\r\n\r\n        function getProficiencyIcon(proficiency) {\r\n            if (proficiency == 0) return '<i style=\"margin-right: 1ch; pointer-events: none\" class=\"far fa-circle\"> </i>';\r\n            else if (proficiency == 1) return '<i style=\"margin-right: 1ch; pointer-events: none\" class=\"fas fa-check\"> </i>';\r\n            else if (proficiency == 2) return '<i style=\"margin-right: 1ch; pointer-events: none\" class=\"fas fa-check-double\"> </i>';\r\n            else if (proficiency == 0.5) return '<i style=\"margin-right: 1ch; pointer-events: none\" class=\"fas fa-adjust\"> </i>';\r\n            else return '<i style=\"margin-right: 1ch; pointer-events: none\" class=\"far fa-circle\"> </i>';\r\n        }\r\n\r\n        function condenseItemButtons(items) {\r\n            const condenseClassActions = game.settings.get(MODULE_ID, \"condenseClassActions\");\r\n            if (!condenseClassActions) return items.map((item) => new DND5eItemButton({ item, inActionPanel: true }));\r\n            const condensedItems = [];\r\n            const barItemsLength = items.length;\r\n            const barItemsMultipleOfTwo = barItemsLength - (barItemsLength % 2);\r\n            let currentSplitButtonItemButton = null;\r\n            for (let i = 0; i < barItemsLength; i++) {\r\n                const isCondensedButton = i < barItemsMultipleOfTwo;\r\n                const item = items[i];\r\n                if (isCondensedButton) {\r\n                    if (currentSplitButtonItemButton) {\r\n                        const button = new DND5eItemButton({ item, inActionPanel: false });\r\n                        condensedItems.push(new ARGON.MAIN.BUTTONS.SplitButton(currentSplitButtonItemButton, button));\r\n                        currentSplitButtonItemButton = null;\r\n                    } else {\r\n                        currentSplitButtonItemButton = new DND5eItemButton({ item, inActionPanel: false });\r\n                    }\r\n                } else {\r\n                    condensedItems.push(new DND5eItemButton({ item, inActionPanel: true }));\r\n                }\r\n            }\r\n            return condensedItems;\r\n        }\r\n\r\n        class DND5ePortraitPanel extends ARGON.PORTRAIT.PortraitPanel {\r\n            constructor(...args) {\r\n                super(...args);\r\n            }\r\n\r\n            get description() {\r\n                const { type, system } = this.actor;\r\n                const actor = this.actor;\r\n                const isNPC = type === \"npc\";\r\n                const isPC = type === \"character\";\r\n                if (isNPC) {\r\n                    const creatureType = game.i18n.localize(CONFIG.DND5E.creatureTypes[actor.system.details.type.value]?.label ?? actor.system.details.type.custom);\r\n                    const cr = system.details.cr >= 1 || system.details.cr <= 0 ? system.details.cr : `1/${1 / system.details.cr}`;\r\n                    return `CR ${cr} ${creatureType}`;\r\n                } else if (isPC) {\r\n                    const classes = Object.values(actor.classes)\r\n                        .map((c) => c.name)\r\n                        .join(\" / \");\r\n                    return `Level ${system.details.level} ${classes} (${system.details.race})`;\r\n                } else {\r\n                    return \"\";\r\n                }\r\n            }\r\n\r\n            get isDead() {\r\n                return this.isDying && this.actor.type !== \"character\";\r\n            }\r\n\r\n            get isDying() {\r\n                return this.actor.system.attributes.hp.value <= 0;\r\n            }\r\n\r\n            get successes() {\r\n                return this.actor.system.attributes?.death?.success ?? 0;\r\n            }\r\n\r\n            get failures() {\r\n                return this.actor.system.attributes?.death?.failure ?? 0;\r\n            }\r\n\r\n            get configurationTemplate() {\r\n                return \"modules/enhancedcombathud-dnd5e/templates/argon-actor-config.hbs\";\r\n            }\r\n\r\n            async _onDeathSave(event) {\r\n                this.actor.rollDeathSave({});\r\n            }\r\n\r\n            async getStatBlocks() {\r\n                const HPText = game.i18n\r\n                    .localize(\"DND5E.HitPoints\")\r\n                    .split(\" \")\r\n                    .map((word) => word.charAt(0).toUpperCase())\r\n                    .join(\"\");\r\n                const ACText = game.i18n\r\n                    .localize(\"DND5E.ArmorClass\")\r\n                    .split(\" \")\r\n                    .map((word) => word.charAt(0).toUpperCase())\r\n                    .join(\"\");\r\n                const SpellDC = game.i18n.localize(\"DND5E.SaveDC\").replace(\"{ability}\", \"\").replace(\"{dc}\", \"\").trim();\r\n\r\n                const hpColor = this.actor.system.attributes.hp.temp ? \"#6698f3\" : \"rgb(0 255 170)\";\r\n                const tempMax = this.actor.system.attributes.hp.tempmax;\r\n                const hpMaxColor = tempMax ? (tempMax > 0 ? \"rgb(222 91 255)\" : \"#ffb000\") : \"rgb(255 255 255)\";\r\n\r\n                return [\r\n                    [\r\n                        {\r\n                            text: `${this.actor.system.attributes.hp.value + (this.actor.system.attributes.hp.temp ?? 0)}`,\r\n                            color: hpColor,\r\n                        },\r\n                        {\r\n                            text: `/`,\r\n                        },\r\n                        {\r\n                            text: `${this.actor.system.attributes.hp.max + (this.actor.system.attributes.hp.tempmax ?? 0)}`,\r\n                            color: hpMaxColor,\r\n                        },\r\n                        {\r\n                            text: HPText,\r\n                        },\r\n                    ],\r\n                    [\r\n                        {\r\n                            text: ACText,\r\n                        },\r\n                        {\r\n                            text: this.actor.system.attributes.ac.value,\r\n                            color: \"var(--ech-movement-baseMovement-background)\",\r\n                        },\r\n                    ],\r\n                    [\r\n                        {\r\n                            text: SpellDC,\r\n                        },\r\n                        {\r\n                            text: this.actor.system.attributes.spelldc,\r\n                            color: \"var(--ech-movement-baseMovement-background)\",\r\n                        },\r\n                    ],\r\n                ];\r\n            }\r\n        }\r\n\r\n        class DND5eDrawerButton extends ARGON.DRAWER.DrawerButton {\r\n            constructor(buttons, item, type) {\r\n                super(buttons);\r\n                this.item = item;\r\n                this.type = type;\r\n            }\r\n\r\n            get hasTooltip() {\r\n                return true;\r\n            }\r\n\r\n            get tooltipOrientation() {\r\n                return TooltipManager.TOOLTIP_DIRECTIONS.RIGHT;\r\n            }\r\n\r\n            async getTooltipData() {\r\n                const tooltipData = await getTooltipDetails(this.item, this.type);\r\n                return tooltipData;\r\n            }\r\n        }\r\n\r\n        class DND5eDrawerPanel extends ARGON.DRAWER.DrawerPanel {\r\n            constructor(...args) {\r\n                super(...args);\r\n            }\r\n\r\n            get categories() {\r\n                const abilities = this.actor.system.abilities;\r\n                const skills = this.actor.system.skills;\r\n                const tools = this.actor.itemTypes.tool;\r\n\r\n                const addSign = (value) => {\r\n                    if (value >= 0) return `+${value}`;\r\n                    return value;\r\n                };\r\n\r\n                const abilitiesButtons = Object.keys(abilities).map((ability) => {\r\n                    const abilityData = abilities[ability];\r\n                    return new DND5eDrawerButton(\r\n                        [\r\n                            {\r\n                                label: CONFIG.DND5E.abilities[ability].label,\r\n                                onClick: (event) => this.actor.rollAbility(ability, { event }),\r\n                            },\r\n                            {\r\n                                label: addSign(abilityData.mod + (abilityData.checkBonus || 0)),\r\n                                onClick: (event) => this.actor.rollAbilityTest(ability, { event }),\r\n                            },\r\n                            {\r\n                                label: addSign(abilityData.save),\r\n                                onClick: (event) => this.actor.rollAbilitySave(ability, { event }),\r\n                            },\r\n                        ],\r\n                        ability,\r\n                        \"save\",\r\n                    );\r\n                });\r\n\r\n                const skillsButtons = Object.keys(skills).map((skill) => {\r\n                    const skillData = skills[skill];\r\n                    return new DND5eDrawerButton(\r\n                        [\r\n                            {\r\n                                label: getProficiencyIcon(skillData.proficient) + CONFIG.DND5E.skills[skill].label,\r\n                                onClick: (event) => this.actor.rollSkill(skill, { event }),\r\n                            },\r\n                            {\r\n                                label: `${addSign(skillData.total)}<span style=\"margin: 0 1rem; filter: brightness(0.8)\">(${skillData.passive})</span>`,\r\n                                style: \"display: flex; justify-content: flex-end;\",\r\n                            },\r\n                        ],\r\n                        skill,\r\n                        \"skill\",\r\n                    );\r\n                });\r\n\r\n                const toolButtons = tools.map((tool) => {\r\n                    return new DND5eDrawerButton(\r\n                        [\r\n                            {\r\n                                label: getProficiencyIcon(tool.system.proficient) + tool.name,\r\n                                onClick: (event) => tool.rollToolCheck({ event }),\r\n                            },\r\n                            {\r\n                                label: addSign(abilities[tool.abilityMod].mod + tool.system.proficiencyMultiplier * this.actor.system.attributes.prof),\r\n                            },\r\n                        ],\r\n                        tool,\r\n                    );\r\n                });\r\n\r\n                return [\r\n                    {\r\n                        gridCols: \"5fr 2fr 2fr\",\r\n                        captions: [\r\n                            {\r\n                                label: \"Abilities\",\r\n                                align: \"left\",\r\n                            },\r\n                            {\r\n                                label: \"Check\",\r\n                                align: \"center\",\r\n                            },\r\n                            {\r\n                                label: \"Save\",\r\n                                align: \"center\",\r\n                            },\r\n                        ],\r\n                        align: [\"left\", \"center\", \"center\"],\r\n                        buttons: abilitiesButtons,\r\n                    },\r\n                    {\r\n                        gridCols: \"7fr 2fr\",\r\n                        captions: [\r\n                            {\r\n                                label: \"Skills\",\r\n                            },\r\n                            {\r\n                                label: \"\",\r\n                            },\r\n                        ],\r\n                        buttons: skillsButtons,\r\n                    },\r\n                    {\r\n                        gridCols: \"7fr 2fr\",\r\n                        captions: [\r\n                            {\r\n                                label: \"Tools\",\r\n                            },\r\n                            {\r\n                                label: \"\",\r\n                            },\r\n                        ],\r\n                        buttons: toolButtons,\r\n                    },\r\n                ];\r\n            }\r\n\r\n            get title() {\r\n                return `${game.i18n.localize(\"enhancedcombathud-dnd5e.hud.saves.name\")} / ${game.i18n.localize(\"enhancedcombathud-dnd5e.hud.skills.name\")} / ${game.i18n.localize(\"enhancedcombathud-dnd5e.hud.tools.name\")}`;\r\n            }\r\n        }\r\n\r\n        class DND5eActionActionPanel extends ARGON.MAIN.ActionPanel {\r\n            constructor(...args) {\r\n                super(...args);\r\n            }\r\n\r\n            get label() {\r\n                return \"DND5E.Action\";\r\n            }\r\n\r\n            get maxActions() {\r\n                return this.actor?.inCombat ? 1 : null;\r\n            }\r\n\r\n            get currentActions() {\r\n                return getMidiFlag(\"action\") ?? (this.isActionUsed ? 0 : 1);\r\n            }\r\n\r\n            _onNewRound(combat) {\r\n                this.isActionUsed = false;\r\n                this.updateActionUse();\r\n            }\r\n\r\n            async _getButtons() {\r\n                const spellItems = this.actor.items.filter((item) => itemTypes.spell.includes(item.type) && actionTypes.action.includes(getActivationType(item)) && !CoreHUD.DND5E.mainBarFeatures.includes(item.system.type?.value));\r\n                const featItems = this.actor.items.filter((item) => itemTypes.feat.includes(item.type) && actionTypes.action.includes(getActivationType(item)) && !CoreHUD.DND5E.mainBarFeatures.includes(item.system.type?.value));\r\n                const consumableItems = this.actor.items.filter((item) => itemTypes.consumable.includes(item.type) && actionTypes.action.includes(getActivationType(item)) && !CoreHUD.DND5E.mainBarFeatures.includes(item.system.type?.value));\r\n\r\n                const spellButton = !spellItems.length ? [] : [new DND5eButtonPanelButton({ type: \"spell\", items: spellItems, color: 0 })].filter((button) => button.hasContents);\r\n\r\n                const specialActions = Object.values(ECHItems);\r\n\r\n                const showSpecialActions = game.settings.get(MODULE_ID, \"showSpecialActions\");\r\n                const buttons = [];\r\n                if (showSpecialActions) {\r\n                    buttons.push(...[new DND5eItemButton({ item: null, isWeaponSet: true, isPrimary: true }), new ARGON.MAIN.BUTTONS.SplitButton(new DND5eSpecialActionButton(specialActions[0]), new DND5eSpecialActionButton(specialActions[1])), ...spellButton, new DND5eButtonPanelButton({ type: \"feat\", items: featItems, color: 0 }), new ARGON.MAIN.BUTTONS.SplitButton(new DND5eSpecialActionButton(specialActions[2]), new DND5eSpecialActionButton(specialActions[3])), new ARGON.MAIN.BUTTONS.SplitButton(new DND5eSpecialActionButton(specialActions[4]), new DND5eSpecialActionButton(specialActions[5])), new DND5eButtonPanelButton({ type: \"consumable\", items: consumableItems, color: 0 })]);\r\n                } else {\r\n                    buttons.push(...[new DND5eItemButton({ item: null, isWeaponSet: true, isPrimary: true }), ...spellButton, new DND5eButtonPanelButton({ type: \"feat\", items: featItems, color: 0 }), new DND5eButtonPanelButton({ type: \"consumable\", items: consumableItems, color: 0 })]);\r\n                }\r\n\r\n                const barItems = this.actor.items.filter((item) => CoreHUD.DND5E.mainBarFeatures.includes(item.system.type?.value) && actionTypes.action.includes(getActivationType(item)));\r\n                buttons.push(...condenseItemButtons(barItems));\r\n\r\n                return buttons.filter((button) => button.hasContents || button.items == undefined || button.items.length);\r\n            }\r\n        }\r\n\r\n        class DND5eBonusActionPanel extends ARGON.MAIN.ActionPanel {\r\n            constructor(...args) {\r\n                super(...args);\r\n            }\r\n\r\n            get label() {\r\n                return \"DND5E.BonusAction\";\r\n            }\r\n\r\n            get maxActions() {\r\n                return this.actor?.inCombat ? 1 : null;\r\n            }\r\n\r\n            get currentActions() {\r\n                return getMidiFlag(\"bonus\") ?? (this.isActionUsed ? 0 : 1);\r\n            }\r\n\r\n            _onNewRound(combat) {\r\n                this.isActionUsed = false;\r\n                this.updateActionUse();\r\n            }\r\n\r\n            async _getButtons() {\r\n                const buttons = [new DND5eItemButton({ item: null, isWeaponSet: true, isPrimary: false })];\r\n                for (const [type, types] of Object.entries(itemTypes)) {\r\n                    const items = this.actor.items.filter((item) => types.includes(item.type) && actionTypes.bonus.includes(getActivationType(item)) && !CoreHUD.DND5E.mainBarFeatures.includes(item.system.type?.value));\r\n                    if (!items.length) continue;\r\n                    const button = new DND5eButtonPanelButton({ type, items, color: 1 });\r\n                    if (button.hasContents) buttons.push(button);\r\n                }\r\n\r\n                const barItems = this.actor.items.filter((item) => CoreHUD.DND5E.mainBarFeatures.includes(item.system.type?.value) && actionTypes.bonus.includes(getActivationType(item)));\r\n                buttons.push(...condenseItemButtons(barItems));\r\n\r\n                return buttons;\r\n            }\r\n        }\r\n\r\n        class DND5eReactionActionPanel extends ARGON.MAIN.ActionPanel {\r\n            constructor(...args) {\r\n                super(...args);\r\n            }\r\n\r\n            get label() {\r\n                return \"DND5E.Reaction\";\r\n            }\r\n\r\n            get maxActions() {\r\n                return this.actor?.inCombat ? 1 : null;\r\n            }\r\n\r\n            get currentActions() {\r\n                return getMidiFlag(\"reaction\") ?? (this.isActionUsed ? 0 : 1);\r\n            }\r\n\r\n            _onNewRound(combat) {\r\n                this.isActionUsed = false;\r\n                this.updateActionUse();\r\n            }\r\n\r\n            async _getButtons() {\r\n                const buttons = [new DND5eItemButton({ item: null, isWeaponSet: true, isPrimary: true })];\r\n                //buttons.push(new DND5eEquipmentButton({slot: 1}));\r\n                for (const [type, types] of Object.entries(itemTypes)) {\r\n                    const items = this.actor.items.filter((item) => types.includes(item.type) && actionTypes.reaction.includes(getActivationType(item)) && !CoreHUD.DND5E.mainBarFeatures.includes(item.system.type?.value));\r\n                    if (!items.length) continue;\r\n                    const button = new DND5eButtonPanelButton({ type, items, color: 3 });\r\n                    if (button.hasContents) buttons.push(button);\r\n                }\r\n\r\n                const barItems = this.actor.items.filter((item) => CoreHUD.DND5E.mainBarFeatures.includes(item.system.type?.value) && actionTypes.reaction.includes(getActivationType(item)));\r\n                buttons.push(...condenseItemButtons(barItems));\r\n\r\n                return buttons;\r\n            }\r\n        }\r\n\r\n        class DND5eFreeActionPanel extends ARGON.MAIN.ActionPanel {\r\n            constructor(...args) {\r\n                super(...args);\r\n            }\r\n\r\n            get label() {\r\n                return \"DND5E.Special\";\r\n            }\r\n\r\n            get maxActions() {\r\n                return this.actor?.inCombat ? 1 : null;\r\n            }\r\n\r\n            get currentActions() {\r\n                return this.isActionUsed ? 0 : 1;\r\n            }\r\n\r\n            _onNewRound(combat) {\r\n                this.isActionUsed = false;\r\n                this.updateActionUse();\r\n            }\r\n\r\n            async _getButtons() {\r\n                const buttons = [];\r\n\r\n                for (const [type, types] of Object.entries(itemTypes)) {\r\n                    const items = this.actor.items.filter((item) => types.includes(item.type) && actionTypes.free.includes(getActivationType(item)) && !CoreHUD.DND5E.mainBarFeatures.includes(item.system.type?.value));\r\n                    if (!items.length) continue;\r\n                    const button = new DND5eButtonPanelButton({ type, items, color: 2 });\r\n                    if (button.hasContents) buttons.push(button);\r\n                }\r\n\r\n                const barItems = this.actor.items.filter((item) => CoreHUD.DND5E.mainBarFeatures.includes(item.system.type?.value) && actionTypes.free.includes(getActivationType(item)));\r\n                buttons.push(...condenseItemButtons(barItems));\r\n\r\n                return buttons;\r\n            }\r\n        }\r\n\r\n        class DND5eLegActionPanel extends ARGON.MAIN.ActionPanel {\r\n            constructor(...args) {\r\n                super(...args);\r\n            }\r\n\r\n            get label() {\r\n                return \"DND5E.LegendaryActionLabel\";\r\n            }\r\n\r\n            get maxActions() {\r\n                return this.actor?.inCombat ? this.actor.system.resources?.legact?.max ?? null : null;\r\n            }\r\n\r\n            get currentActions() {\r\n                return this.actor.system.resources?.legact?.value ?? null;\r\n            }\r\n\r\n            async _getButtons() {\r\n                const buttons = [];\r\n                const legendary = this.actor.items.filter((item) => getActivationType(item) === \"legendary\");\r\n                legendary.forEach((item) => {\r\n                    buttons.push(new DND5eItemButton({ item, inActionPanel: true }));\r\n                });\r\n                return buttons;\r\n            }\r\n        }\r\n\r\n        class DND5eLairActionPanel extends ARGON.MAIN.ActionPanel {\r\n            constructor(...args) {\r\n                super(...args);\r\n            }\r\n\r\n            get label() {\r\n                return \"DND5E.LairActionLabel\";\r\n            }\r\n\r\n            get maxActions() {\r\n                return this.actor?.inCombat ? 1 : null;\r\n            }\r\n\r\n            get currentActions() {\r\n                return this.actor.system.resources.lair?.value * 1;\r\n            }\r\n\r\n            async _getButtons() {\r\n                const buttons = [];\r\n                const lair = this.actor.items.filter((item) => getActivationType(item) === \"lair\");\r\n                lair.forEach((item) => {\r\n                    buttons.push(new DND5eItemButton({ item, inActionPanel: true }));\r\n                });\r\n                return buttons;\r\n            }\r\n        }\r\n\r\n        class DND5eMythicActionPanel extends ARGON.MAIN.ActionPanel {\r\n            constructor(...args) {\r\n                super(...args);\r\n            }\r\n\r\n            get label() {\r\n                return \"DND5E.MythicActionLabel\";\r\n            }\r\n\r\n            get maxActions() {\r\n                return null; //this.actor?.inCombat ? 1 : null;\r\n            }\r\n\r\n            get currentActions() {\r\n                return null; //this.actor.system.resources.mythic?.value * 1;\r\n            }\r\n\r\n            async _getButtons() {\r\n                const buttons = [];\r\n                const mythic = this.actor.items.filter((item) => getActivationType(item) === \"mythic\");\r\n                mythic.forEach((item) => {\r\n                    buttons.push(new DND5eItemButton({ item, inActionPanel: true }));\r\n                });\r\n                return buttons;\r\n            }\r\n        }\r\n\r\n        class DND5eItemButton extends ARGON.MAIN.BUTTONS.ItemButton {\r\n            constructor(...args) {\r\n                super(...args);\r\n            }\r\n\r\n            get activity() {\r\n                if (!this.item?.system?.activities) {\r\n                    return;\r\n                }\r\n                return Array.from(this.item.system.activities)[0];\r\n            }\r\n\r\n            get hasTooltip() {\r\n                return true;\r\n            }\r\n\r\n            get ranges() {\r\n                const item = this.activity;\r\n                const touchRange = item.range.units == \"touch\" ? canvas?.scene?.grid?.distance : null;\r\n                return {\r\n                    normal: item?.range?.value ?? touchRange,\r\n                    long: item?.range?.long ?? null,\r\n                };\r\n            }\r\n\r\n            get targets() {\r\n                const item = this.activity;\r\n                const validTargets = [\"creature\", \"ally\", \"enemy\"];\r\n                const actionType = item.actionType;\r\n                const affects = item.target?.affects ?? {};\r\n                const targetType = affects.type;\r\n                if (!item.target?.template?.units && validTargets.includes(targetType)) {\r\n                    return affects.count ?? 1;\r\n                } else if (actionType === \"mwak\" || actionType === \"rwak\") {\r\n                    return affects.count || 1;\r\n                }\r\n                return null;\r\n            }\r\n\r\n            get visible() {\r\n                if (!this._isWeaponSet) return super.visible;\r\n                const isReaction = this.parent instanceof DND5eReactionActionPanel;\r\n                const isMelee = this.activity?.actionType === \"mwak\";\r\n                if (isReaction && !isMelee) return false;\r\n                if (this._isPrimary) return super.visible;\r\n                if (this.activity?.type?.value === \"shield\") return false;\r\n                return super.visible;\r\n            }\r\n\r\n            async getTooltipData() {\r\n                const tooltipData = await getTooltipDetails(this.item);\r\n                tooltipData.propertiesLabel = \"enhancedcombathud-dnd5e.tooltip.properties.name\";\r\n                return tooltipData;\r\n            }\r\n\r\n            async _onLeftClick(event) {\r\n                ui.ARGON.interceptNextDialog(event.currentTarget);\r\n                const used = await this.item.use({event, legacy: false}, {event});\r\n                if (used) {\r\n                    DND5eItemButton.consumeActionEconomy(this.activity);\r\n                }\r\n            }\r\n\r\n            async _onRightClick(event) {\r\n                this.activity?.sheet?.render(true);\r\n            }\r\n\r\n            static consumeActionEconomy(item) {\r\n                const activationType = getActivationType(item);\r\n                let actionType = null;\r\n                for (const [type, types] of Object.entries(actionTypes)) {\r\n                    if (types.includes(activationType)) actionType = type;\r\n                }\r\n                if (!actionType) return;\r\n                if (game.combat?.combatant?.actor !== item.parent) actionType = \"reaction\";\r\n                if (actionType === \"action\") {\r\n                    ui.ARGON.components.main[0].isActionUsed = true;\r\n                    ui.ARGON.components.main[0].updateActionUse();\r\n                } else if (actionType === \"bonus\") {\r\n                    ui.ARGON.components.main[1].isActionUsed = true;\r\n                    ui.ARGON.components.main[1].updateActionUse();\r\n                } else if (actionType === \"reaction\") {\r\n                    ui.ARGON.components.main[2].isActionUsed = true;\r\n                    ui.ARGON.components.main[2].updateActionUse();\r\n                } else if (actionType === \"free\") {\r\n                    ui.ARGON.components.main[3].isActionUsed = true;\r\n                    ui.ARGON.components.main[3].updateActionUse();\r\n                } else if (actionType === \"legendary\") {\r\n                    ui.ARGON.components.main[4].isActionUsed = true;\r\n                }\r\n            }\r\n\r\n            async render(...args) {\r\n                await super.render(...args);\r\n                if (this.activity) {\r\n                    const weapons = this.actor.items.filter((item) => item.consume?.target === this.activity.id);\r\n                    ui.ARGON.updateItemButtons(weapons);\r\n                }\r\n            }\r\n\r\n            get quantity() {\r\n                if (!this.activity) return null;\r\n                const showQuantityItemTypes = [\"consumable\"];\r\n                const consumeType = this.activity.consume?.type;\r\n                if (consumeType === \"ammo\") {\r\n                    const ammoItem = this.actor.items.get(this.activity.consume.target);\r\n                    if (!ammoItem) return null;\r\n                    return Math.floor((ammoItem.quantity ?? 0) / this.activity.consume.amount);\r\n                } else if (consumeType === \"attribute\") {\r\n                    return Math.floor(getProperty(this.actor, this.activity.consume.target) / this.activity.consume.amount);\r\n                } else if (consumeType === \"charges\") {\r\n                    const chargesItem = this.actor.items.get(this.activity.consume.target);\r\n                    if (!chargesItem) return null;\r\n                    return Math.floor((chargesItem.uses?.value ?? 0) / this.activity.consume.amount);\r\n                } else if (showQuantityItemTypes.includes(this.activity.type)) {\r\n                    return this.activity.uses?.value ?? this.activity.quantity;\r\n                } else if (this.activity.uses.value !== null && this.activity.uses.per !== null && this.activity.uses.max) {\r\n                    return this.activity.uses.value;\r\n                }\r\n                return null;\r\n            }\r\n        }\r\n\r\n        class DND5eButtonPanelButton extends ARGON.MAIN.BUTTONS.ButtonPanelButton {\r\n            constructor({ type, items, color }) {\r\n                super();\r\n                this.type = type;\r\n                this.items = items;\r\n                this.color = color;\r\n                this.itemsWithSpells = [];\r\n                this._spells = this.prePrepareSpells();\r\n            }\r\n\r\n            get hasContents() {\r\n                return this._spells ? !!this._spells.length || !!this.itemsWithSpells.length : !!this.items.length;\r\n            }\r\n\r\n            get colorScheme() {\r\n                return this.color;\r\n            }\r\n\r\n            get id() {\r\n                return `${this.type}-${this.color}`;\r\n            }\r\n\r\n            get label() {\r\n                switch (this.type) {\r\n                    case \"spell\":\r\n                        return \"enhancedcombathud-dnd5e.hud.castspell.name\";\r\n                    case \"feat\":\r\n                        return \"enhancedcombathud-dnd5e.hud.usepower.name\";\r\n                    case \"consumable\":\r\n                        return \"enhancedcombathud-dnd5e.hud.useitem.name\";\r\n                }\r\n            }\r\n\r\n            get icon() {\r\n                switch (this.type) {\r\n                    case \"spell\":\r\n                        return \"modules/enhancedcombathud/icons/spell-book.webp\";\r\n                    case \"feat\":\r\n                        return \"modules/enhancedcombathud/icons/mighty-force.webp\";\r\n                    case \"consumable\":\r\n                        return \"modules/enhancedcombathud/icons/drink-me.webp\";\r\n                }\r\n            }\r\n\r\n            get showPreparedOnly() {\r\n                if (this.actor.type !== \"character\") return false;\r\n                const preparedFlag = this.actor.getFlag(MODULE_ID, \"showPrepared\");\r\n                if (preparedFlag === \"all\") return false;\r\n                if (preparedFlag === \"preparedOnly\") return true;\r\n                const classes = Object.keys(this.actor.classes);\r\n                const requiresPreparation = [\"cleric\", \"druid\", \"paladin\", \"wizard\", \"artificer\"].some((className) => classes.includes(className));\r\n                return requiresPreparation;\r\n            }\r\n\r\n            prePrepareSpells() {\r\n                if (this.type !== \"spell\") return;\r\n\r\n                const spellLevels = CONFIG.DND5E.spellLevels;\r\n                const itemsToIgnore = [];\r\n                if (game.modules.get(\"items-with-spells-5e\")?.active) {\r\n                    const IWSAPI = game.modules.get(\"items-with-spells-5e\").api;\r\n                    const actionType = this.items[0].system.activation?.type;\r\n                    const spellItems = this.actor.items.filter((item) => item.flags[\"items-with-spells-5e\"]?.[\"item-spells\"]?.length);\r\n                    for (const item of spellItems) {\r\n                        const spellData = item.flags[\"items-with-spells-5e\"][\"item-spells\"];\r\n                        const itemsInSpell = spellData.map((spell) => this.actor.items.get(spell.id)).filter((item) => item && getActivationType(item) === actionType);\r\n                        if (!itemsInSpell.length) continue;\r\n                        itemsToIgnore.push(...itemsInSpell);\r\n                        if (!IWSAPI.isUsableItem(item)) continue;\r\n                        this.itemsWithSpells.push({\r\n                            label: item.name,\r\n                            buttons: itemsInSpell.map((item) => new DND5eItemButton({ item })),\r\n                            uses: () => {\r\n                                return { max: item.system.uses?.max, value: item.system.uses?.value };\r\n                            },\r\n                        });\r\n                    }\r\n                    this.items = this.items.filter((item) => !itemsToIgnore.includes(item));\r\n                }\r\n                if (this.showPreparedOnly) {\r\n                    const allowIfNotPrepared = [\"atwill\", \"innate\", \"pact\", \"always\"];\r\n                    this.items = this.items.filter((item) => {\r\n                        if (allowIfNotPrepared.includes(item.system.preparation.mode)) return true;\r\n                        if (item.system.level == 0) return true;\r\n                        return item.system.preparation.prepared;\r\n                    });\r\n                }\r\n\r\n                const spells = [\r\n                    ...this.itemsWithSpells,\r\n                    {\r\n                        label: \"DND5E.SpellPrepAtWill\",\r\n                        buttons: this.items.filter((item) => item.system.preparation.mode === \"atwill\").map((item) => new DND5eItemButton({ item })),\r\n                        uses: { max: Infinity, value: Infinity },\r\n                    },\r\n                    {\r\n                        label: \"DND5E.SpellPrepInnate\",\r\n                        buttons: this.items.filter((item) => item.system.preparation.mode === \"innate\").map((item) => new DND5eItemButton({ item })),\r\n                        uses: { max: Infinity, value: Infinity },\r\n                    },\r\n                    {\r\n                        label: Object.values(spellLevels)[0],\r\n                        buttons: this.items.filter((item) => item.system.level == 0).map((item) => new DND5eItemButton({ item })),\r\n                        uses: { max: Infinity, value: Infinity },\r\n                    },\r\n                    {\r\n                        label: \"DND5E.PactMagic\",\r\n                        buttons: this.items.filter((item) => item.system.preparation.mode === \"pact\").map((item) => new DND5eItemButton({ item })),\r\n                        uses: () => {\r\n                            return this.actor.system.spells.pact;\r\n                        },\r\n                    },\r\n                ];\r\n                for (const [level, label] of Object.entries(spellLevels)) {\r\n                    const levelSpells = this.items.filter((item) => item.system.level == level && (item.system.preparation.mode === \"prepared\" || item.system.preparation.mode === \"always\"));\r\n                    if (!levelSpells.length || level == 0) continue;\r\n                    spells.push({\r\n                        label,\r\n                        buttons: levelSpells.map((item) => new DND5eItemButton({ item })),\r\n                        uses: () => {\r\n                            return this.actor.system.spells[`spell${level}`];\r\n                        },\r\n                    });\r\n                }\r\n                return spells.filter((spell) => spell.buttons.length);\r\n            }\r\n\r\n            async _getPanel() {\r\n                if (this.type === \"spell\") {\r\n                    return new ARGON.MAIN.BUTTON_PANELS.ACCORDION.AccordionPanel({ id: this.id, accordionPanelCategories: this._spells.map(({ label, buttons, uses }) => new ARGON.MAIN.BUTTON_PANELS.ACCORDION.AccordionPanelCategory({ label, buttons, uses })) });\r\n                } else {\r\n                    return new ARGON.MAIN.BUTTON_PANELS.ButtonPanel({ id: this.id, buttons: this.items.map((item) => new DND5eItemButton({ item })) });\r\n                }\r\n            }\r\n        }\r\n\r\n        class DND5eSpecialActionButton extends ARGON.MAIN.BUTTONS.ActionButton {\r\n            constructor(specialItem) {\r\n                super();\r\n                const actorItem = this.actor.items.getName(specialItem.name);\r\n                this.actorItem = actorItem;\r\n                this.item =\r\n                    actorItem ??\r\n                    new CONFIG.Item.documentClass(specialItem, {\r\n                        parent: this.actor,\r\n                    });\r\n            }\r\n\r\n            get label() {\r\n                return this.item.name;\r\n            }\r\n\r\n            get icon() {\r\n                return this.item.img;\r\n            }\r\n\r\n            get hasTooltip() {\r\n                return true;\r\n            }\r\n\r\n            get activity() {\r\n                if (!this.item?.system?.activities) {\r\n                    return;\r\n                }\r\n                return Array.from(this.item.system.activities)[0];\r\n            }\r\n\r\n            async getTooltipData() {\r\n                const tooltipData = await getTooltipDetails(this.item);\r\n                tooltipData.propertiesLabel = \"enhancedcombathud-dnd5e.tooltip.properties.name\";\r\n                return tooltipData;\r\n            }\r\n\r\n            async _onLeftClick(event) {\r\n                const useCE = game.modules.get(\"dfreds-convenient-effects\")?.active && game.dfreds.effectInterface.findEffect({ effectName: this.label });\r\n                let success = false;\r\n                if (useCE) {\r\n                    success = true;\r\n                    await game.dfreds.effectInterface.toggleEffect({ effectName: this.label, overlay: false, uuids: [this.actor.uuid] });\r\n                } else {\r\n                    success = this.actorItem ? await this.activity.use({ event }, { event }) : await this.createChatMessage();\r\n                }\r\n                if (success) {\r\n                    DND5eItemButton.consumeActionEconomy(this.item);\r\n                }\r\n            }\r\n\r\n            async createChatMessage() {\r\n                return await ChatMessage.create({\r\n                    user: game.user,\r\n                    speaker: {\r\n                        actor: this.actor,\r\n                        token: this.actor.token,\r\n                        alias: this.actor.name,\r\n                    },\r\n                    content: `\r\n                    <div class=\"dnd5e2 chat-card item-card\" data-display-challenge=\"\">\r\n\r\n    <section class=\"card-header description collapsible\">\r\n\r\n        <header class=\"summary\">\r\n            <img class=\"gold-icon\" src=\"${this.icon}\">\r\n            <div class=\"name-stacked border\">\r\n                <span class=\"title\">${this.label}</span>\r\n                <span class=\"subtitle\">\r\n                    Feature\r\n                </span>\r\n            </div>\r\n            <i class=\"fas fa-chevron-down fa-fw\"></i>\r\n        </header>\r\n\r\n        <section class=\"details collapsible-content card-content\">\r\n            <div class=\"wrapper\">\r\n                ${this.item.system.description.value}\r\n            </div>\r\n        </section>\r\n    </section>\r\n\r\n\r\n</div>\r\n                    `,\r\n                });\r\n            }\r\n        }\r\n\r\n        class DND5eMovementHud extends ARGON.MovementHud {\r\n            constructor(...args) {\r\n                super(...args);\r\n                this.getMovementMode = game.modules.get(\"elevation-drag-ruler\")?.api?.getMovementMode;\r\n            }\r\n\r\n            get visible() {\r\n                return game.combat?.started;\r\n            }\r\n\r\n            get movementMode() {\r\n                return this.getMovementMode ? this.getMovementMode(this.token) : \"walk\";\r\n            }\r\n\r\n            get movementMax() {\r\n                if (!this.actor) return 0;\r\n                return this.actor.system.attributes.movement[this.movementMode] / canvas.scene.dimensions.distance;\r\n            }\r\n        }\r\n\r\n        class DND5eButtonHud extends ARGON.ButtonHud {\r\n            constructor(...args) {\r\n                super(...args);\r\n            }\r\n\r\n            get visible() {\r\n                return !game.combat?.started;\r\n            }\r\n\r\n            async _getButtons() {\r\n                return [\r\n                    {\r\n                        label: \"DND5E.LongRest\",\r\n                        onClick: (event) => this.actor.longRest(),\r\n                        icon: \"fas fa-bed\",\r\n                    },\r\n                    {\r\n                        label: \"DND5E.ShortRest\",\r\n                        onClick: (event) => this.actor.shortRest(),\r\n                        icon: \"fas fa-coffee\",\r\n                    },\r\n                ];\r\n            }\r\n        }\r\n\r\n        class DND5eWeaponSets extends ARGON.WeaponSets {\r\n            async getDefaultSets() {\r\n                const sets = await super.getDefaultSets();\r\n                const isTransformed = this.actor.flags?.dnd5e?.isPolymorphed;\r\n                if (this.actor.type !== \"npc\" && !isTransformed) return sets;\r\n                const actions = this.actor.items.filter((item) => item.type === \"weapon\" && getActivationType(item) === \"action\");\r\n                const bonus = this.actor.items.filter((item) => item.type === \"weapon\" && getActivationType(item) === \"bonus\");\r\n                return {\r\n                    1: {\r\n                        primary: actions[0]?.uuid ?? null,\r\n                        secondary: bonus[0]?.uuid ?? null,\r\n                    },\r\n                    2: {\r\n                        primary: actions[1]?.uuid ?? null,\r\n                        secondary: bonus[1]?.uuid ?? null,\r\n                    },\r\n                    3: {\r\n                        primary: actions[2]?.uuid ?? null,\r\n                        secondary: bonus[2]?.uuid ?? null,\r\n                    },\r\n                };\r\n            }\r\n\r\n            async _getSets() {\r\n                const isTransformed = this.actor.flags?.dnd5e?.isPolymorphed;\r\n\r\n                const sets = isTransformed ? await this.getDefaultSets() : foundry.utils.mergeObject(await this.getDefaultSets(), foundry.utils.deepClone(this.actor.getFlag(\"enhancedcombathud\", \"weaponSets\") || {}));\r\n\r\n                for (const [set, slots] of Object.entries(sets)) {\r\n                    slots.primary = slots.primary ? await fromUuid(slots.primary) : null;\r\n                    slots.secondary = slots.secondary ? await fromUuid(slots.secondary) : null;\r\n                }\r\n                return sets;\r\n            }\r\n\r\n            async _onSetChange({ sets, active }) {\r\n                const switchEquip = game.settings.get(\"enhancedcombathud-dnd5e\", \"switchEquip\");\r\n                if (!switchEquip) return;\r\n                const updates = [];\r\n                const activeSet = sets[active];\r\n                const activeItems = Object.values(activeSet).filter((item) => item);\r\n                const inactiveSets = Object.values(sets).filter((set) => set !== activeSet);\r\n                const inactiveItems = inactiveSets\r\n                    .flatMap((set) => Object.values(set))\r\n                    .filter((item) => item)\r\n                    .filter((item) => !activeItems.includes(item));\r\n                activeItems.forEach((item) => {\r\n                    if (!item.system?.equipped) updates.push({ _id: item.id, \"system.equipped\": true });\r\n                });\r\n                inactiveItems.forEach((item) => {\r\n                    if (item.system?.equipped) updates.push({ _id: item.id, \"system.equipped\": false });\r\n                });\r\n                return await this.actor.updateEmbeddedDocuments(\"Item\", updates);\r\n            }\r\n        }\r\n\r\n        const enableMacroPanel = game.settings.get(MODULE_ID, \"macroPanel\");\r\n\r\n        const mainPanels = [DND5eActionActionPanel, DND5eBonusActionPanel, DND5eReactionActionPanel, DND5eFreeActionPanel, DND5eLegActionPanel, DND5eLairActionPanel, DND5eMythicActionPanel];\r\n        if (enableMacroPanel) mainPanels.push(ARGON.PREFAB.MacroPanel);\r\n        mainPanels.push(ARGON.PREFAB.PassTurnPanel);\r\n\r\n        CoreHUD.definePortraitPanel(DND5ePortraitPanel);\r\n        CoreHUD.defineDrawerPanel(DND5eDrawerPanel);\r\n        CoreHUD.defineMainPanels(mainPanels);\r\n        CoreHUD.defineMovementHud(DND5eMovementHud);\r\n        CoreHUD.defineButtonHud(DND5eButtonHud);\r\n        CoreHUD.defineWeaponSets(DND5eWeaponSets);\r\n        CoreHUD.defineTooltip(DND5eTooltip);\r\n        CoreHUD.defineSupportedActorTypes([\"character\", \"npc\"]);\r\n    });\r\n}\r\n\r\nfunction registerItems() {\r\n    ECHItems[game.i18n.localize(\"enhancedcombathud-dnd5e.items.disengage.name\")] = {\r\n        name: game.i18n.localize(\"enhancedcombathud-dnd5e.items.disengage.name\"),\r\n        type: \"feat\",\r\n        img: \"modules/enhancedcombathud/icons/journey.webp\",\r\n        system: {\r\n            type: {\r\n                value: \"\",\r\n                subtype: \"\",\r\n            },\r\n            description: {\r\n                value: game.i18n.localize(\"enhancedcombathud-dnd5e.items.disengage.desc\"),\r\n                chat: \"\",\r\n                unidentified: \"\",\r\n            },\r\n            source: \"\",\r\n            quantity: 1,\r\n            weight: 0,\r\n            price: 0,\r\n            attuned: false,\r\n            attunement: 0,\r\n            equipped: false,\r\n            rarity: \"\",\r\n            identified: true,\r\n            activation: {\r\n                type: \"action\",\r\n                cost: 1,\r\n                condition: \"\",\r\n            },\r\n            duration: {\r\n                value: 1,\r\n                units: \"turn\",\r\n            },\r\n            target: {\r\n                value: null,\r\n                width: null,\r\n                units: \"\",\r\n                type: \"self\",\r\n            },\r\n            range: {\r\n                value: null,\r\n                long: null,\r\n                units: \"\",\r\n            },\r\n            consume: {\r\n                type: \"\",\r\n                target: \"\",\r\n                amount: null,\r\n            },\r\n            ability: \"\",\r\n            actionType: \"util\",\r\n            attackBonus: 0,\r\n            chatFlavor: \"\",\r\n            critical: null,\r\n            damage: {\r\n                parts: [],\r\n                versatile: \"\",\r\n            },\r\n            formula: \"\",\r\n            save: {\r\n                ability: \"\",\r\n                dc: null,\r\n                scaling: \"spell\",\r\n            },\r\n        },\r\n        sort: 0,\r\n        flags: {\r\n            core: {\r\n                sourceId: \"Item.wyQkeuZkttllAFB1\",\r\n            },\r\n\r\n            \"midi-qol\": {\r\n                onUseMacroName: \"\",\r\n            },\r\n        },\r\n    };\r\n    ECHItems[game.i18n.localize(\"enhancedcombathud-dnd5e.items.dodge.name\")] = {\r\n        name: game.i18n.localize(\"enhancedcombathud-dnd5e.items.dodge.name\"),\r\n        type: \"feat\",\r\n        img: \"modules/enhancedcombathud/icons/armor-upgrade.webp\",\r\n        system: {\r\n            type: {\r\n                value: \"\",\r\n                subtype: \"\",\r\n            },\r\n            description: {\r\n                value: game.i18n.localize(\"enhancedcombathud-dnd5e.items.dodge.desc\"),\r\n                chat: \"\",\r\n                unidentified: \"\",\r\n            },\r\n            source: \"\",\r\n            quantity: 1,\r\n            weight: 0,\r\n            price: 0,\r\n            attuned: false,\r\n            attunement: 0,\r\n            equipped: false,\r\n            rarity: \"\",\r\n            identified: true,\r\n            activation: {\r\n                type: \"action\",\r\n                cost: 1,\r\n                condition: \"\",\r\n            },\r\n            duration: {\r\n                value: 1,\r\n                units: \"round\",\r\n            },\r\n            target: {\r\n                value: null,\r\n                width: null,\r\n                units: \"\",\r\n                type: \"self\",\r\n            },\r\n            range: {\r\n                value: null,\r\n                long: null,\r\n                units: \"\",\r\n            },\r\n\r\n            consume: {\r\n                type: \"\",\r\n                target: \"\",\r\n                amount: null,\r\n            },\r\n            ability: \"\",\r\n            actionType: \"util\",\r\n            attackBonus: 0,\r\n            chatFlavor: \"\",\r\n            critical: null,\r\n            damage: {\r\n                parts: [],\r\n                versatile: \"\",\r\n            },\r\n            formula: \"\",\r\n            save: {\r\n                ability: \"\",\r\n                dc: null,\r\n                scaling: \"spell\",\r\n            },\r\n            consumableType: \"trinket\",\r\n        },\r\n        sort: 0,\r\n        flags: {\r\n            \"midi-qol\": {\r\n                onUseMacroName: \"\",\r\n            },\r\n        },\r\n    };\r\n    ECHItems[game.i18n.localize(\"enhancedcombathud-dnd5e.items.ready.name\")] = {\r\n        name: game.i18n.localize(\"enhancedcombathud-dnd5e.items.ready.name\"),\r\n        type: \"feat\",\r\n        img: \"modules/enhancedcombathud/icons/clockwork.webp\",\r\n        system: {\r\n            type: {\r\n                value: \"\",\r\n                subtype: \"\",\r\n            },\r\n            description: {\r\n                value: game.i18n.localize(\"enhancedcombathud-dnd5e.items.ready.desc\"),\r\n                chat: \"\",\r\n                unidentified: \"\",\r\n            },\r\n            source: \"\",\r\n            quantity: 1,\r\n            weight: 0,\r\n            price: 0,\r\n            attuned: false,\r\n            attunement: 0,\r\n            equipped: false,\r\n            rarity: \"\",\r\n            identified: true,\r\n            activation: {\r\n                type: \"action\",\r\n                cost: 1,\r\n                condition: \"\",\r\n            },\r\n            duration: {\r\n                value: null,\r\n                units: \"\",\r\n            },\r\n            target: {\r\n                value: null,\r\n                width: null,\r\n                units: \"\",\r\n                type: \"self\",\r\n            },\r\n            range: {\r\n                value: null,\r\n                long: null,\r\n                units: \"\",\r\n            },\r\n\r\n            consume: {\r\n                type: \"\",\r\n                target: \"\",\r\n                amount: null,\r\n            },\r\n            ability: \"\",\r\n            actionType: \"util\",\r\n            attackBonus: 0,\r\n            chatFlavor: \"\",\r\n            critical: null,\r\n            damage: {\r\n                parts: [],\r\n                versatile: \"\",\r\n            },\r\n            formula: \"\",\r\n            save: {\r\n                ability: \"\",\r\n                dc: null,\r\n                scaling: \"spell\",\r\n            },\r\n            consumableType: \"trinket\",\r\n        },\r\n        sort: 0,\r\n        flags: {\r\n            \"midi-qol\": {\r\n                onUseMacroName: \"\",\r\n            },\r\n        },\r\n    };\r\n    ECHItems[game.i18n.localize(\"enhancedcombathud-dnd5e.items.hide.name\")] = {\r\n        name: game.i18n.localize(\"enhancedcombathud-dnd5e.items.hide.name\"),\r\n        type: \"feat\",\r\n        img: \"modules/enhancedcombathud/icons/cloak-dagger.webp\",\r\n        system: {\r\n            type: {\r\n                value: \"\",\r\n                subtype: \"\",\r\n            },\r\n            description: {\r\n                value: game.i18n.localize(\"enhancedcombathud-dnd5e.items.hide.desc\"),\r\n                chat: \"\",\r\n                unidentified: \"\",\r\n            },\r\n            source: \"\",\r\n            quantity: 1,\r\n            weight: 0,\r\n            price: 0,\r\n            attuned: false,\r\n            attunement: 0,\r\n            equipped: false,\r\n            rarity: \"\",\r\n            identified: true,\r\n            activation: {\r\n                type: \"action\",\r\n                cost: 1,\r\n                condition: \"\",\r\n            },\r\n            duration: {\r\n                value: null,\r\n                units: \"\",\r\n            },\r\n            target: {\r\n                value: null,\r\n                width: null,\r\n                units: \"\",\r\n                type: \"self\",\r\n            },\r\n            range: {\r\n                value: null,\r\n                long: null,\r\n                units: \"\",\r\n            },\r\n\r\n            consume: {\r\n                type: \"\",\r\n                target: \"\",\r\n                amount: null,\r\n            },\r\n            recharge: {\r\n                value: null,\r\n                charged: false,\r\n            },\r\n            ability: \"\",\r\n            actionType: \"util\",\r\n            attackBonus: 0,\r\n            chatFlavor: \"\",\r\n            critical: null,\r\n            damage: {\r\n                parts: [],\r\n                versatile: \"\",\r\n            },\r\n            formula: \"\",\r\n            save: {\r\n                ability: \"\",\r\n                dc: null,\r\n                scaling: \"spell\",\r\n            },\r\n            consumableType: \"trinket\",\r\n        },\r\n        sort: 0,\r\n        flags: {\r\n            \"midi-qol\": {\r\n                onUseMacroName: \"\",\r\n            },\r\n        },\r\n    };\r\n    ECHItems[game.i18n.localize(\"enhancedcombathud-dnd5e.items.dash.name\")] = {\r\n        name: game.i18n.localize(\"enhancedcombathud-dnd5e.items.dash.name\"),\r\n        type: \"feat\",\r\n        img: \"modules/enhancedcombathud/icons/walking-boot.webp\",\r\n        system: {\r\n            type: {\r\n                value: \"\",\r\n                subtype: \"\",\r\n            },\r\n            description: {\r\n                value: game.i18n.localize(\"enhancedcombathud-dnd5e.items.dash.desc\"),\r\n                chat: \"\",\r\n                unidentified: \"\",\r\n            },\r\n            source: \"\",\r\n            quantity: 1,\r\n            weight: 0,\r\n            price: 0,\r\n            attuned: false,\r\n            attunement: 0,\r\n            equipped: false,\r\n            rarity: \"\",\r\n            identified: true,\r\n            activation: {\r\n                type: \"action\",\r\n                cost: 1,\r\n                condition: \"\",\r\n            },\r\n            duration: {\r\n                value: null,\r\n                units: \"\",\r\n            },\r\n            target: {\r\n                value: null,\r\n                width: null,\r\n                units: \"\",\r\n                type: \"self\",\r\n            },\r\n            range: {\r\n                value: null,\r\n                long: null,\r\n                units: \"\",\r\n            },\r\n\r\n            consume: {\r\n                type: \"\",\r\n                target: \"\",\r\n                amount: null,\r\n            },\r\n            ability: \"\",\r\n            actionType: \"util\",\r\n            attackBonus: 0,\r\n            chatFlavor: \"\",\r\n            critical: null,\r\n            damage: {\r\n                parts: [],\r\n                versatile: \"\",\r\n            },\r\n            formula: \"\",\r\n            save: {\r\n                ability: \"\",\r\n                dc: null,\r\n                scaling: \"spell\",\r\n            },\r\n            consumableType: \"trinket\",\r\n        },\r\n        sort: 0,\r\n        flags: {\r\n            \"midi-qol\": {\r\n                onUseMacroName: \"\",\r\n            },\r\n        },\r\n    };\r\n    ECHItems[game.i18n.localize(\"enhancedcombathud-dnd5e.items.shove.name\")] = {\r\n        name: game.i18n.localize(\"enhancedcombathud-dnd5e.items.shove.name\"),\r\n        type: \"feat\",\r\n        img: \"modules/enhancedcombathud/icons/shield-bash.webp\",\r\n        system: {\r\n            type: {\r\n                value: \"\",\r\n                subtype: \"\",\r\n            },\r\n            description: {\r\n                value: game.i18n.localize(\"enhancedcombathud-dnd5e.items.shove.desc\"),\r\n                chat: \"\",\r\n                unidentified: \"\",\r\n            },\r\n            source: \"\",\r\n            quantity: 1,\r\n            weight: 0,\r\n            price: 0,\r\n            attuned: false,\r\n            attunement: 0,\r\n            equipped: false,\r\n            rarity: \"\",\r\n            identified: true,\r\n            activation: {\r\n                type: \"action\",\r\n                cost: 1,\r\n                condition: \"\",\r\n            },\r\n            duration: {\r\n                value: null,\r\n                units: \"\",\r\n            },\r\n            target: {\r\n                value: 1,\r\n                width: null,\r\n                units: \"\",\r\n                type: \"creature\",\r\n            },\r\n            range: {\r\n                value: null,\r\n                long: null,\r\n                units: \"touch\",\r\n            },\r\n\r\n            consume: {\r\n                type: \"\",\r\n                target: \"\",\r\n                amount: null,\r\n            },\r\n            ability: \"\",\r\n            actionType: \"util\",\r\n            attackBonus: 0,\r\n            chatFlavor: \"\",\r\n            critical: null,\r\n            damage: {\r\n                parts: [],\r\n                versatile: \"\",\r\n            },\r\n            formula: \"\",\r\n            save: {\r\n                ability: \"\",\r\n                dc: null,\r\n                scaling: \"spell\",\r\n            },\r\n            consumableType: \"trinket\",\r\n        },\r\n        sort: 0,\r\n        flags: {\r\n            \"midi-qol\": {\r\n                onUseMacroName: \"\",\r\n            },\r\n        },\r\n    };\r\n}\r\n","import { MODULE_ID } from \"./main.js\";\r\n\r\nexport function registerSettings() {\r\n    const settings = {\r\n        showWeaponsItems: {\r\n            name: game.i18n.localize(\"enhancedcombathud-dnd5e.settings.showWeaponsItems.name\"),\r\n            hint: game.i18n.localize(\"enhancedcombathud-dnd5e.settings.showWeaponsItems.hint\"),\r\n            scope: \"world\",\r\n            config: true,\r\n            type: Boolean,\r\n            default: false,\r\n            onChange: (sett) => {\r\n                ui.ARGON.constructor.DND5E.itemTypes.consumable = ui.ARGON.constructor.DND5E.itemTypes.consumable.filter(i => i !== \"weapon\");\r\n                if(sett) ui.ARGON.constructor.DND5E.itemTypes.consumable.push(\"weapon\");\r\n                ui.ARGON.refresh()\r\n            },\r\n        },\r\n        showClassActions: {\r\n            name: game.i18n.localize(\"enhancedcombathud-dnd5e.settings.showClassActions.name\"),\r\n            hint: game.i18n.localize(\"enhancedcombathud-dnd5e.settings.showClassActions.hint\"),\r\n            scope: \"world\",\r\n            config: true,\r\n            type: Boolean,\r\n            default: true,\r\n            onChange: (sett) => {\r\n                ui.ARGON.constructor.DND5E.mainBarFeatures = ui.ARGON.constructor.DND5E.mainBarFeatures.filter(i => i !== \"class\");\r\n                if(sett) ui.ARGON.constructor.DND5E.mainBarFeatures.push(\"class\");\r\n                ui.ARGON.refresh()\r\n            },\r\n        },\r\n        condenseClassActions: {\r\n            name: game.i18n.localize(\"enhancedcombathud-dnd5e.settings.condenseClassActions.name\"),\r\n            hint: game.i18n.localize(\"enhancedcombathud-dnd5e.settings.condenseClassActions.hint\"),\r\n            scope: \"world\",\r\n            config: true,\r\n            type: Boolean,\r\n            default: true,\r\n            onChange: () => ui.ARGON.refresh(),\r\n        },\r\n        macroPanel: {\r\n            name: game.i18n.localize(\"enhancedcombathud-dnd5e.settings.macroPanel.name\"),\r\n            hint: game.i18n.localize(\"enhancedcombathud-dnd5e.settings.macroPanel.hint\"),\r\n            scope: \"world\",\r\n            config: true,\r\n            type: Boolean,\r\n            default: false,\r\n            requiresReload: true,\r\n            onChange: () => ui.ARGON.refresh(),\r\n        },\r\n        switchEquip: {\r\n            name: game.i18n.localize(\"enhancedcombathud-dnd5e.settings.switchEquip.name\"),\r\n            hint: game.i18n.localize(\"enhancedcombathud-dnd5e.settings.switchEquip.hint\"),\r\n            scope: \"world\",\r\n            config: true,\r\n            type: Boolean,\r\n            default: true,\r\n            onChange: () => ui.ARGON.refresh(),\r\n        },\r\n        showSpecialActions: {\r\n            name: game.i18n.localize(\"enhancedcombathud-dnd5e.settings.showSpecialActions.name\"),\r\n            hint: game.i18n.localize(\"enhancedcombathud-dnd5e.settings.showSpecialActions.hint\"),\r\n            scope: \"world\",\r\n            config: true,\r\n            type: Boolean,\r\n            default: true,\r\n            onChange: () => ui.ARGON.refresh(),\r\n        },\r\n    };\r\n\r\n    registerSettingsArray(settings);\r\n}\r\n\r\nexport function getSetting(key) {\r\n    return game.settings.get(MODULE_ID, key);\r\n}\r\n\r\nexport async function setSetting(key, value) {\r\n    return await game.settings.set(MODULE_ID, key, value);\r\n}\r\n\r\nfunction registerSettingsArray(settings) {\r\n    for(const [key, value] of Object.entries(settings)) {\r\n        game.settings.register(MODULE_ID, key, value);\r\n    }\r\n}","import {initConfig} from \"./config.js\";\r\nimport { registerSettings } from \"./settings.js\";\r\n\r\nexport const MODULE_ID = \"enhancedcombathud-dnd5e\";\r\n\r\nHooks.on(\"setup\", () => {\r\n    registerSettings();\r\n    initConfig();\r\n});"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","_regeneratorRuntime","Op","hasOwn","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","_typeof","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","_catch","thrown","delegateYield","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","args","arguments","apply","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","_toPrimitive","input","hint","prim","toPrimitive","res","String","Number","_createClass","protoProps","staticProps","_get","Reflect","bind","property","receiver","base","_superPropBase","_getPrototypeOf","getOwnPropertyDescriptor","_inherits","subClass","superClass","_setPrototypeOf","p","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","construct","sham","Proxy","Boolean","valueOf","e","_createSuperInternal","Super","NewTarget","_possibleConstructorReturn","_assertThisInitialized","ReferenceError","ECHItems","initConfig","Hooks","on","CoreHUD","_game$modules$get","game","system","id","registerItems","i18n","localize","img","subtype","description","chat","unidentified","source","quantity","weight","price","attuned","attunement","equipped","rarity","identified","activation","cost","condition","duration","units","width","range","long","consume","amount","ability","actionType","attackBonus","chatFlavor","critical","damage","parts","versatile","formula","save","dc","scaling","sort","flags","core","sourceId","onUseMacroName","consumableType","recharge","charged","ARGON","DND5eTooltip","_ARGON$CORE$Tooltip","_super","concat","CORE","Tooltip","isMIDI","modules","active","getMidiFlag","_ui$ARGON$_actor$getF","_flag$actionType","ui","_actor","getFlag","getActivationType","item","_item$system","_Array$from$","activities","Array","from","getActionType","_item$system2","_Array$from$2","actionTypes","action","bonus","reaction","free","itemTypes","spell","feat","consumable","mainBarFeatures","settings","MODULE_ID","DND5E","callAll","DND5ePortraitPanel","_ARGON$PORTRAIT$Portr","_getStatBlocks","_onDeathSave2","_super2","_len","_key","_this$actor","this","actor","isPC","_CONFIG$DND5E$creatur","_CONFIG$DND5E$creatur2","creatureType","CONFIG","creatureTypes","details","label","custom","cr","classes","map","c","join","level","race","isDying","attributes","hp","_this$actor$system$at","_this$actor$system$at2","death","success","_this$actor$system$at3","_this$actor$system$at4","failure","_callee","event","_callee$","_context","rollDeathSave","_onDeathSave","_x3","_callee2","_this$actor$system$at5","_this$actor$system$at6","HPText","ACText","SpellDC","hpColor","tempMax","hpMaxColor","_callee2$","_context2","split","word","toUpperCase","replace","trim","temp","tempmax","text","color","max","ac","spelldc","getStatBlocks","PORTRAIT","PortraitPanel","DND5eDrawerButton","_ARGON$DRAWER$DrawerB","_getTooltipData","_super3","buttons","_this","TooltipManager","TOOLTIP_DIRECTIONS","RIGHT","_callee3","tooltipData","_callee3$","_context3","getTooltipDetails","getTooltipData","DRAWER","DrawerButton","DND5eDrawerPanel","_ARGON$DRAWER$DrawerP","_super4","_len2","_key2","_this2","abilities","skills","tools","tool","addSign","gridCols","captions","align","abilityData","onClick","rollAbility","mod","checkBonus","rollAbilityTest","rollAbilitySave","skill","skillData","getProficiencyIcon","proficient","rollSkill","total","passive","style","rollToolCheck","abilityMod","proficiencyMultiplier","prof","DrawerPanel","DND5eActionActionPanel","_ARGON$MAIN$ActionPan","_getButtons2","_super5","_len3","_key3","_this$actor2","inCombat","_getMidiFlag","isActionUsed","_onNewRound","combat","updateActionUse","_callee4","spellItems","featItems","consumableItems","spellButton","specialActions","showSpecialActions","barItems","_callee4$","_context4","items","filter","_item$system$type","includes","_item$system$type2","_item$system$type3","DND5eButtonPanelButton","button","hasContents","DND5eItemButton","isWeaponSet","isPrimary","MAIN","BUTTONS","SplitButton","DND5eSpecialActionButton","_toConsumableArray","_item$system$type4","condenseItemButtons","_getButtons","ActionPanel","DND5eBonusActionPanel","_ARGON$MAIN$ActionPan2","_getButtons3","_super6","_len4","_key4","_this$actor3","_getMidiFlag2","_callee5","_loop","_i","_Object$entries","_this3","_callee5$","_context6","_Object$entries$_i","types","_loop$","_context5","_slicedToArray","_item$system$type5","entries","t0","_item$system$type6","DND5eReactionActionPanel","_ARGON$MAIN$ActionPan3","_getButtons4","_super7","_len5","_key5","_this$actor4","_getMidiFlag3","_callee6","_loop2","_i2","_Object$entries2","_this4","_callee6$","_context8","_Object$entries2$_i","_loop2$","_context7","_item$system$type7","_item$system$type8","DND5eFreeActionPanel","_ARGON$MAIN$ActionPan4","_getButtons5","_super8","_len6","_key6","_this$actor5","_callee7","_loop3","_i3","_Object$entries3","_this5","_callee7$","_context10","_Object$entries3$_i","_loop3$","_context9","_item$system$type9","_item$system$type10","DND5eLegActionPanel","_ARGON$MAIN$ActionPan5","_getButtons6","_super9","_len7","_key7","_this$actor6","_this$actor$system$re","_this$actor$system$re2","resources","legact","_this$actor$system$re3","_this$actor$system$re4","_callee8","_callee8$","_context11","inActionPanel","DND5eLairActionPanel","_ARGON$MAIN$ActionPan6","_getButtons7","_super10","_len8","_key8","_this$actor7","_this$actor$system$re5","lair","_callee9","_callee9$","_context12","DND5eMythicActionPanel","_ARGON$MAIN$ActionPan7","_getButtons8","_super11","_len9","_key9","_callee10","_callee10$","_context13","_ARGON$MAIN$BUTTONS$I","_render","_onRightClick2","_onLeftClick2","_getTooltipData2","_super12","_len10","_key10","_this$item","_canvas","_item$range$value","_item$range","_item$range$long","_item$range2","activity","touchRange","canvas","scene","grid","distance","normal","_item$target$affects","_item$target","_item$target2","_affects$count","affects","targetType","template","count","_this$activity","_this$activity2","_isWeaponSet","isReaction","parent","isMelee","_isPrimary","_callee11","_callee11$","_context14","propertiesLabel","_callee12","_callee12$","_context15","interceptNextDialog","currentTarget","use","legacy","consumeActionEconomy","_onLeftClick","_x4","_callee13","_this$activity3","_callee13$","_context16","sheet","render","_onRightClick","_x5","_callee14","_get2","_len11","_key11","weapons","_this6","_args17","_callee14$","_context17","_item$consume","updateItemButtons","_this$activity$consum","_this$activity$uses$v","_this$activity$uses","consumeType","_ammoItem$quantity","ammoItem","Math","floor","getProperty","_chargesItem$uses$val","_chargesItem$uses","chargesItem","uses","per","_game$combat","activationType","_i4","_Object$entries4","_Object$entries4$_i","combatant","components","main","ItemButton","_ARGON$MAIN$BUTTONS$B","_getPanel2","_super13","_ref","_this7","itemsWithSpells","_spells","prePrepareSpells","preparedFlag","some","className","_game$modules$get2","_this8","spellLevels","itemsToIgnore","_this$items$0$system$","_step","IWSAPI","api","_iterator","_createForOfIteratorHelper","_item$flags$itemsWit","_loop4","itemsInSpell","isUsableItem","_item$system$uses","_item$system$uses2","s","n","f","showPreparedOnly","allowIfNotPrepared","preparation","mode","prepared","spells","Infinity","pact","_loop5","_Object$entries5$_i","_Object$entries5","_i5","levelSpells","_callee15","_callee15$","_context18","BUTTON_PANELS","ACCORDION","AccordionPanel","accordionPanelCategories","_ref2","AccordionPanelCategory","ButtonPanel","_getPanel","ButtonPanelButton","_ARGON$MAIN$BUTTONS$A","_createChatMessage","_onLeftClick3","_getTooltipData3","_super14","specialItem","_this9","actorItem","getName","Item","documentClass","_this$item2","_callee16","_callee16$","_context19","_callee17","_game$modules$get3","useCE","_callee17$","_context20","dfreds","effectInterface","findEffect","effectName","toggleEffect","overlay","uuids","uuid","createChatMessage","_x6","_callee18","_callee18$","_context21","ChatMessage","user","speaker","token","alias","content","icon","ActionButton","DND5eMovementHud","_ARGON$MovementHud","_super15","_game$modules$get4","_this10","_len12","_key12","getMovementMode","_game$combat2","started","movement","movementMode","dimensions","MovementHud","DND5eButtonHud","_ARGON$ButtonHud","_getButtons9","_super16","_len13","_key13","_game$combat3","_callee19","_this11","_callee19$","_context22","longRest","shortRest","ButtonHud","DND5eWeaponSets","_ARGON$WeaponSets","_onSetChange2","_getSets2","_getDefaultSets","_super17","_callee20","_this$actor$flags","_actions$0$uuid","_actions$","_bonus$0$uuid","_bonus$","_actions$1$uuid","_actions$2","_bonus$1$uuid","_bonus$2","_actions$2$uuid","_actions$3","_bonus$2$uuid","_bonus$3","sets","isTransformed","actions","_callee20$","_context23","dnd5e","isPolymorphed","primary","secondary","getDefaultSets","_callee21","_this$actor$flags2","_i6","_Object$entries6","_Object$entries6$_i","slots","_callee21$","_context24","t1","foundry","utils","t2","t3","deepClone","mergeObject","fromUuid","t4","t5","_getSets","_callee22","_ref3","updates","activeSet","activeItems","inactiveSets","inactiveItems","_callee22$","_context25","set","flatMap","_item$system3","_id","_item$system4","updateEmbeddedDocuments","_onSetChange","_x7","WeaponSets","enableMacroPanel","mainPanels","PREFAB","MacroPanel","PassTurnPanel","definePortraitPanel","defineDrawerPanel","defineMainPanels","defineMovementHud","defineButtonHud","defineWeaponSets","defineTooltip","defineSupportedActorTypes","_x","_x2","_getTooltipDetails","_callee23","_item$labels4","_item$labels5","_damageTypes","_properties","title","itemType","subtitle","dt","damageTypes","properties","materialComponents","_item$system$descript","_item$labels","_item$labels2","_item$labels3","_i7","_Object$entries7","_Object$entries7$_i","_iterator2","_step2","comp","dmgString","tooltipProperties","_callee23$","_context26","labels","weaponTypes","weaponType","itemActionTypes","weaponProperties","school","spellSchools","all","abbr","materials","consumableTypes","requirements","TextEditor","enrichHTML","toHit","derivedDamage","dDmg","getDamageTypeIcon","damageType","d","_p$label","footerText","toLowerCase","proficiency","condensedItems","barItemsLength","barItemsMultipleOfTwo","currentSplitButtonItemButton","isCondensedButton","arr","_arrayWithHoles","isArray","_iterableToArrayLimit","_s","_e","_r","_arr","_n","_d","_unsupportedIterableToArray","minLen","_arrayLikeToArray","toString","test","_nonIterableRest","len","arr2","registerSettings","registerSettingsArray","register","showWeaponsItems","scope","config","default","onChange","sett","refresh","showClassActions","condenseClassActions","macroPanel","requiresReload","switchEquip"],"sourceRoot":""}